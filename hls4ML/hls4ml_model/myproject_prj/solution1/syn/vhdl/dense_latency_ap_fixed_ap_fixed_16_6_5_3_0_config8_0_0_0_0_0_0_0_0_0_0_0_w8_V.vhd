-- ==============================================================
-- File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ==============================================================

library ieee; 
use ieee.std_logic_1164.all; 
use ieee.std_logic_unsigned.all;

entity dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V_rom is 
    generic(
             DWIDTH     : integer := 11; 
             AWIDTH     : integer := 8; 
             MEM_SIZE    : integer := 250
    ); 
    port (
          addr0      : in std_logic_vector(AWIDTH-1 downto 0); 
          ce0       : in std_logic; 
          q0         : out std_logic_vector(DWIDTH-1 downto 0);
          clk       : in std_logic
    ); 
end entity; 


architecture rtl of dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V_rom is 

signal addr0_tmp : std_logic_vector(AWIDTH-1 downto 0); 
type mem_array is array (0 to MEM_SIZE-1) of std_logic_vector (DWIDTH-1 downto 0); 
signal mem : mem_array := (
    0 => "11000100011", 1 => "11001100000", 2 => "00000110111", 
    3 => "00000001011", 4 => "00011000101", 5 => "11000011010", 
    6 => "00001001100", 7 => "00111011111", 8 => "11001110101", 
    9 => "00000101000", 10 => "00101000101", 11 => "11011100001", 
    12 => "00010001100", 13 => "11001111111", 14 => "11000110111", 
    15 => "00010010101", 16 => "00100010101", 17 => "00010011111", 
    18 => "11000011111", 19 => "11011111101", 20 => "00111110110", 
    21 => "00101010100", 22 => "11110100011", 23 => "11000111011", 
    24 => "00101001011", 25 => "11011100111", 26 => "00101001100", 
    27 => "11110011111", 28 => "11100100011", 29 => "11111111111", 
    30 => "11101001100", 31 => "00000010100", 32 => "11110111011", 
    33 => "11010001101", 34 => "00011011010", 35 => "00011101110", 
    36 => "00101011001", 37 => "11010111111", 38 => "11100101110", 
    39 => "00001001010", 40 => "01001100101", 41 => "11001010100", 
    42 => "00011100011", 43 => "11100010010", 44 => "00011001111", 
    45 => "11100101010", 46 => "11111000001", 47 => "00010101101", 
    48 => "00011111110", 49 => "00100000111", 50 => "11001011010", 
    51 => "11100010010", 52 => "00100011100", 53 => "00110000100", 
    54 => "00010111000", 55 => "00100011001", 56 => "10111011010", 
    57 => "11001011011", 58 => "11001001001", 59 => "00000111101", 
    60 => "11010100101", 61 => "00011011011", 62 => "11100100000", 
    63 => "11010110011", 64 => "00000001011", 65 => "00011001110", 
    66 => "11101111100", 67 => "11011110010", 68 => "00111100010", 
    69 => "11011010010", 70 => "11001001001", 71 => "00100101011", 
    72 => "00010100001", 73 => "11111000110", 74 => "11100101111", 
    75 => "11010110001", 76 => "10111010101", 77 => "00001010110", 
    78 => "11011000011", 79 => "11011001010", 80 => "11101010111", 
    81 => "11101111100", 82 => "00011011000", 83 => "11011111000", 
    84 => "11010000100", 85 => "11111100000", 86 => "11100001001", 
    87 => "11111100100", 88 => "00100101010", 89 => "00000101101", 
    90 => "11011001000", 91 => "00101111011", 92 => "00110100010", 
    93 => "11011110010", 94 => "11011111000", 95 => "10111001001", 
    96 => "11001110011", 97 => "11010101001", 98 => "00110010101", 
    99 => "00011011100", 100 => "11001100011", 101 => "11110011010", 
    102 => "00000110101", 103 => "11110011001", 104 => "11100010100", 
    105 => "00010111000", 106 => "00111100000", 107 => "00011111101", 
    108 => "11010100111", 109 => "11000101000", 110 => "11110010000", 
    111 => "11110001011", 112 => "00101001110", 113 => "01000111101", 
    114 => "11101110111", 115 => "11010100100", 116 => "11010001100", 
    117 => "00111101011", 118 => "00010101000", 119 => "11000111101", 
    120 => "11110110100", 121 => "00001011000", 122 => "11001110010", 
    123 => "00010100110", 124 => "11101010001", 125 => "11010011010", 
    126 => "00001010010", 127 => "11011010001", 128 => "11101000001", 
    129 => "10111101100", 130 => "11110010101", 131 => "11100110010", 
    132 => "11001111010", 133 => "00101100010", 134 => "11110000111", 
    135 => "00100010001", 136 => "11001000110", 137 => "11110010000", 
    138 => "00010101101", 139 => "00110010100", 140 => "00100101001", 
    141 => "11100011001", 142 => "11010111001", 143 => "00110101000", 
    144 => "10101100101", 145 => "11010110110", 146 => "00100101000", 
    147 => "00000011101", 148 => "00100110001", 149 => "00101100110", 
    150 => "11110110011", 151 => "11000010011", 152 => "11000100100", 
    153 => "11100101111", 154 => "00010110100", 155 => "11111010001", 
    156 => "00100100111", 157 => "11011010110", 158 => "10111000100", 
    159 => "11110101000", 160 => "00100101011", 161 => "11011110010", 
    162 => "11111110001", 163 => "00110000000", 164 => "11001010100", 
    165 => "00010100001", 166 => "11001100101", 167 => "10111111110", 
    168 => "00010101000", 169 => "10111011110", 170 => "11001100011", 
    171 => "00110010001", 172 => "11010101010", 173 => "00010100100", 
    174 => "00100101110", 175 => "00010100001", 176 => "00010010111", 
    177 => "11100101000", 178 => "11100101101", 179 => "00100011110", 
    180 => "00001100110", 181 => "00010001101", 182 => "11100100110", 
    183 => "00001111011", 184 => "11100001110", 185 => "11110011110", 
    186 => "11000011110", 187 => "00111011111", 188 => "11110110000", 
    189 => "00011011111", 190 => "00000001000", 191 => "11011000010", 
    192 => "00100001110", 193 => "00000011001", 194 => "01000111010", 
    195 => "11000110111", 196 => "11001001000", 197 => "11011001010", 
    198 => "11100000100", 199 => "11110011001", 200 => "00110100001", 
    201 => "11111110010", 202 => "00100000101", 203 => "11110101111", 
    204 => "11000101100", 205 => "11101100001", 206 => "00110001011", 
    207 => "11100111000", 208 => "00010110001", 209 => "00001000011", 
    210 => "00101111011", 211 => "00110011101", 212 => "11001000001", 
    213 => "00010000110", 214 => "00110100101", 215 => "00111010110", 
    216 => "00000000110", 217 => "00100001100", 218 => "00011010000", 
    219 => "00101010110", 220 => "11110100110", 221 => "11100011011", 
    222 => "11111100111", 223 => "00000100100", 224 => "00100000111", 
    225 => "00001101011", 226 => "00110011111", 227 => "11100111111", 
    228 => "00101111010", 229 => "11001000101", 230 => "11001101010", 
    231 => "11001101011", 232 => "00000011100", 233 => "11100111111", 
    234 => "00001000000", 235 => "00011001011", 236 => "11111011100", 
    237 => "00000110100", 238 => "00011110111", 239 => "00011000100", 
    240 => "00100011111", 241 => "11011001111", 242 => "00010110000", 
    243 => "11101110111", 244 => "00010111001", 245 => "11010010010", 
    246 => "11010001011", 247 => "00111101110", 248 => "11101110011", 
    249 => "00101100101" );


begin 


memory_access_guard_0: process (addr0) 
begin
      addr0_tmp <= addr0;
--synthesis translate_off
      if (CONV_INTEGER(addr0) > mem_size-1) then
           addr0_tmp <= (others => '0');
      else 
           addr0_tmp <= addr0;
      end if;
--synthesis translate_on
end process;

p_rom_access: process (clk)  
begin 
    if (clk'event and clk = '1') then
        if (ce0 = '1') then 
            q0 <= mem(CONV_INTEGER(addr0_tmp)); 
        end if;
    end if;
end process;

end rtl;


Library IEEE;
use IEEE.std_logic_1164.all;

entity dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V is
    generic (
        DataWidth : INTEGER := 11;
        AddressRange : INTEGER := 250;
        AddressWidth : INTEGER := 8);
    port (
        reset : IN STD_LOGIC;
        clk : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR(AddressWidth - 1 DOWNTO 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR(DataWidth - 1 DOWNTO 0));
end entity;

architecture arch of dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V is
    component dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V_rom is
        port (
            clk : IN STD_LOGIC;
            addr0 : IN STD_LOGIC_VECTOR;
            ce0 : IN STD_LOGIC;
            q0 : OUT STD_LOGIC_VECTOR);
    end component;



begin
    dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V_rom_U :  component dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V_rom
    port map (
        clk => clk,
        addr0 => address0,
        ce0 => ce0,
        q0 => q0);

end architecture;


