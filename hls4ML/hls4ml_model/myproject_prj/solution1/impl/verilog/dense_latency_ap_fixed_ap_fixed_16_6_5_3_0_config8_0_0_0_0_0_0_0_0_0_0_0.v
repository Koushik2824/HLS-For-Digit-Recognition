// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_read,
        p_read1,
        p_read2,
        p_read3,
        p_read4,
        p_read5,
        p_read6,
        p_read7,
        p_read8,
        p_read9,
        p_read10,
        p_read11,
        p_read12,
        p_read13,
        p_read14,
        p_read15,
        p_read16,
        p_read17,
        p_read18,
        p_read19,
        p_read20,
        p_read21,
        p_read22,
        p_read23,
        p_read24,
        ap_return_0,
        ap_return_1,
        ap_return_2,
        ap_return_3,
        ap_return_4,
        ap_return_5,
        ap_return_6,
        ap_return_7,
        ap_return_8,
        ap_return_9
);

parameter    ap_ST_fsm_state1 = 12'd1;
parameter    ap_ST_fsm_state2 = 12'd2;
parameter    ap_ST_fsm_state3 = 12'd4;
parameter    ap_ST_fsm_state4 = 12'd8;
parameter    ap_ST_fsm_state5 = 12'd16;
parameter    ap_ST_fsm_state6 = 12'd32;
parameter    ap_ST_fsm_state7 = 12'd64;
parameter    ap_ST_fsm_state8 = 12'd128;
parameter    ap_ST_fsm_state9 = 12'd256;
parameter    ap_ST_fsm_state10 = 12'd512;
parameter    ap_ST_fsm_state11 = 12'd1024;
parameter    ap_ST_fsm_state12 = 12'd2048;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [15:0] p_read;
input  [15:0] p_read1;
input  [15:0] p_read2;
input  [15:0] p_read3;
input  [15:0] p_read4;
input  [15:0] p_read5;
input  [15:0] p_read6;
input  [15:0] p_read7;
input  [15:0] p_read8;
input  [15:0] p_read9;
input  [15:0] p_read10;
input  [15:0] p_read11;
input  [15:0] p_read12;
input  [15:0] p_read13;
input  [15:0] p_read14;
input  [15:0] p_read15;
input  [15:0] p_read16;
input  [15:0] p_read17;
input  [15:0] p_read18;
input  [15:0] p_read19;
input  [15:0] p_read20;
input  [15:0] p_read21;
input  [15:0] p_read22;
input  [15:0] p_read23;
input  [15:0] p_read24;
output  [15:0] ap_return_0;
output  [15:0] ap_return_1;
output  [15:0] ap_return_2;
output  [15:0] ap_return_3;
output  [15:0] ap_return_4;
output  [15:0] ap_return_5;
output  [15:0] ap_return_6;
output  [15:0] ap_return_7;
output  [15:0] ap_return_8;
output  [15:0] ap_return_9;

reg ap_done;
reg ap_idle;
reg ap_ready;

(* fsm_encoding = "none" *) reg   [11:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
wire   [7:0] w8_V_address0;
reg    w8_V_ce0;
wire   [10:0] w8_V_q0;
wire   [4:0] ii_1_fu_1574_p2;
reg   [4:0] ii_1_reg_2300;
wire    ap_CS_fsm_state2;
wire   [7:0] p_shl_fu_1611_p3;
reg   [7:0] p_shl_reg_2305;
wire   [0:0] tmp_fu_1568_p2;
wire   [5:0] p_shl1_fu_1619_p3;
reg   [5:0] p_shl1_reg_2310;
wire  signed [25:0] OP1_V_cast_fu_1627_p1;
reg  signed [25:0] OP1_V_cast_reg_2315;
wire   [3:0] jj_1_fu_1641_p2;
reg   [3:0] jj_1_reg_2383;
wire    ap_CS_fsm_state3;
wire   [63:0] tmp_6_fu_1661_p1;
reg   [63:0] tmp_6_reg_2388;
wire   [0:0] tmp_3_fu_1635_p2;
reg   [15:0] tmp_9_reg_2398;
wire    ap_CS_fsm_state4;
wire   [3:0] iacc_1_fu_1717_p2;
reg   [3:0] iacc_1_reg_2406;
wire    ap_CS_fsm_state6;
wire   [4:0] ii_2_fu_1855_p2;
reg   [4:0] ii_2_reg_2484;
wire    ap_CS_fsm_state8;
wire   [7:0] p_shl2_fu_1861_p3;
reg   [7:0] p_shl2_reg_2489;
wire   [0:0] tmp_2_fu_1849_p2;
wire   [5:0] p_shl3_fu_1869_p3;
reg   [5:0] p_shl3_reg_2494;
wire   [3:0] jj_2_fu_1887_p2;
reg   [3:0] jj_2_reg_2562;
wire    ap_CS_fsm_state9;
wire   [0:0] tmp_5_fu_1881_p2;
wire   [3:0] ires_1_fu_2000_p2;
reg   [3:0] ires_1_reg_2575;
wire    ap_CS_fsm_state11;
reg   [7:0] mult_V_address0;
reg    mult_V_ce0;
reg    mult_V_we0;
wire   [15:0] mult_V_q0;
reg   [4:0] ii_reg_464;
reg   [3:0] jj_reg_475;
wire    ap_CS_fsm_state5;
wire   [3:0] ap_phi_mux_iacc_phi_fu_490_p4;
reg   [3:0] iacc_reg_486;
wire    ap_CS_fsm_state7;
reg   [4:0] ii2_reg_497;
wire   [0:0] tmp_s_fu_1711_p2;
reg   [3:0] jj3_reg_508;
wire    ap_CS_fsm_state10;
wire   [3:0] ap_phi_mux_ires_phi_fu_524_p4;
reg   [3:0] ires_reg_520;
wire    ap_CS_fsm_state12;
wire   [63:0] tmp_10_fu_1907_p1;
reg   [15:0] acc_9_V_1_fu_162;
wire   [15:0] acc_0_V_fu_1723_p12;
reg   [15:0] acc_9_V_3_fu_166;
reg   [15:0] acc_9_V_4_fu_170;
reg   [15:0] acc_9_V_5_fu_174;
reg   [15:0] acc_9_V_6_fu_178;
reg   [15:0] acc_9_V_7_fu_182;
reg   [15:0] acc_9_V_8_fu_186;
reg   [15:0] acc_9_V_9_fu_190;
reg   [15:0] acc_9_V_10_fu_194;
reg   [15:0] acc_9_V_fu_198;
reg   [15:0] acc_9_V_11_fu_202;
wire   [15:0] acc_0_V_1_fu_1938_p2;
wire   [0:0] tmp_4_fu_1994_p2;
reg   [15:0] acc_9_V_12_fu_206;
reg   [15:0] acc_9_V_13_fu_210;
reg   [15:0] acc_9_V_14_fu_214;
reg   [15:0] acc_9_V_15_fu_218;
reg   [15:0] acc_9_V_16_fu_222;
reg   [15:0] acc_9_V_17_fu_226;
reg   [15:0] acc_9_V_18_fu_230;
reg   [15:0] acc_9_V_19_fu_234;
reg   [15:0] acc_9_V_2_fu_238;
reg   [15:0] res_9_V_write_assign_fu_242;
wire   [15:0] tmp_37_fu_2006_p12;
reg   [15:0] res_8_V_write_assign_fu_246;
reg   [15:0] res_0_V_write_assign_fu_250;
reg   [15:0] res_7_V_write_assign_fu_254;
reg   [15:0] res_6_V_write_assign_fu_258;
reg   [15:0] res_1_V_write_assign_fu_262;
reg   [15:0] res_5_V_write_assign_fu_266;
reg   [15:0] res_4_V_write_assign_fu_270;
reg   [15:0] res_2_V_write_assign_fu_274;
reg   [15:0] res_3_V_write_assign_fu_278;
wire  signed [15:0] p_Val2_s_fu_680_p0;
wire  signed [10:0] p_Val2_s_fu_680_p1;
wire   [15:0] cache_V_fu_1580_p27;
wire   [5:0] jj_cast_fu_1631_p1;
wire   [5:0] tmp1_fu_1647_p2;
wire   [7:0] tmp25_cast_fu_1652_p1;
wire   [7:0] index_fu_1656_p2;
wire   [25:0] p_Val2_s_fu_680_p2;
wire   [5:0] jj3_cast_fu_1877_p1;
wire   [5:0] tmp2_fu_1893_p2;
wire   [7:0] tmp26_cast_fu_1898_p1;
wire   [7:0] index_1_fu_1902_p2;
wire   [15:0] p_Val2_37_fu_1912_p12;
reg   [11:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 ap_CS_fsm = 12'd1;
end

dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_w8_V #(
    .DataWidth( 11 ),
    .AddressRange( 250 ),
    .AddressWidth( 8 ))
w8_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(w8_V_address0),
    .ce0(w8_V_ce0),
    .q0(w8_V_q0)
);

dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0_mult_V #(
    .DataWidth( 16 ),
    .AddressRange( 250 ),
    .AddressWidth( 8 ))
mult_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(mult_V_address0),
    .ce0(mult_V_ce0),
    .we0(mult_V_we0),
    .d0(tmp_9_reg_2398),
    .q0(mult_V_q0)
);

myproject_mux_255_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 16 ),
    .din11_WIDTH( 16 ),
    .din12_WIDTH( 16 ),
    .din13_WIDTH( 16 ),
    .din14_WIDTH( 16 ),
    .din15_WIDTH( 16 ),
    .din16_WIDTH( 16 ),
    .din17_WIDTH( 16 ),
    .din18_WIDTH( 16 ),
    .din19_WIDTH( 16 ),
    .din20_WIDTH( 16 ),
    .din21_WIDTH( 16 ),
    .din22_WIDTH( 16 ),
    .din23_WIDTH( 16 ),
    .din24_WIDTH( 16 ),
    .din25_WIDTH( 5 ),
    .dout_WIDTH( 16 ))
myproject_mux_255_16_1_1_U350(
    .din0(p_read),
    .din1(p_read1),
    .din2(p_read2),
    .din3(p_read3),
    .din4(p_read4),
    .din5(p_read5),
    .din6(p_read6),
    .din7(p_read7),
    .din8(p_read8),
    .din9(p_read9),
    .din10(p_read10),
    .din11(p_read11),
    .din12(p_read12),
    .din13(p_read13),
    .din14(p_read14),
    .din15(p_read15),
    .din16(p_read16),
    .din17(p_read17),
    .din18(p_read18),
    .din19(p_read19),
    .din20(p_read20),
    .din21(p_read21),
    .din22(p_read22),
    .din23(p_read23),
    .din24(p_read24),
    .din25(ii_reg_464),
    .dout(cache_V_fu_1580_p27)
);

myproject_mux_104_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_104_16_1_1_U351(
    .din0(16'd65442),
    .din1(16'd65499),
    .din2(16'd65519),
    .din3(16'd65481),
    .din4(16'd65531),
    .din5(16'd121),
    .din6(16'd65426),
    .din7(16'd65518),
    .din8(16'd74),
    .din9(16'd19),
    .din10(iacc_reg_486),
    .dout(acc_0_V_fu_1723_p12)
);

myproject_mux_104_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_104_16_1_1_U352(
    .din0(acc_9_V_11_fu_202),
    .din1(acc_9_V_12_fu_206),
    .din2(acc_9_V_13_fu_210),
    .din3(acc_9_V_14_fu_214),
    .din4(acc_9_V_15_fu_218),
    .din5(acc_9_V_16_fu_222),
    .din6(acc_9_V_17_fu_226),
    .din7(acc_9_V_18_fu_230),
    .din8(acc_9_V_19_fu_234),
    .din9(acc_9_V_2_fu_238),
    .din10(jj3_reg_508),
    .dout(p_Val2_37_fu_1912_p12)
);

myproject_mux_104_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 16 ),
    .din3_WIDTH( 16 ),
    .din4_WIDTH( 16 ),
    .din5_WIDTH( 16 ),
    .din6_WIDTH( 16 ),
    .din7_WIDTH( 16 ),
    .din8_WIDTH( 16 ),
    .din9_WIDTH( 16 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 16 ))
myproject_mux_104_16_1_1_U353(
    .din0(acc_9_V_11_fu_202),
    .din1(acc_9_V_12_fu_206),
    .din2(acc_9_V_13_fu_210),
    .din3(acc_9_V_14_fu_214),
    .din4(acc_9_V_15_fu_218),
    .din5(acc_9_V_16_fu_222),
    .din6(acc_9_V_17_fu_226),
    .din7(acc_9_V_18_fu_230),
    .din8(acc_9_V_19_fu_234),
    .din9(acc_9_V_2_fu_238),
    .din10(ires_reg_520),
    .dout(tmp_37_fu_2006_p12)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_11_fu_202 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_11_fu_202 <= acc_9_V_1_fu_162;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd1) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_12_fu_206 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_12_fu_206 <= acc_9_V_3_fu_166;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd2) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_13_fu_210 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_13_fu_210 <= acc_9_V_4_fu_170;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd3) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_14_fu_214 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_14_fu_214 <= acc_9_V_5_fu_174;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd4) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_15_fu_218 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_15_fu_218 <= acc_9_V_6_fu_178;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd5) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_16_fu_222 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_16_fu_222 <= acc_9_V_7_fu_182;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd6) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_17_fu_226 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_17_fu_226 <= acc_9_V_8_fu_186;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd7) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_18_fu_230 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_18_fu_230 <= acc_9_V_9_fu_190;
    end
end

always @ (posedge ap_clk) begin
    if (((jj3_reg_508 == 4'd8) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_19_fu_234 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_19_fu_234 <= acc_9_V_10_fu_194;
    end
end

always @ (posedge ap_clk) begin
    if ((~(jj3_reg_508 == 4'd8) & ~(jj3_reg_508 == 4'd7) & ~(jj3_reg_508 == 4'd6) & ~(jj3_reg_508 == 4'd5) & ~(jj3_reg_508 == 4'd4) & ~(jj3_reg_508 == 4'd3) & ~(jj3_reg_508 == 4'd2) & ~(jj3_reg_508 == 4'd1) & ~(jj3_reg_508 == 4'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        acc_9_V_2_fu_238 <= acc_0_V_1_fu_1938_p2;
    end else if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        acc_9_V_2_fu_238 <= acc_9_V_fu_198;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        iacc_reg_486 <= iacc_1_reg_2406;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_1568_p2 == 1'd1))) begin
        iacc_reg_486 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        ii2_reg_497 <= 5'd0;
    end else if (((1'b1 == ap_CS_fsm_state9) & (tmp_5_fu_1881_p2 == 1'd1))) begin
        ii2_reg_497 <= ii_2_reg_2484;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_1635_p2 == 1'd1))) begin
        ii_reg_464 <= ii_1_reg_2300;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        ii_reg_464 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        ires_reg_520 <= ires_1_reg_2575;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_fu_1849_p2 == 1'd1))) begin
        ires_reg_520 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        jj3_reg_508 <= jj_2_reg_2562;
    end else if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_fu_1849_p2 == 1'd0))) begin
        jj3_reg_508 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        jj_reg_475 <= jj_1_reg_2383;
    end else if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_1568_p2 == 1'd0))) begin
        jj_reg_475 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_1568_p2 == 1'd0))) begin
        OP1_V_cast_reg_2315 <= OP1_V_cast_fu_1627_p1;
        p_shl1_reg_2310[5 : 1] <= p_shl1_fu_1619_p3[5 : 1];
        p_shl_reg_2305[7 : 3] <= p_shl_fu_1611_p3[7 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd8) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_10_fu_194 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_1_fu_162 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd1) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_3_fu_166 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd2) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_4_fu_170 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd3) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_5_fu_174 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd4) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_6_fu_178 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd5) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_7_fu_182 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd6) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_8_fu_186 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_iacc_phi_fu_490_p4 == 4'd7) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_9_fu_190 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd8) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd7) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd6) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd5) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd4) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd3) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd2) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd1) & ~(ap_phi_mux_iacc_phi_fu_490_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state6) & (tmp_s_fu_1711_p2 == 1'd0))) begin
        acc_9_V_fu_198 <= acc_0_V_fu_1723_p12;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        iacc_1_reg_2406 <= iacc_1_fu_1717_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        ii_1_reg_2300 <= ii_1_fu_1574_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        ii_2_reg_2484 <= ii_2_fu_1855_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        ires_1_reg_2575 <= ires_1_fu_2000_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        jj_1_reg_2383 <= jj_1_fu_1641_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        jj_2_reg_2562 <= jj_2_fu_1887_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_fu_1849_p2 == 1'd0))) begin
        p_shl2_reg_2489[7 : 3] <= p_shl2_fu_1861_p3[7 : 3];
        p_shl3_reg_2494[5 : 1] <= p_shl3_fu_1869_p3[5 : 1];
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_0_V_write_assign_fu_250 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd1) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_1_V_write_assign_fu_262 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd2) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_2_V_write_assign_fu_274 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd3) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_3_V_write_assign_fu_278 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd4) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_4_V_write_assign_fu_270 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd5) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_5_V_write_assign_fu_266 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd6) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_6_V_write_assign_fu_258 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd7) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_7_V_write_assign_fu_254 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_phi_mux_ires_phi_fu_524_p4 == 4'd8) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_8_V_write_assign_fu_246 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if ((~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd8) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd7) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd6) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd5) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd4) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd3) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd2) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd1) & ~(ap_phi_mux_ires_phi_fu_524_p4 == 4'd0) & (1'b1 == ap_CS_fsm_state11) & (tmp_4_fu_1994_p2 == 1'd0))) begin
        res_9_V_write_assign_fu_242 <= tmp_37_fu_2006_p12;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_1635_p2 == 1'd0))) begin
        tmp_6_reg_2388[7 : 0] <= tmp_6_fu_1661_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_9_reg_2398 <= {{p_Val2_s_fu_680_p2[25:10]}};
    end
end

always @ (*) begin
    if ((((tmp_4_fu_1994_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_4_fu_1994_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        mult_V_address0 = tmp_10_fu_1907_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        mult_V_address0 = tmp_6_reg_2388;
    end else begin
        mult_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state9))) begin
        mult_V_ce0 = 1'b1;
    end else begin
        mult_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mult_V_we0 = 1'b1;
    end else begin
        mult_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        w8_V_ce0 = 1'b1;
    end else begin
        w8_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (tmp_fu_1568_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (tmp_3_fu_1635_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state6 : begin
            if (((tmp_s_fu_1711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            if (((1'b1 == ap_CS_fsm_state8) & (tmp_2_fu_1849_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state9 : begin
            if (((1'b1 == ap_CS_fsm_state9) & (tmp_5_fu_1881_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state11 : begin
            if (((tmp_4_fu_1994_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign OP1_V_cast_fu_1627_p1 = $signed(cache_V_fu_1580_p27);

assign acc_0_V_1_fu_1938_p2 = (mult_V_q0 + p_Val2_37_fu_1912_p12);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_phi_mux_iacc_phi_fu_490_p4 = iacc_reg_486;

assign ap_phi_mux_ires_phi_fu_524_p4 = ires_reg_520;

assign ap_return_0 = res_0_V_write_assign_fu_250;

assign ap_return_1 = res_1_V_write_assign_fu_262;

assign ap_return_2 = res_2_V_write_assign_fu_274;

assign ap_return_3 = res_3_V_write_assign_fu_278;

assign ap_return_4 = res_4_V_write_assign_fu_270;

assign ap_return_5 = res_5_V_write_assign_fu_266;

assign ap_return_6 = res_6_V_write_assign_fu_258;

assign ap_return_7 = res_7_V_write_assign_fu_254;

assign ap_return_8 = res_8_V_write_assign_fu_246;

assign ap_return_9 = res_9_V_write_assign_fu_242;

assign iacc_1_fu_1717_p2 = (iacc_reg_486 + 4'd1);

assign ii_1_fu_1574_p2 = (ii_reg_464 + 5'd1);

assign ii_2_fu_1855_p2 = (ii2_reg_497 + 5'd1);

assign index_1_fu_1902_p2 = (tmp26_cast_fu_1898_p1 + p_shl2_reg_2489);

assign index_fu_1656_p2 = (tmp25_cast_fu_1652_p1 + p_shl_reg_2305);

assign ires_1_fu_2000_p2 = (ires_reg_520 + 4'd1);

assign jj3_cast_fu_1877_p1 = jj3_reg_508;

assign jj_1_fu_1641_p2 = (jj_reg_475 + 4'd1);

assign jj_2_fu_1887_p2 = (jj3_reg_508 + 4'd1);

assign jj_cast_fu_1631_p1 = jj_reg_475;

assign p_Val2_s_fu_680_p0 = OP1_V_cast_reg_2315;

assign p_Val2_s_fu_680_p1 = w8_V_q0;

assign p_Val2_s_fu_680_p2 = ($signed(p_Val2_s_fu_680_p0) * $signed(p_Val2_s_fu_680_p1));

assign p_shl1_fu_1619_p3 = {{ii_reg_464}, {1'd0}};

assign p_shl2_fu_1861_p3 = {{ii2_reg_497}, {3'd0}};

assign p_shl3_fu_1869_p3 = {{ii2_reg_497}, {1'd0}};

assign p_shl_fu_1611_p3 = {{ii_reg_464}, {3'd0}};

assign tmp1_fu_1647_p2 = (p_shl1_reg_2310 + jj_cast_fu_1631_p1);

assign tmp25_cast_fu_1652_p1 = tmp1_fu_1647_p2;

assign tmp26_cast_fu_1898_p1 = tmp2_fu_1893_p2;

assign tmp2_fu_1893_p2 = (p_shl3_reg_2494 + jj3_cast_fu_1877_p1);

assign tmp_10_fu_1907_p1 = index_1_fu_1902_p2;

assign tmp_2_fu_1849_p2 = ((ii2_reg_497 == 5'd25) ? 1'b1 : 1'b0);

assign tmp_3_fu_1635_p2 = ((jj_reg_475 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_4_fu_1994_p2 = ((ires_reg_520 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_5_fu_1881_p2 = ((jj3_reg_508 == 4'd10) ? 1'b1 : 1'b0);

assign tmp_6_fu_1661_p1 = index_fu_1656_p2;

assign tmp_fu_1568_p2 = ((ii_reg_464 == 5'd25) ? 1'b1 : 1'b0);

assign tmp_s_fu_1711_p2 = ((iacc_reg_486 == 4'd10) ? 1'b1 : 1'b0);

assign w8_V_address0 = tmp_6_fu_1661_p1;

always @ (posedge ap_clk) begin
    p_shl_reg_2305[2:0] <= 3'b000;
    p_shl1_reg_2310[0] <= 1'b0;
    tmp_6_reg_2388[63:8] <= 56'b00000000000000000000000000000000000000000000000000000000;
    p_shl2_reg_2489[2:0] <= 3'b000;
    p_shl3_reg_2494[0] <= 1'b0;
end

endmodule //dense_latency_ap_fixed_ap_fixed_16_6_5_3_0_config8_0_0_0_0_0_0_0_0_0_0_0
