-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity k2c_dense is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    output_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    output_array_ce0 : OUT STD_LOGIC;
    output_array_we0 : OUT STD_LOGIC;
    output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    input_array_ce0 : OUT STD_LOGIC;
    input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
    input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    input_shape_ce0 : OUT STD_LOGIC;
    input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    kernel_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    kernel_array_ce0 : OUT STD_LOGIC;
    kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    kernel_shape_ce0 : OUT STD_LOGIC;
    kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    bias_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    bias_array_ce0 : OUT STD_LOGIC;
    bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of k2c_dense is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv64_64 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001100100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv6_24 : STD_LOGIC_VECTOR (5 downto 0) := "100100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal tmp_fu_203_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_reg_304 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_7_fu_209_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_7_reg_308 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_fu_226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_reg_313 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_i_cast_fu_236_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal i_i_cast_reg_328 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal j_fu_261_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_reg_339 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal exitcond_i_fu_255_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_array_addr_reg_349 : STD_LOGIC_VECTOR (16 downto 0);
    signal i_fu_277_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal bias_array_load_reg_359 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal output_array_load_reg_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_199_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_i_reg_369 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal outrows1_fu_283_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal outrows1_reg_374 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal outcols_reg_380 : STD_LOGIC_VECTOR (63 downto 0);
    signal innerdim_reg_391 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal grp_fu_290_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal outsize_reg_396 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal grp_k2c_affine_matmul_fu_175_ap_idle : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_ap_ready : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_ap_done : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_ap_start : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_ap_done : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_ap_idle : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_ap_ready : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_C_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dot_3_fu_154_C_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_C_array_we0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_C_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dot_3_fu_154_A_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dot_3_fu_154_A_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_A_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_3_fu_154_A_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_B_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dot_3_fu_154_B_array_ce0 : STD_LOGIC;
    signal grp_k2c_dot_3_fu_154_B_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dot_3_fu_154_B_shape_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_ap_start : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_C_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_affine_matmul_fu_175_C_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_C_we0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_C_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_affine_matmul_fu_175_A_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_affine_matmul_fu_175_A_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_B_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_affine_matmul_fu_175_B_ce0 : STD_LOGIC;
    signal grp_k2c_affine_matmul_fu_175_d_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_affine_matmul_fu_175_d_ce0 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_ap_start : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_ap_done : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_ap_idle : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_ap_ready : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_x_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_relu_func_fu_191_x_ce0 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_x_we0 : STD_LOGIC;
    signal grp_k2c_relu_func_fu_191_x_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_relu_func_fu_191_size : STD_LOGIC_VECTOR (63 downto 0);
    signal i_i_reg_131 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal j_i_reg_143 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal tmp_i_fu_240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_k2c_dot_3_fu_154_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_affine_matmul_fu_175_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_relu_func_fu_191_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal j_i_cast1_fu_246_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_i_cast_fu_272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal tmp_76_fu_216_p4 : STD_LOGIC_VECTOR (62 downto 0);
    signal i_i_cast1_fu_232_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal j_i_cast_fu_251_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_i_42_fu_267_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_290_ce : STD_LOGIC;
    signal ap_block_state17_on_subcall_done : BOOLEAN;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);

    component k2c_dot_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        C_array_ce0 : OUT STD_LOGIC;
        C_array_we0 : OUT STD_LOGIC;
        C_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        A_array_ce0 : OUT STD_LOGIC;
        A_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        A_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        A_shape_ce0 : OUT STD_LOGIC;
        A_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        B_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        B_array_ce0 : OUT STD_LOGIC;
        B_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        B_shape_ce0 : OUT STD_LOGIC;
        B_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        p_read4 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_affine_matmul IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        C_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        C_ce0 : OUT STD_LOGIC;
        C_we0 : OUT STD_LOGIC;
        C_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        C_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        A_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        A_ce0 : OUT STD_LOGIC;
        A_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        B_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        B_ce0 : OUT STD_LOGIC;
        B_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        d_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        d_ce0 : OUT STD_LOGIC;
        d_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        outrows : IN STD_LOGIC_VECTOR (63 downto 0);
        outcols : IN STD_LOGIC_VECTOR (63 downto 0);
        innerdim : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_relu_func IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        x_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        x_ce0 : OUT STD_LOGIC;
        x_we0 : OUT STD_LOGIC;
        x_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        x_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        size : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component vlsiModel_fadd_32cud IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_mul_64sbkb IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (63 downto 0);
        din1 : IN STD_LOGIC_VECTOR (63 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    grp_k2c_dot_3_fu_154 : component k2c_dot_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dot_3_fu_154_ap_start,
        ap_done => grp_k2c_dot_3_fu_154_ap_done,
        ap_idle => grp_k2c_dot_3_fu_154_ap_idle,
        ap_ready => grp_k2c_dot_3_fu_154_ap_ready,
        C_array_address0 => grp_k2c_dot_3_fu_154_C_array_address0,
        C_array_ce0 => grp_k2c_dot_3_fu_154_C_array_ce0,
        C_array_we0 => grp_k2c_dot_3_fu_154_C_array_we0,
        C_array_d0 => grp_k2c_dot_3_fu_154_C_array_d0,
        C_array_q0 => output_array_q0,
        A_array_address0 => grp_k2c_dot_3_fu_154_A_array_address0,
        A_array_ce0 => grp_k2c_dot_3_fu_154_A_array_ce0,
        A_array_q0 => input_array_q0,
        A_ndim_read => input_ndim_read,
        A_numel_read => input_numel_read,
        A_shape_address0 => grp_k2c_dot_3_fu_154_A_shape_address0,
        A_shape_ce0 => grp_k2c_dot_3_fu_154_A_shape_ce0,
        A_shape_q0 => input_shape_q0,
        B_array_address0 => grp_k2c_dot_3_fu_154_B_array_address0,
        B_array_ce0 => grp_k2c_dot_3_fu_154_B_array_ce0,
        B_array_q0 => kernel_array_q0,
        B_shape_address0 => grp_k2c_dot_3_fu_154_B_shape_address0,
        B_shape_ce0 => grp_k2c_dot_3_fu_154_B_shape_ce0,
        B_shape_q0 => kernel_shape_q0,
        p_read4 => tmp_7_reg_308);

    grp_k2c_affine_matmul_fu_175 : component k2c_affine_matmul
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_affine_matmul_fu_175_ap_start,
        ap_done => grp_k2c_affine_matmul_fu_175_ap_done,
        ap_idle => grp_k2c_affine_matmul_fu_175_ap_idle,
        ap_ready => grp_k2c_affine_matmul_fu_175_ap_ready,
        C_address0 => grp_k2c_affine_matmul_fu_175_C_address0,
        C_ce0 => grp_k2c_affine_matmul_fu_175_C_ce0,
        C_we0 => grp_k2c_affine_matmul_fu_175_C_we0,
        C_d0 => grp_k2c_affine_matmul_fu_175_C_d0,
        C_q0 => output_array_q0,
        A_address0 => grp_k2c_affine_matmul_fu_175_A_address0,
        A_ce0 => grp_k2c_affine_matmul_fu_175_A_ce0,
        A_q0 => input_array_q0,
        B_address0 => grp_k2c_affine_matmul_fu_175_B_address0,
        B_ce0 => grp_k2c_affine_matmul_fu_175_B_ce0,
        B_q0 => kernel_array_q0,
        d_address0 => grp_k2c_affine_matmul_fu_175_d_address0,
        d_ce0 => grp_k2c_affine_matmul_fu_175_d_ce0,
        d_q0 => bias_array_q0,
        outrows => outrows1_reg_374,
        outcols => outcols_reg_380,
        innerdim => innerdim_reg_391);

    grp_k2c_relu_func_fu_191 : component k2c_relu_func
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_relu_func_fu_191_ap_start,
        ap_done => grp_k2c_relu_func_fu_191_ap_done,
        ap_idle => grp_k2c_relu_func_fu_191_ap_idle,
        ap_ready => grp_k2c_relu_func_fu_191_ap_ready,
        x_address0 => grp_k2c_relu_func_fu_191_x_address0,
        x_ce0 => grp_k2c_relu_func_fu_191_x_ce0,
        x_we0 => grp_k2c_relu_func_fu_191_x_we0,
        x_d0 => grp_k2c_relu_func_fu_191_x_d0,
        x_q0 => output_array_q0,
        size => grp_k2c_relu_func_fu_191_size);

    vlsiModel_fadd_32cud_U59 : component vlsiModel_fadd_32cud
    generic map (
        ID => 1,
        NUM_STAGE => 5,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => output_array_load_reg_364,
        din1 => bias_array_load_reg_359,
        ce => ap_const_logic_1,
        dout => grp_fu_199_p2);

    vlsiModel_mul_64sbkb_U60 : component vlsiModel_mul_64sbkb
    generic map (
        ID => 1,
        NUM_STAGE => 2,
        din0_WIDTH => 64,
        din1_WIDTH => 64,
        dout_WIDTH => 64)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => outcols_reg_380,
        din1 => outrows1_reg_374,
        ce => grp_fu_290_ce,
        dout => grp_fu_290_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_k2c_affine_matmul_fu_175_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_affine_matmul_fu_175_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
                    grp_k2c_affine_matmul_fu_175_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_affine_matmul_fu_175_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_affine_matmul_fu_175_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dot_3_fu_154_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dot_3_fu_154_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_fu_203_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    grp_k2c_dot_3_fu_154_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dot_3_fu_154_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dot_3_fu_154_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_relu_func_fu_191_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_relu_func_fu_191_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state16) or ((tmp_i_fu_240_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
                    grp_k2c_relu_func_fu_191_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_relu_func_fu_191_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_relu_func_fu_191_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_i_reg_131_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_255_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                i_i_reg_131 <= i_fu_277_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_k2c_dot_3_fu_154_ap_done = ap_const_logic_1))) then 
                i_i_reg_131 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    j_i_reg_143_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_i_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                j_i_reg_143 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                j_i_reg_143 <= j_reg_339;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                bias_array_load_reg_359 <= bias_array_q0;
                output_array_load_reg_364 <= output_array_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                    i_i_cast_reg_328(6 downto 0) <= i_i_cast_fu_236_p1(6 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_203_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                icmp_reg_313 <= icmp_fu_226_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state14)) then
                innerdim_reg_391 <= kernel_shape_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                j_reg_339 <= j_fu_261_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                outcols_reg_380 <= kernel_shape_q0;
                outrows1_reg_374 <= outrows1_fu_283_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((exitcond_i_fu_255_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    output_array_addr_reg_349(7 downto 0) <= tmp_i_cast_fu_272_p1(17 - 1 downto 0)(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_k2c_affine_matmul_fu_175_ap_done = ap_const_logic_1))) then
                outsize_reg_396 <= grp_fu_290_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                tmp_26_i_reg_369 <= grp_fu_199_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_203_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_7_reg_308 <= tmp_7_fu_209_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                tmp_reg_304 <= tmp_fu_203_p2;
            end if;
        end if;
    end process;
    i_i_cast_reg_328(7) <= '0';
    output_array_addr_reg_349(16 downto 8) <= "000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, tmp_fu_203_p2, ap_CS_fsm_state3, ap_CS_fsm_state4, exitcond_i_fu_255_p2, ap_CS_fsm_state15, grp_k2c_affine_matmul_fu_175_ap_done, grp_k2c_dot_3_fu_154_ap_done, grp_k2c_relu_func_fu_191_ap_done, ap_CS_fsm_state2, tmp_i_fu_240_p2, ap_CS_fsm_state12, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((tmp_fu_203_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((tmp_fu_203_p2 = ap_const_lv1_0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_k2c_dot_3_fu_154_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((tmp_i_fu_240_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state4 => 
                if (((exitcond_i_fu_255_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state12 => 
                if (((grp_k2c_relu_func_fu_191_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_k2c_affine_matmul_fu_175_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);

    ap_block_state17_on_subcall_done_assign_proc : process(tmp_reg_304, grp_k2c_relu_func_fu_191_ap_done)
    begin
                ap_block_state17_on_subcall_done <= ((tmp_reg_304 = ap_const_lv1_1) and (grp_k2c_relu_func_fu_191_ap_done = ap_const_logic_0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        if ((((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state17, ap_block_state17_on_subcall_done)
    begin
        if (((ap_const_boolean_0 = ap_block_state17_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bias_array_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state15, grp_k2c_affine_matmul_fu_175_d_address0, j_i_cast1_fu_246_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bias_array_address0 <= j_i_cast1_fu_246_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            bias_array_address0 <= grp_k2c_affine_matmul_fu_175_d_address0;
        else 
            bias_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    bias_array_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state15, grp_k2c_affine_matmul_fu_175_d_ce0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            bias_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            bias_array_ce0 <= grp_k2c_affine_matmul_fu_175_d_ce0;
        else 
            bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    exitcond_i_fu_255_p2 <= "1" when (j_i_reg_143 = ap_const_lv7_64) else "0";

    grp_fu_290_ce_assign_proc : process(ap_CS_fsm_state14, ap_CS_fsm_state15, grp_k2c_affine_matmul_fu_175_ap_done)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (grp_k2c_affine_matmul_fu_175_ap_done = ap_const_logic_1)))) then 
            grp_fu_290_ce <= ap_const_logic_1;
        else 
            grp_fu_290_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_k2c_affine_matmul_fu_175_ap_start <= grp_k2c_affine_matmul_fu_175_ap_start_reg;
    grp_k2c_dot_3_fu_154_ap_start <= grp_k2c_dot_3_fu_154_ap_start_reg;
    grp_k2c_relu_func_fu_191_ap_start <= grp_k2c_relu_func_fu_191_ap_start_reg;

    grp_k2c_relu_func_fu_191_size_assign_proc : process(tmp_reg_304, outsize_reg_396, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((tmp_reg_304 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17))) then 
            grp_k2c_relu_func_fu_191_size <= outsize_reg_396;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            grp_k2c_relu_func_fu_191_size <= ap_const_lv64_64;
        else 
            grp_k2c_relu_func_fu_191_size <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_277_p2 <= std_logic_vector(signed(i_i_reg_131) + signed(ap_const_lv6_24));
        i_i_cast1_fu_232_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(i_i_reg_131),7));

    i_i_cast_fu_236_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_i_cast1_fu_232_p1),8));
    icmp_fu_226_p2 <= "0" when (tmp_76_fu_216_p4 = ap_const_lv63_0) else "1";

    input_array_address0_assign_proc : process(ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_A_array_address0, grp_k2c_affine_matmul_fu_175_A_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            input_array_address0 <= grp_k2c_affine_matmul_fu_175_A_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_address0 <= grp_k2c_dot_3_fu_154_A_array_address0;
        else 
            input_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    input_array_ce0_assign_proc : process(ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_A_array_ce0, grp_k2c_affine_matmul_fu_175_A_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            input_array_ce0 <= grp_k2c_affine_matmul_fu_175_A_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_array_ce0 <= grp_k2c_dot_3_fu_154_A_array_ce0;
        else 
            input_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    input_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_203_p2, grp_k2c_dot_3_fu_154_A_shape_address0, ap_CS_fsm_state2)
    begin
        if (((tmp_fu_203_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_address0 <= grp_k2c_dot_3_fu_154_A_shape_address0;
        else 
            input_shape_address0 <= "XXX";
        end if; 
    end process;


    input_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_203_p2, grp_k2c_dot_3_fu_154_A_shape_ce0, ap_CS_fsm_state2)
    begin
        if (((tmp_fu_203_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            input_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            input_shape_ce0 <= grp_k2c_dot_3_fu_154_A_shape_ce0;
        else 
            input_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    j_fu_261_p2 <= std_logic_vector(unsigned(j_i_reg_143) + unsigned(ap_const_lv7_1));
    j_i_cast1_fu_246_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_143),64));
    j_i_cast_fu_251_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_i_reg_143),8));

    kernel_array_address0_assign_proc : process(ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_B_array_address0, grp_k2c_affine_matmul_fu_175_B_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_address0 <= grp_k2c_affine_matmul_fu_175_B_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_address0 <= grp_k2c_dot_3_fu_154_B_array_address0;
        else 
            kernel_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    kernel_array_ce0_assign_proc : process(ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_B_array_ce0, grp_k2c_affine_matmul_fu_175_B_ce0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            kernel_array_ce0 <= grp_k2c_affine_matmul_fu_175_B_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_array_ce0 <= grp_k2c_dot_3_fu_154_B_array_ce0;
        else 
            kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    kernel_shape_address0_assign_proc : process(ap_CS_fsm_state1, tmp_fu_203_p2, ap_CS_fsm_state13, grp_k2c_dot_3_fu_154_B_shape_address0, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            kernel_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((tmp_fu_203_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            kernel_shape_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_address0 <= grp_k2c_dot_3_fu_154_B_shape_address0;
        else 
            kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    kernel_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, tmp_fu_203_p2, ap_CS_fsm_state13, grp_k2c_dot_3_fu_154_B_shape_ce0, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state13) or ((tmp_fu_203_p2 = ap_const_lv1_1) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            kernel_shape_ce0 <= grp_k2c_dot_3_fu_154_B_shape_ce0;
        else 
            kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_address0_assign_proc : process(tmp_reg_304, ap_CS_fsm_state4, output_array_addr_reg_349, ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_C_array_address0, grp_k2c_affine_matmul_fu_175_C_address0, grp_k2c_relu_func_fu_191_x_address0, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17, tmp_i_cast_fu_272_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_array_address0 <= output_array_addr_reg_349;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            output_array_address0 <= tmp_i_cast_fu_272_p1(17 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((tmp_reg_304 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            output_array_address0 <= grp_k2c_relu_func_fu_191_x_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_address0 <= grp_k2c_affine_matmul_fu_175_C_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_address0 <= grp_k2c_dot_3_fu_154_C_array_address0;
        else 
            output_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_ce0_assign_proc : process(tmp_reg_304, ap_CS_fsm_state4, ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_C_array_ce0, grp_k2c_affine_matmul_fu_175_C_ce0, grp_k2c_relu_func_fu_191_x_ce0, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            output_array_ce0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((tmp_reg_304 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            output_array_ce0 <= grp_k2c_relu_func_fu_191_x_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_ce0 <= grp_k2c_affine_matmul_fu_175_C_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_ce0 <= grp_k2c_dot_3_fu_154_C_array_ce0;
        else 
            output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    output_array_d0_assign_proc : process(tmp_reg_304, tmp_26_i_reg_369, ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_C_array_d0, grp_k2c_affine_matmul_fu_175_C_d0, grp_k2c_relu_func_fu_191_x_d0, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_array_d0 <= tmp_26_i_reg_369;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((tmp_reg_304 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            output_array_d0 <= grp_k2c_relu_func_fu_191_x_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_d0 <= grp_k2c_affine_matmul_fu_175_C_d0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_d0 <= grp_k2c_dot_3_fu_154_C_array_d0;
        else 
            output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    output_array_we0_assign_proc : process(tmp_reg_304, ap_CS_fsm_state15, grp_k2c_dot_3_fu_154_C_array_we0, grp_k2c_affine_matmul_fu_175_C_we0, grp_k2c_relu_func_fu_191_x_we0, ap_CS_fsm_state2, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            output_array_we0 <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state12) or ((tmp_reg_304 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17)))) then 
            output_array_we0 <= grp_k2c_relu_func_fu_191_x_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            output_array_we0 <= grp_k2c_affine_matmul_fu_175_C_we0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            output_array_we0 <= grp_k2c_dot_3_fu_154_C_array_we0;
        else 
            output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;

    outrows1_fu_283_p3 <= 
        input_shape_q0 when (icmp_reg_313(0) = '1') else 
        ap_const_lv64_1;
    tmp_76_fu_216_p4 <= input_ndim_read(63 downto 1);
    tmp_7_fu_209_p2 <= std_logic_vector(unsigned(input_ndim_read) + unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF));
    tmp_fu_203_p2 <= "1" when (unsigned(input_ndim_read) < unsigned(ap_const_lv64_3)) else "0";
    tmp_i_42_fu_267_p2 <= std_logic_vector(unsigned(j_i_cast_fu_251_p1) + unsigned(i_i_cast_reg_328));
    tmp_i_cast_fu_272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_i_42_fu_267_p2),64));
    tmp_i_fu_240_p2 <= "1" when (unsigned(i_i_reg_131) < unsigned(ap_const_lv6_24)) else "0";
end behav;
