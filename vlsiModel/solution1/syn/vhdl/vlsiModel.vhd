-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vlsiModel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_input_input_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    dense_input_input_array_ce0 : OUT STD_LOGIC;
    dense_input_input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_input_input_ndim : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_input_input_numel : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_input_input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_input_input_shape_ce0 : OUT STD_LOGIC;
    dense_input_input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    dense_3_output_array_ce0 : OUT STD_LOGIC;
    dense_3_output_array_we0 : OUT STD_LOGIC;
    dense_3_output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_3_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_3_output_ndim : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_numel : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_3_output_shape_ce0 : OUT STD_LOGIC;
    dense_3_output_shape_we0 : OUT STD_LOGIC;
    dense_3_output_shape_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_3_output_shape_ce1 : OUT STD_LOGIC;
    dense_3_output_shape_we1 : OUT STD_LOGIC;
    dense_3_output_shape_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of vlsiModel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "vlsiModel,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.122000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=3401,HLS_SYN_DSP=340,HLS_SYN_FF=50931,HLS_SYN_LUT=42623,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000001000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000010000000000000000";
    constant ap_ST_fsm_state18 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000100000000000000000";
    constant ap_ST_fsm_state19 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000001000000000000000000";
    constant ap_ST_fsm_state20 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000010000000000000000000";
    constant ap_ST_fsm_state21 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000100000000000000000000";
    constant ap_ST_fsm_state22 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000001000000000000000000000";
    constant ap_ST_fsm_state23 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000010000000000000000000000";
    constant ap_ST_fsm_state24 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000100000000000000000000000";
    constant ap_ST_fsm_state25 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000001000000000000000000000000";
    constant ap_ST_fsm_state26 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000010000000000000000000000000";
    constant ap_ST_fsm_state27 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000100000000000000000000000000";
    constant ap_ST_fsm_state28 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000001000000000000000000000000000";
    constant ap_ST_fsm_state29 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000010000000000000000000000000000";
    constant ap_ST_fsm_state30 : STD_LOGIC_VECTOR (40 downto 0) := "00000000000100000000000000000000000000000";
    constant ap_ST_fsm_state31 : STD_LOGIC_VECTOR (40 downto 0) := "00000000001000000000000000000000000000000";
    constant ap_ST_fsm_state32 : STD_LOGIC_VECTOR (40 downto 0) := "00000000010000000000000000000000000000000";
    constant ap_ST_fsm_state33 : STD_LOGIC_VECTOR (40 downto 0) := "00000000100000000000000000000000000000000";
    constant ap_ST_fsm_state34 : STD_LOGIC_VECTOR (40 downto 0) := "00000001000000000000000000000000000000000";
    constant ap_ST_fsm_state35 : STD_LOGIC_VECTOR (40 downto 0) := "00000010000000000000000000000000000000000";
    constant ap_ST_fsm_state36 : STD_LOGIC_VECTOR (40 downto 0) := "00000100000000000000000000000000000000000";
    constant ap_ST_fsm_state37 : STD_LOGIC_VECTOR (40 downto 0) := "00001000000000000000000000000000000000000";
    constant ap_ST_fsm_state38 : STD_LOGIC_VECTOR (40 downto 0) := "00010000000000000000000000000000000000000";
    constant ap_ST_fsm_state39 : STD_LOGIC_VECTOR (40 downto 0) := "00100000000000000000000000000000000000000";
    constant ap_ST_fsm_state40 : STD_LOGIC_VECTOR (40 downto 0) := "01000000000000000000000000000000000000000";
    constant ap_ST_fsm_state41 : STD_LOGIC_VECTOR (40 downto 0) := "10000000000000000000000000000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_64 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001100100";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_1388 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001001110001000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_4E2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010011100010";
    constant ap_const_lv64_FA : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111010";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv64_310 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001100010000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv7_64 : STD_LOGIC_VECTOR (6 downto 0) := "1100100";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv17_13240 : STD_LOGIC_VECTOR (16 downto 0) := "10011001001000000";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv6_32 : STD_LOGIC_VECTOR (5 downto 0) := "110010";
    constant ap_const_lv6_1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_const_lv13_1388 : STD_LOGIC_VECTOR (12 downto 0) := "1001110001000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv11_4E2 : STD_LOGIC_VECTOR (10 downto 0) := "10011100010";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv8_FA : STD_LOGIC_VECTOR (7 downto 0) := "11111010";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (40 downto 0) := "00000000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_output_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_output_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_output_array_ce0 : STD_LOGIC;
    signal dense_output_array_we0 : STD_LOGIC;
    signal dense_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_output_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_kernel_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_kernel_array_ce0 : STD_LOGIC;
    signal dense_kernel_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_kernel_array_0_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_kernel_array_0_ce0 : STD_LOGIC;
    signal dense_kernel_array_0_we0 : STD_LOGIC;
    signal dense_kernel_array_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_bias_array_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_bias_array_ce0 : STD_LOGIC;
    signal dense_bias_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_bias_array_1_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_bias_array_1_ce0 : STD_LOGIC;
    signal dense_bias_array_1_we0 : STD_LOGIC;
    signal dense_bias_array_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_output_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_output_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_1_output_array_ce0 : STD_LOGIC;
    signal dense_1_output_array_we0 : STD_LOGIC;
    signal dense_1_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_output_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_kernel_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_kernel_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_kernel_array_address0 : STD_LOGIC_VECTOR (12 downto 0);
    signal dense_1_kernel_array_ce0 : STD_LOGIC;
    signal dense_1_kernel_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_kernel_array_6_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_1_kernel_array_6_ce0 : STD_LOGIC;
    signal dense_1_kernel_array_6_we0 : STD_LOGIC;
    signal dense_1_kernel_array_6_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_bias_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dense_1_bias_array_ce0 : STD_LOGIC;
    signal dense_1_bias_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_bias_array_7_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_1_bias_array_7_ce0 : STD_LOGIC;
    signal dense_1_bias_array_7_we0 : STD_LOGIC;
    signal dense_1_bias_array_7_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_output_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_output_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_2_output_array_ce0 : STD_LOGIC;
    signal dense_2_output_array_we0 : STD_LOGIC;
    signal dense_2_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_output_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_kernel_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_kernel_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_kernel_array_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal dense_2_kernel_array_ce0 : STD_LOGIC;
    signal dense_2_kernel_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_kernel_array_4_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_2_kernel_array_4_ce0 : STD_LOGIC;
    signal dense_2_kernel_array_4_we0 : STD_LOGIC;
    signal dense_2_kernel_array_4_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_bias_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_bias_array_ce0 : STD_LOGIC;
    signal dense_2_bias_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_2_bias_array_5_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_2_bias_array_5_ce0 : STD_LOGIC;
    signal dense_2_bias_array_5_we0 : STD_LOGIC;
    signal dense_2_bias_array_5_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_3_kernel_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_3_kernel_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_3_kernel_array_address0 : STD_LOGIC_VECTOR (7 downto 0);
    signal dense_3_kernel_array_ce0 : STD_LOGIC;
    signal dense_3_kernel_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_3_kernel_array_2_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_3_kernel_array_2_ce0 : STD_LOGIC;
    signal dense_3_kernel_array_2_we0 : STD_LOGIC;
    signal dense_3_kernel_array_2_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_3_bias_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_3_bias_array_ce0 : STD_LOGIC;
    signal dense_3_bias_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_3_bias_array_3_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal dense_3_bias_array_3_ce0 : STD_LOGIC;
    signal dense_3_bias_array_3_we0 : STD_LOGIC;
    signal dense_3_bias_array_3_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_3_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_kernel_shape_ce0 : STD_LOGIC;
    signal dense_kernel_shape_we0 : STD_LOGIC;
    signal dense_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_kernel_shape_ce1 : STD_LOGIC;
    signal dense_kernel_shape_we1 : STD_LOGIC;
    signal dense_output_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_output_shape_ce0 : STD_LOGIC;
    signal dense_output_shape_we0 : STD_LOGIC;
    signal dense_output_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_output_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_output_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_output_shape_ce1 : STD_LOGIC;
    signal dense_output_shape_we1 : STD_LOGIC;
    signal dense_1_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_kernel_shape_ce0 : STD_LOGIC;
    signal dense_1_kernel_shape_we0 : STD_LOGIC;
    signal dense_1_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_kernel_shape_ce1 : STD_LOGIC;
    signal dense_1_kernel_shape_we1 : STD_LOGIC;
    signal dense_1_output_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_output_shape_ce0 : STD_LOGIC;
    signal dense_1_output_shape_we0 : STD_LOGIC;
    signal dense_1_output_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_output_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_output_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_output_shape_ce1 : STD_LOGIC;
    signal dense_1_output_shape_we1 : STD_LOGIC;
    signal dense_2_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_kernel_shape_ce0 : STD_LOGIC;
    signal dense_2_kernel_shape_we0 : STD_LOGIC;
    signal dense_2_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_kernel_shape_ce1 : STD_LOGIC;
    signal dense_2_kernel_shape_we1 : STD_LOGIC;
    signal dense_2_output_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_output_shape_ce0 : STD_LOGIC;
    signal dense_2_output_shape_we0 : STD_LOGIC;
    signal dense_2_output_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_output_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_output_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_output_shape_ce1 : STD_LOGIC;
    signal dense_2_output_shape_we1 : STD_LOGIC;
    signal dense_3_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_3_kernel_shape_ce0 : STD_LOGIC;
    signal dense_3_kernel_shape_we0 : STD_LOGIC;
    signal dense_3_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_3_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_3_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_3_kernel_shape_ce1 : STD_LOGIC;
    signal dense_3_kernel_shape_we1 : STD_LOGIC;
    signal reg_895 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state36 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state36 : signal is "none";
    signal ap_CS_fsm_state38 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state38 : signal is "none";
    signal reg_901 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state40 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state40 : signal is "none";
    signal z11_fu_930_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal z10_cast_fu_936_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z10_cast_reg_1257 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal z10_1_fu_947_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal z10_1_reg_1265 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_2_fu_941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z9_cast9_fu_953_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z9_cast9_reg_1275 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal z9_1_fu_964_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal z9_1_reg_1283 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_4_fu_958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z8_1_fu_993_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal z7_cast7_fu_1011_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z7_cast7_reg_1301 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal z7_1_fu_1022_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal z7_1_reg_1309 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_8_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z6_cast6_fu_1034_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z6_cast6_reg_1319 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state18 : signal is "none";
    signal z6_1_fu_1045_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal z6_1_reg_1327 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_s_fu_1039_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z5_1_fu_1074_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state22 : signal is "none";
    signal z4_cast4_fu_1092_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z4_cast4_reg_1345 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state25 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state25 : signal is "none";
    signal z4_1_fu_1103_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal z4_1_reg_1353 : STD_LOGIC_VECTOR (10 downto 0);
    signal tmp_3_fu_1097_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z3_cast3_fu_1115_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z3_cast3_reg_1363 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state27 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state27 : signal is "none";
    signal z3_1_fu_1126_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal z3_1_reg_1371 : STD_LOGIC_VECTOR (4 downto 0);
    signal tmp_5_fu_1120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z2_cast2_fu_1144_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_cast2_reg_1381 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state31 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state31 : signal is "none";
    signal z2_1_fu_1155_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal z2_1_reg_1389 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_7_fu_1149_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z1_cast1_fu_1161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z1_cast1_reg_1399 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state33 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state33 : signal is "none";
    signal z1_1_fu_1172_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal z1_1_reg_1407 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_9_fu_1166_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_k2c_dense_1_fu_788_ap_start : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_ap_done : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_1_fu_788_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_1_fu_788_input_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_1_fu_788_input_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_1_fu_788_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_kernel_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_1_fu_788_kernel_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_1_fu_788_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_788_bias_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_1_fu_788_bias_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_ap_start : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_ap_done : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_3_fu_813_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_3_fu_813_input_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_3_fu_813_input_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_3_fu_813_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_kernel_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_3_fu_813_kernel_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_3_fu_813_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_813_bias_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_3_fu_813_bias_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_ap_start : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_ap_done : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_2_fu_837_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_2_fu_837_input_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_2_fu_837_input_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_2_fu_837_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_kernel_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_2_fu_837_kernel_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_2_fu_837_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_837_bias_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_2_fu_837_bias_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_ap_start : STD_LOGIC;
    signal grp_k2c_dense_fu_861_ap_done : STD_LOGIC;
    signal grp_k2c_dense_fu_861_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_fu_861_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_fu_861_output_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_fu_861_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_fu_861_input_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_fu_861_input_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_fu_861_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_kernel_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_fu_861_kernel_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_fu_861_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_861_bias_array_address0 : STD_LOGIC_VECTOR (16 downto 0);
    signal grp_k2c_dense_fu_861_bias_array_ce0 : STD_LOGIC;
    signal z_reg_667 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal tmp_fu_924_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z10_reg_678 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal z9_reg_689 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal z8_reg_700 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal tmp_6_fu_987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z7_reg_711 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal z6_reg_722 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_CS_fsm_state19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state19 : signal is "none";
    signal z5_reg_733 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state21 : signal is "none";
    signal tmp_1_fu_1068_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal z4_reg_744 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_state24 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state24 : signal is "none";
    signal ap_CS_fsm_state26 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state26 : signal is "none";
    signal z3_reg_755 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state28 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state28 : signal is "none";
    signal z2_reg_766 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state30 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state30 : signal is "none";
    signal ap_CS_fsm_state32 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state32 : signal is "none";
    signal z1_reg_777 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state34 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state34 : signal is "none";
    signal grp_k2c_dense_1_fu_788_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state41 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state41 : signal is "none";
    signal grp_k2c_dense_3_fu_813_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state37 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state37 : signal is "none";
    signal grp_k2c_dense_2_fu_837_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state39 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state39 : signal is "none";
    signal grp_k2c_dense_fu_861_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state35 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state35 : signal is "none";
    signal z_cast_fu_919_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z8_cast8_fu_982_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z5_cast5_fu_1063_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state20 : signal is "none";
    signal ap_CS_fsm_state23 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state23 : signal is "none";
    signal ap_CS_fsm_state29 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state29 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (40 downto 0);

    component k2c_dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        output_array_ce0 : OUT STD_LOGIC;
        output_array_we0 : OUT STD_LOGIC;
        output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        input_array_ce0 : OUT STD_LOGIC;
        input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        kernel_array_ce0 : OUT STD_LOGIC;
        kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        bias_array_ce0 : OUT STD_LOGIC;
        bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_dense_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        output_array_ce0 : OUT STD_LOGIC;
        output_array_we0 : OUT STD_LOGIC;
        output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        input_array_ce0 : OUT STD_LOGIC;
        input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        kernel_array_ce0 : OUT STD_LOGIC;
        kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        bias_array_ce0 : OUT STD_LOGIC;
        bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        output_array_ce0 : OUT STD_LOGIC;
        output_array_we0 : OUT STD_LOGIC;
        output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        input_array_ce0 : OUT STD_LOGIC;
        input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        kernel_array_ce0 : OUT STD_LOGIC;
        kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        bias_array_ce0 : OUT STD_LOGIC;
        bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component k2c_dense IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        output_array_ce0 : OUT STD_LOGIC;
        output_array_we0 : OUT STD_LOGIC;
        output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        input_array_ce0 : OUT STD_LOGIC;
        input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        kernel_array_ce0 : OUT STD_LOGIC;
        kernel_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_array_address0 : OUT STD_LOGIC_VECTOR (16 downto 0);
        bias_array_ce0 : OUT STD_LOGIC;
        bias_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_oxdS IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_kyd2 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (16 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_bAem IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_1DeQ IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (12 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_1Ffa IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_2IfE IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_2KfY IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_3Mgi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (7 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_3OgC IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_kQgW IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;



begin
    dense_output_array_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_output_array_address0,
        ce0 => dense_output_array_ce0,
        we0 => dense_output_array_we0,
        d0 => dense_output_array_d0,
        q0 => dense_output_array_q0);

    dense_kernel_array_U : component vlsiModel_dense_kyd2
    generic map (
        DataWidth => 32,
        AddressRange => 78400,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_kernel_array_address0,
        ce0 => dense_kernel_array_ce0,
        q0 => dense_kernel_array_q0);

    dense_kernel_array_0_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_kernel_array_0_address0,
        ce0 => dense_kernel_array_0_ce0,
        we0 => dense_kernel_array_0_we0,
        d0 => dense_kernel_array_q0,
        q0 => dense_kernel_array_0_q0);

    dense_bias_array_U : component vlsiModel_dense_bAem
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_bias_array_address0,
        ce0 => dense_bias_array_ce0,
        q0 => dense_bias_array_q0);

    dense_bias_array_1_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_bias_array_1_address0,
        ce0 => dense_bias_array_1_ce0,
        we0 => dense_bias_array_1_we0,
        d0 => dense_bias_array_q0,
        q0 => dense_bias_array_1_q0);

    dense_1_output_array_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_output_array_address0,
        ce0 => dense_1_output_array_ce0,
        we0 => dense_1_output_array_we0,
        d0 => dense_1_output_array_d0,
        q0 => dense_1_output_array_q0);

    dense_1_kernel_array_U : component vlsiModel_dense_1DeQ
    generic map (
        DataWidth => 32,
        AddressRange => 5000,
        AddressWidth => 13)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_kernel_array_address0,
        ce0 => dense_1_kernel_array_ce0,
        q0 => dense_1_kernel_array_q0);

    dense_1_kernel_array_6_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_kernel_array_6_address0,
        ce0 => dense_1_kernel_array_6_ce0,
        we0 => dense_1_kernel_array_6_we0,
        d0 => dense_1_kernel_array_q0,
        q0 => dense_1_kernel_array_6_q0);

    dense_1_bias_array_U : component vlsiModel_dense_1Ffa
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_bias_array_address0,
        ce0 => dense_1_bias_array_ce0,
        q0 => dense_1_bias_array_q0);

    dense_1_bias_array_7_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_bias_array_7_address0,
        ce0 => dense_1_bias_array_7_ce0,
        we0 => dense_1_bias_array_7_we0,
        d0 => dense_1_bias_array_q0,
        q0 => dense_1_bias_array_7_q0);

    dense_2_output_array_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_output_array_address0,
        ce0 => dense_2_output_array_ce0,
        we0 => dense_2_output_array_we0,
        d0 => dense_2_output_array_d0,
        q0 => dense_2_output_array_q0);

    dense_2_kernel_array_U : component vlsiModel_dense_2IfE
    generic map (
        DataWidth => 32,
        AddressRange => 1250,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_kernel_array_address0,
        ce0 => dense_2_kernel_array_ce0,
        q0 => dense_2_kernel_array_q0);

    dense_2_kernel_array_4_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_kernel_array_4_address0,
        ce0 => dense_2_kernel_array_4_ce0,
        we0 => dense_2_kernel_array_4_we0,
        d0 => dense_2_kernel_array_q0,
        q0 => dense_2_kernel_array_4_q0);

    dense_2_bias_array_U : component vlsiModel_dense_2KfY
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_bias_array_address0,
        ce0 => dense_2_bias_array_ce0,
        q0 => dense_2_bias_array_q0);

    dense_2_bias_array_5_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_bias_array_5_address0,
        ce0 => dense_2_bias_array_5_ce0,
        we0 => dense_2_bias_array_5_we0,
        d0 => dense_2_bias_array_q0,
        q0 => dense_2_bias_array_5_q0);

    dense_3_kernel_array_U : component vlsiModel_dense_3Mgi
    generic map (
        DataWidth => 32,
        AddressRange => 250,
        AddressWidth => 8)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_kernel_array_address0,
        ce0 => dense_3_kernel_array_ce0,
        q0 => dense_3_kernel_array_q0);

    dense_3_kernel_array_2_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_kernel_array_2_address0,
        ce0 => dense_3_kernel_array_2_ce0,
        we0 => dense_3_kernel_array_2_we0,
        d0 => dense_3_kernel_array_q0,
        q0 => dense_3_kernel_array_2_q0);

    dense_3_bias_array_U : component vlsiModel_dense_3OgC
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_bias_array_address0,
        ce0 => dense_3_bias_array_ce0,
        q0 => dense_3_bias_array_q0);

    dense_3_bias_array_3_U : component vlsiModel_dense_oxdS
    generic map (
        DataWidth => 32,
        AddressRange => 80000,
        AddressWidth => 17)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_bias_array_3_address0,
        ce0 => dense_3_bias_array_3_ce0,
        we0 => dense_3_bias_array_3_we0,
        d0 => dense_3_bias_array_q0,
        q0 => dense_3_bias_array_3_q0);

    dense_kernel_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_kernel_shape_address0,
        ce0 => dense_kernel_shape_ce0,
        we0 => dense_kernel_shape_we0,
        d0 => dense_kernel_shape_d0,
        q0 => dense_kernel_shape_q0,
        address1 => dense_kernel_shape_address1,
        ce1 => dense_kernel_shape_ce1,
        we1 => dense_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_output_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_output_shape_address0,
        ce0 => dense_output_shape_ce0,
        we0 => dense_output_shape_we0,
        d0 => dense_output_shape_d0,
        q0 => dense_output_shape_q0,
        address1 => dense_output_shape_address1,
        ce1 => dense_output_shape_ce1,
        we1 => dense_output_shape_we1,
        d1 => ap_const_lv64_1);

    dense_1_kernel_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_kernel_shape_address0,
        ce0 => dense_1_kernel_shape_ce0,
        we0 => dense_1_kernel_shape_we0,
        d0 => dense_1_kernel_shape_d0,
        q0 => dense_1_kernel_shape_q0,
        address1 => dense_1_kernel_shape_address1,
        ce1 => dense_1_kernel_shape_ce1,
        we1 => dense_1_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_1_output_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_output_shape_address0,
        ce0 => dense_1_output_shape_ce0,
        we0 => dense_1_output_shape_we0,
        d0 => dense_1_output_shape_d0,
        q0 => dense_1_output_shape_q0,
        address1 => dense_1_output_shape_address1,
        ce1 => dense_1_output_shape_ce1,
        we1 => dense_1_output_shape_we1,
        d1 => ap_const_lv64_1);

    dense_2_kernel_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_kernel_shape_address0,
        ce0 => dense_2_kernel_shape_ce0,
        we0 => dense_2_kernel_shape_we0,
        d0 => dense_2_kernel_shape_d0,
        q0 => dense_2_kernel_shape_q0,
        address1 => dense_2_kernel_shape_address1,
        ce1 => dense_2_kernel_shape_ce1,
        we1 => dense_2_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_2_output_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_output_shape_address0,
        ce0 => dense_2_output_shape_ce0,
        we0 => dense_2_output_shape_we0,
        d0 => dense_2_output_shape_d0,
        q0 => dense_2_output_shape_q0,
        address1 => dense_2_output_shape_address1,
        ce1 => dense_2_output_shape_ce1,
        we1 => dense_2_output_shape_we1,
        d1 => ap_const_lv64_1);

    dense_3_kernel_shape_U : component vlsiModel_dense_kQgW
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_kernel_shape_address0,
        ce0 => dense_3_kernel_shape_ce0,
        we0 => dense_3_kernel_shape_we0,
        d0 => dense_3_kernel_shape_d0,
        q0 => dense_3_kernel_shape_q0,
        address1 => dense_3_kernel_shape_address1,
        ce1 => dense_3_kernel_shape_ce1,
        we1 => dense_3_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    grp_k2c_dense_1_fu_788 : component k2c_dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_1_fu_788_ap_start,
        ap_done => grp_k2c_dense_1_fu_788_ap_done,
        ap_idle => grp_k2c_dense_1_fu_788_ap_idle,
        ap_ready => grp_k2c_dense_1_fu_788_ap_ready,
        output_array_address0 => grp_k2c_dense_1_fu_788_output_array_address0,
        output_array_ce0 => grp_k2c_dense_1_fu_788_output_array_ce0,
        output_array_we0 => grp_k2c_dense_1_fu_788_output_array_we0,
        output_array_d0 => grp_k2c_dense_1_fu_788_output_array_d0,
        output_array_q0 => dense_3_output_array_q0,
        output_numel_read => dense_3_output_numel,
        input_array_address0 => grp_k2c_dense_1_fu_788_input_array_address0,
        input_array_ce0 => grp_k2c_dense_1_fu_788_input_array_ce0,
        input_array_q0 => dense_2_output_array_q0,
        input_ndim_read => dense_2_output_ndim,
        input_numel_read => reg_901,
        input_shape_address0 => grp_k2c_dense_1_fu_788_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_1_fu_788_input_shape_ce0,
        input_shape_q0 => dense_2_output_shape_q0,
        kernel_array_address0 => grp_k2c_dense_1_fu_788_kernel_array_address0,
        kernel_array_ce0 => grp_k2c_dense_1_fu_788_kernel_array_ce0,
        kernel_array_q0 => dense_3_kernel_array_2_q0,
        kernel_ndim_read => dense_3_kernel_ndim,
        kernel_numel_read => dense_3_kernel_numel,
        kernel_shape_address0 => grp_k2c_dense_1_fu_788_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_1_fu_788_kernel_shape_ce0,
        kernel_shape_q0 => dense_3_kernel_shape_q0,
        bias_array_address0 => grp_k2c_dense_1_fu_788_bias_array_address0,
        bias_array_ce0 => grp_k2c_dense_1_fu_788_bias_array_ce0,
        bias_array_q0 => dense_3_bias_array_3_q0,
        bias_numel_read => dense_3_bias_numel);

    grp_k2c_dense_3_fu_813 : component k2c_dense_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_3_fu_813_ap_start,
        ap_done => grp_k2c_dense_3_fu_813_ap_done,
        ap_idle => grp_k2c_dense_3_fu_813_ap_idle,
        ap_ready => grp_k2c_dense_3_fu_813_ap_ready,
        output_array_address0 => grp_k2c_dense_3_fu_813_output_array_address0,
        output_array_ce0 => grp_k2c_dense_3_fu_813_output_array_ce0,
        output_array_we0 => grp_k2c_dense_3_fu_813_output_array_we0,
        output_array_d0 => grp_k2c_dense_3_fu_813_output_array_d0,
        output_array_q0 => dense_1_output_array_q0,
        output_numel_read => reg_895,
        input_array_address0 => grp_k2c_dense_3_fu_813_input_array_address0,
        input_array_ce0 => grp_k2c_dense_3_fu_813_input_array_ce0,
        input_array_q0 => dense_output_array_q0,
        input_ndim_read => dense_output_ndim,
        input_numel_read => dense_output_numel,
        input_shape_address0 => grp_k2c_dense_3_fu_813_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_3_fu_813_input_shape_ce0,
        input_shape_q0 => dense_output_shape_q0,
        kernel_array_address0 => grp_k2c_dense_3_fu_813_kernel_array_address0,
        kernel_array_ce0 => grp_k2c_dense_3_fu_813_kernel_array_ce0,
        kernel_array_q0 => dense_1_kernel_array_6_q0,
        kernel_ndim_read => dense_1_kernel_ndim,
        kernel_numel_read => dense_1_kernel_numel,
        kernel_shape_address0 => grp_k2c_dense_3_fu_813_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_3_fu_813_kernel_shape_ce0,
        kernel_shape_q0 => dense_1_kernel_shape_q0,
        bias_array_address0 => grp_k2c_dense_3_fu_813_bias_array_address0,
        bias_array_ce0 => grp_k2c_dense_3_fu_813_bias_array_ce0,
        bias_array_q0 => dense_1_bias_array_7_q0,
        bias_numel_read => dense_1_bias_numel);

    grp_k2c_dense_2_fu_837 : component k2c_dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_2_fu_837_ap_start,
        ap_done => grp_k2c_dense_2_fu_837_ap_done,
        ap_idle => grp_k2c_dense_2_fu_837_ap_idle,
        ap_ready => grp_k2c_dense_2_fu_837_ap_ready,
        output_array_address0 => grp_k2c_dense_2_fu_837_output_array_address0,
        output_array_ce0 => grp_k2c_dense_2_fu_837_output_array_ce0,
        output_array_we0 => grp_k2c_dense_2_fu_837_output_array_we0,
        output_array_d0 => grp_k2c_dense_2_fu_837_output_array_d0,
        output_array_q0 => dense_2_output_array_q0,
        output_numel_read => reg_901,
        input_array_address0 => grp_k2c_dense_2_fu_837_input_array_address0,
        input_array_ce0 => grp_k2c_dense_2_fu_837_input_array_ce0,
        input_array_q0 => dense_1_output_array_q0,
        input_ndim_read => dense_1_output_ndim,
        input_numel_read => reg_895,
        input_shape_address0 => grp_k2c_dense_2_fu_837_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_2_fu_837_input_shape_ce0,
        input_shape_q0 => dense_1_output_shape_q0,
        kernel_array_address0 => grp_k2c_dense_2_fu_837_kernel_array_address0,
        kernel_array_ce0 => grp_k2c_dense_2_fu_837_kernel_array_ce0,
        kernel_array_q0 => dense_2_kernel_array_4_q0,
        kernel_ndim_read => dense_2_kernel_ndim,
        kernel_numel_read => dense_2_kernel_numel,
        kernel_shape_address0 => grp_k2c_dense_2_fu_837_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_2_fu_837_kernel_shape_ce0,
        kernel_shape_q0 => dense_2_kernel_shape_q0,
        bias_array_address0 => grp_k2c_dense_2_fu_837_bias_array_address0,
        bias_array_ce0 => grp_k2c_dense_2_fu_837_bias_array_ce0,
        bias_array_q0 => dense_2_bias_array_5_q0,
        bias_numel_read => dense_2_bias_numel);

    grp_k2c_dense_fu_861 : component k2c_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_fu_861_ap_start,
        ap_done => grp_k2c_dense_fu_861_ap_done,
        ap_idle => grp_k2c_dense_fu_861_ap_idle,
        ap_ready => grp_k2c_dense_fu_861_ap_ready,
        output_array_address0 => grp_k2c_dense_fu_861_output_array_address0,
        output_array_ce0 => grp_k2c_dense_fu_861_output_array_ce0,
        output_array_we0 => grp_k2c_dense_fu_861_output_array_we0,
        output_array_d0 => grp_k2c_dense_fu_861_output_array_d0,
        output_array_q0 => dense_output_array_q0,
        input_array_address0 => grp_k2c_dense_fu_861_input_array_address0,
        input_array_ce0 => grp_k2c_dense_fu_861_input_array_ce0,
        input_array_q0 => dense_input_input_array_q0,
        input_ndim_read => dense_input_input_ndim,
        input_numel_read => dense_input_input_numel,
        input_shape_address0 => grp_k2c_dense_fu_861_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_fu_861_input_shape_ce0,
        input_shape_q0 => dense_input_input_shape_q0,
        kernel_array_address0 => grp_k2c_dense_fu_861_kernel_array_address0,
        kernel_array_ce0 => grp_k2c_dense_fu_861_kernel_array_ce0,
        kernel_array_q0 => dense_kernel_array_0_q0,
        kernel_shape_address0 => grp_k2c_dense_fu_861_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_fu_861_kernel_shape_ce0,
        kernel_shape_q0 => dense_kernel_shape_q0,
        bias_array_address0 => grp_k2c_dense_fu_861_bias_array_address0,
        bias_array_ce0 => grp_k2c_dense_fu_861_bias_array_ce0,
        bias_array_q0 => dense_bias_array_1_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_k2c_dense_1_fu_788_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_1_fu_788_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state40)) then 
                    grp_k2c_dense_1_fu_788_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_1_fu_788_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_1_fu_788_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dense_2_fu_837_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_2_fu_837_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state38)) then 
                    grp_k2c_dense_2_fu_837_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_2_fu_837_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_2_fu_837_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dense_3_fu_813_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_3_fu_813_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state36)) then 
                    grp_k2c_dense_3_fu_813_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_3_fu_813_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_3_fu_813_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dense_fu_861_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_fu_861_ap_start_reg <= ap_const_logic_0;
            else
                if (((tmp_9_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then 
                    grp_k2c_dense_fu_861_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_fu_861_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_fu_861_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    z10_reg_678_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                z10_reg_678 <= z10_1_reg_1265;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                z10_reg_678 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    z1_reg_777_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_7_fu_1149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then 
                z1_reg_777 <= ap_const_lv4_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
                z1_reg_777 <= z1_1_reg_1407;
            end if; 
        end if;
    end process;

    z2_reg_766_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
                z2_reg_766 <= z2_1_reg_1389;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
                z2_reg_766 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    z3_reg_755_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
                z3_reg_755 <= z3_1_reg_1371;
            elsif (((tmp_3_fu_1097_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then 
                z3_reg_755 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    z4_reg_744_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
                z4_reg_744 <= z4_1_reg_1353;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
                z4_reg_744 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    z5_reg_733_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
                z5_reg_733 <= z5_1_fu_1074_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
                z5_reg_733 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    z6_reg_722_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
                z6_reg_722 <= z6_1_reg_1327;
            elsif (((tmp_8_fu_1016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then 
                z6_reg_722 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    z7_reg_711_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                z7_reg_711 <= z7_1_reg_1309;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
                z7_reg_711 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    z8_reg_700_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                z8_reg_700 <= z8_1_fu_993_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                z8_reg_700 <= ap_const_lv6_0;
            end if; 
        end if;
    end process;

    z9_reg_689_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_2_fu_941_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                z9_reg_689 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
                z9_reg_689 <= z9_1_reg_1283;
            end if; 
        end if;
    end process;

    z_reg_667_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                z_reg_667 <= z11_fu_930_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                z_reg_667 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_8_fu_1016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                dense_1_bias_numel(1) <= '1';
    dense_1_bias_numel(4) <= '1';
    dense_1_bias_numel(5) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_6_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                dense_1_kernel_ndim(1) <= '1';
                dense_1_kernel_numel(3) <= '1';
    dense_1_kernel_numel(7) <= '1';
    dense_1_kernel_numel(8) <= '1';
    dense_1_kernel_numel(9) <= '1';
    dense_1_kernel_numel(12) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_4_fu_958_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                dense_1_output_ndim(0) <= '1';
                dense_1_output_numel(1) <= '1';
    dense_1_output_numel(4) <= '1';
    dense_1_output_numel(5) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_3_fu_1097_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                dense_2_bias_numel(0) <= '1';
    dense_2_bias_numel(3) <= '1';
    dense_2_bias_numel(4) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_1_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                dense_2_kernel_ndim(1) <= '1';
                dense_2_kernel_numel(1) <= '1';
    dense_2_kernel_numel(5) <= '1';
    dense_2_kernel_numel(6) <= '1';
    dense_2_kernel_numel(7) <= '1';
    dense_2_kernel_numel(10) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_s_fu_1039_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                dense_2_output_ndim(0) <= '1';
                dense_2_output_numel(0) <= '1';
    dense_2_output_numel(3) <= '1';
    dense_2_output_numel(4) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_9_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                dense_3_bias_numel(1) <= '1';
    dense_3_bias_numel(3) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_5_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                dense_3_kernel_ndim(1) <= '1';
                dense_3_kernel_numel(1) <= '1';
    dense_3_kernel_numel(3) <= '1';
    dense_3_kernel_numel(4) <= '1';
    dense_3_kernel_numel(5) <= '1';
    dense_3_kernel_numel(6) <= '1';
    dense_3_kernel_numel(7) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                dense_output_ndim(0) <= '1';
                dense_output_numel(2) <= '1';
    dense_output_numel(5) <= '1';
    dense_output_numel(6) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state38) or (ap_const_logic_1 = ap_CS_fsm_state36))) then
                    reg_895(1) <= dense_1_output_numel(1);    reg_895(5 downto 4) <= dense_1_output_numel(5 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state40) or (ap_const_logic_1 = ap_CS_fsm_state38))) then
                    reg_901(0) <= dense_2_output_numel(0);    reg_901(4 downto 3) <= dense_2_output_numel(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                z10_1_reg_1265 <= z10_1_fu_947_p2;
                    z10_cast_reg_1257(16 downto 0) <= z10_cast_fu_936_p1(16 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state33)) then
                z1_1_reg_1407 <= z1_1_fu_1172_p2;
                    z1_cast1_reg_1399(3 downto 0) <= z1_cast1_fu_1161_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state31)) then
                z2_1_reg_1389 <= z2_1_fu_1155_p2;
                    z2_cast2_reg_1381(7 downto 0) <= z2_cast2_fu_1144_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state27)) then
                z3_1_reg_1371 <= z3_1_fu_1126_p2;
                    z3_cast3_reg_1363(4 downto 0) <= z3_cast3_fu_1115_p1(4 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state25)) then
                z4_1_reg_1353 <= z4_1_fu_1103_p2;
                    z4_cast4_reg_1345(10 downto 0) <= z4_cast4_fu_1092_p1(10 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state18)) then
                z6_1_reg_1327 <= z6_1_fu_1045_p2;
                    z6_cast6_reg_1319(5 downto 0) <= z6_cast6_fu_1034_p1(5 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                z7_1_reg_1309 <= z7_1_fu_1022_p2;
                    z7_cast7_reg_1301(12 downto 0) <= z7_cast7_fu_1011_p1(12 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                z9_1_reg_1283 <= z9_1_fu_964_p2;
                    z9_cast9_reg_1275(6 downto 0) <= z9_cast9_fu_953_p1(6 downto 0);
            end if;
        end if;
    end process;
    dense_output_ndim(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";
    dense_output_numel(1 downto 0) <= "00";
    dense_output_numel(4 downto 3) <= "00";
    dense_output_numel(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    dense_1_output_ndim(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";
    dense_1_output_numel(0) <= '0';
    dense_1_output_numel(3 downto 2) <= "00";
    dense_1_output_numel(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    dense_1_kernel_ndim(0) <= '0';
    dense_1_kernel_ndim(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    dense_1_kernel_numel(2 downto 0) <= "000";
    dense_1_kernel_numel(6 downto 4) <= "000";
    dense_1_kernel_numel(11 downto 10) <= "00";
    dense_1_kernel_numel(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    dense_1_bias_numel(0) <= '0';
    dense_1_bias_numel(3 downto 2) <= "00";
    dense_1_bias_numel(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    dense_2_output_ndim(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";
    dense_2_output_numel(2 downto 1) <= "00";
    dense_2_output_numel(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    dense_2_kernel_ndim(0) <= '0';
    dense_2_kernel_ndim(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    dense_2_kernel_numel(0) <= '0';
    dense_2_kernel_numel(4 downto 2) <= "000";
    dense_2_kernel_numel(9 downto 8) <= "00";
    dense_2_kernel_numel(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    dense_2_bias_numel(2 downto 1) <= "00";
    dense_2_bias_numel(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    dense_3_kernel_ndim(0) <= '0';
    dense_3_kernel_ndim(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    dense_3_kernel_numel(0) <= '0';
    dense_3_kernel_numel(2 downto 2) <= "0";
    dense_3_kernel_numel(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    dense_3_bias_numel(0) <= '0';
    dense_3_bias_numel(2 downto 2) <= "0";
    dense_3_bias_numel(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    reg_895(0) <= '0';
    reg_895(3 downto 2) <= "00";
    reg_895(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    reg_901(2 downto 1) <= "00";
    reg_901(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    z10_cast_reg_1257(63 downto 17) <= "00000000000000000000000000000000000000000000000";
    z9_cast9_reg_1275(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    z7_cast7_reg_1301(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    z6_cast6_reg_1319(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    z4_cast4_reg_1345(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    z3_cast3_reg_1363(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    z2_cast2_reg_1381(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    z1_cast1_reg_1399(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state4, ap_CS_fsm_state7, tmp_2_fu_941_p2, ap_CS_fsm_state9, tmp_4_fu_958_p2, ap_CS_fsm_state13, ap_CS_fsm_state16, tmp_8_fu_1016_p2, ap_CS_fsm_state18, tmp_s_fu_1039_p2, ap_CS_fsm_state22, ap_CS_fsm_state25, tmp_3_fu_1097_p2, ap_CS_fsm_state27, tmp_5_fu_1120_p2, ap_CS_fsm_state31, tmp_7_fu_1149_p2, ap_CS_fsm_state33, tmp_9_fu_1166_p2, grp_k2c_dense_1_fu_788_ap_done, grp_k2c_dense_3_fu_813_ap_done, grp_k2c_dense_2_fu_837_ap_done, grp_k2c_dense_fu_861_ap_done, tmp_fu_924_p2, tmp_6_fu_987_p2, tmp_1_fu_1068_p2, ap_CS_fsm_state41, ap_CS_fsm_state37, ap_CS_fsm_state39, ap_CS_fsm_state35)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                if (((tmp_fu_924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state5;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((tmp_2_fu_941_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state9 => 
                if (((tmp_4_fu_958_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((tmp_6_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                if (((tmp_8_fu_1016_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state16))) then
                    ap_NS_fsm <= ap_ST_fsm_state18;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state18 => 
                if (((tmp_s_fu_1039_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18))) then
                    ap_NS_fsm <= ap_ST_fsm_state20;
                else
                    ap_NS_fsm <= ap_ST_fsm_state19;
                end if;
            when ap_ST_fsm_state19 => 
                ap_NS_fsm <= ap_ST_fsm_state18;
            when ap_ST_fsm_state20 => 
                ap_NS_fsm <= ap_ST_fsm_state21;
            when ap_ST_fsm_state21 => 
                ap_NS_fsm <= ap_ST_fsm_state22;
            when ap_ST_fsm_state22 => 
                if (((tmp_1_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then
                    ap_NS_fsm <= ap_ST_fsm_state22;
                else
                    ap_NS_fsm <= ap_ST_fsm_state23;
                end if;
            when ap_ST_fsm_state23 => 
                ap_NS_fsm <= ap_ST_fsm_state24;
            when ap_ST_fsm_state24 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state25 => 
                if (((tmp_3_fu_1097_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state25))) then
                    ap_NS_fsm <= ap_ST_fsm_state27;
                else
                    ap_NS_fsm <= ap_ST_fsm_state26;
                end if;
            when ap_ST_fsm_state26 => 
                ap_NS_fsm <= ap_ST_fsm_state25;
            when ap_ST_fsm_state27 => 
                if (((tmp_5_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27))) then
                    ap_NS_fsm <= ap_ST_fsm_state29;
                else
                    ap_NS_fsm <= ap_ST_fsm_state28;
                end if;
            when ap_ST_fsm_state28 => 
                ap_NS_fsm <= ap_ST_fsm_state27;
            when ap_ST_fsm_state29 => 
                ap_NS_fsm <= ap_ST_fsm_state30;
            when ap_ST_fsm_state30 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state31 => 
                if (((tmp_7_fu_1149_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state31))) then
                    ap_NS_fsm <= ap_ST_fsm_state33;
                else
                    ap_NS_fsm <= ap_ST_fsm_state32;
                end if;
            when ap_ST_fsm_state32 => 
                ap_NS_fsm <= ap_ST_fsm_state31;
            when ap_ST_fsm_state33 => 
                if (((tmp_9_fu_1166_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state33))) then
                    ap_NS_fsm <= ap_ST_fsm_state35;
                else
                    ap_NS_fsm <= ap_ST_fsm_state34;
                end if;
            when ap_ST_fsm_state34 => 
                ap_NS_fsm <= ap_ST_fsm_state33;
            when ap_ST_fsm_state35 => 
                if (((grp_k2c_dense_fu_861_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state35))) then
                    ap_NS_fsm <= ap_ST_fsm_state36;
                else
                    ap_NS_fsm <= ap_ST_fsm_state35;
                end if;
            when ap_ST_fsm_state36 => 
                ap_NS_fsm <= ap_ST_fsm_state37;
            when ap_ST_fsm_state37 => 
                if (((grp_k2c_dense_3_fu_813_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state37))) then
                    ap_NS_fsm <= ap_ST_fsm_state38;
                else
                    ap_NS_fsm <= ap_ST_fsm_state37;
                end if;
            when ap_ST_fsm_state38 => 
                ap_NS_fsm <= ap_ST_fsm_state39;
            when ap_ST_fsm_state39 => 
                if (((grp_k2c_dense_2_fu_837_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state39))) then
                    ap_NS_fsm <= ap_ST_fsm_state40;
                else
                    ap_NS_fsm <= ap_ST_fsm_state39;
                end if;
            when ap_ST_fsm_state40 => 
                ap_NS_fsm <= ap_ST_fsm_state41;
            when ap_ST_fsm_state41 => 
                if (((grp_k2c_dense_1_fu_788_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state41;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state18 <= ap_CS_fsm(17);
    ap_CS_fsm_state19 <= ap_CS_fsm(18);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state20 <= ap_CS_fsm(19);
    ap_CS_fsm_state21 <= ap_CS_fsm(20);
    ap_CS_fsm_state22 <= ap_CS_fsm(21);
    ap_CS_fsm_state23 <= ap_CS_fsm(22);
    ap_CS_fsm_state24 <= ap_CS_fsm(23);
    ap_CS_fsm_state25 <= ap_CS_fsm(24);
    ap_CS_fsm_state26 <= ap_CS_fsm(25);
    ap_CS_fsm_state27 <= ap_CS_fsm(26);
    ap_CS_fsm_state28 <= ap_CS_fsm(27);
    ap_CS_fsm_state29 <= ap_CS_fsm(28);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state30 <= ap_CS_fsm(29);
    ap_CS_fsm_state31 <= ap_CS_fsm(30);
    ap_CS_fsm_state32 <= ap_CS_fsm(31);
    ap_CS_fsm_state33 <= ap_CS_fsm(32);
    ap_CS_fsm_state34 <= ap_CS_fsm(33);
    ap_CS_fsm_state35 <= ap_CS_fsm(34);
    ap_CS_fsm_state36 <= ap_CS_fsm(35);
    ap_CS_fsm_state37 <= ap_CS_fsm(36);
    ap_CS_fsm_state38 <= ap_CS_fsm(37);
    ap_CS_fsm_state39 <= ap_CS_fsm(38);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state40 <= ap_CS_fsm(39);
    ap_CS_fsm_state41 <= ap_CS_fsm(40);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(grp_k2c_dense_1_fu_788_ap_done, ap_CS_fsm_state41)
    begin
        if (((grp_k2c_dense_1_fu_788_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(grp_k2c_dense_1_fu_788_ap_done, ap_CS_fsm_state41)
    begin
        if (((grp_k2c_dense_1_fu_788_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state41))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_bias_array_7_address0_assign_proc : process(z6_cast6_reg_1319, grp_k2c_dense_3_fu_813_bias_array_address0, ap_CS_fsm_state19, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_1_bias_array_7_address0 <= z6_cast6_reg_1319(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_bias_array_7_address0 <= grp_k2c_dense_3_fu_813_bias_array_address0;
        else 
            dense_1_bias_array_7_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_bias_array_7_ce0_assign_proc : process(grp_k2c_dense_3_fu_813_bias_array_ce0, ap_CS_fsm_state19, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_1_bias_array_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_bias_array_7_ce0 <= grp_k2c_dense_3_fu_813_bias_array_ce0;
        else 
            dense_1_bias_array_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_bias_array_7_we0_assign_proc : process(ap_CS_fsm_state19)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state19)) then 
            dense_1_bias_array_7_we0 <= ap_const_logic_1;
        else 
            dense_1_bias_array_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_bias_array_address0 <= z6_cast6_fu_1034_p1(6 - 1 downto 0);

    dense_1_bias_array_ce0_assign_proc : process(ap_CS_fsm_state18)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_1_bias_array_ce0 <= ap_const_logic_1;
        else 
            dense_1_bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_array_6_address0_assign_proc : process(z7_cast7_reg_1301, grp_k2c_dense_3_fu_813_kernel_array_address0, ap_CS_fsm_state17, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_1_kernel_array_6_address0 <= z7_cast7_reg_1301(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_kernel_array_6_address0 <= grp_k2c_dense_3_fu_813_kernel_array_address0;
        else 
            dense_1_kernel_array_6_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_kernel_array_6_ce0_assign_proc : process(grp_k2c_dense_3_fu_813_kernel_array_ce0, ap_CS_fsm_state17, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_1_kernel_array_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_kernel_array_6_ce0 <= grp_k2c_dense_3_fu_813_kernel_array_ce0;
        else 
            dense_1_kernel_array_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_array_6_we0_assign_proc : process(ap_CS_fsm_state17)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
            dense_1_kernel_array_6_we0 <= ap_const_logic_1;
        else 
            dense_1_kernel_array_6_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_1_kernel_array_address0 <= z7_cast7_fu_1011_p1(13 - 1 downto 0);

    dense_1_kernel_array_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_1_kernel_array_ce0 <= ap_const_logic_1;
        else 
            dense_1_kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state13, grp_k2c_dense_3_fu_813_kernel_shape_address0, ap_CS_fsm_state15, ap_CS_fsm_state37, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_1_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_1_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_1_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_kernel_shape_address0 <= grp_k2c_dense_3_fu_813_kernel_shape_address0;
        else 
            dense_1_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_1_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_1_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_1_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_1_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_1_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state13, grp_k2c_dense_3_fu_813_kernel_shape_ce0, ap_CS_fsm_state15, ap_CS_fsm_state37, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            dense_1_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_kernel_shape_ce0 <= grp_k2c_dense_3_fu_813_kernel_shape_ce0;
        else 
            dense_1_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            dense_1_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_1_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state13, ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_1_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_1_kernel_shape_d0 <= ap_const_lv64_32;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_1_kernel_shape_d0 <= ap_const_lv64_64;
        else 
            dense_1_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state13, tmp_6_fu_987_p2, ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15) or ((tmp_6_fu_987_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)))) then 
            dense_1_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_1_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state15, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state14) or (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            dense_1_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_1_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_array_address0_assign_proc : process(ap_CS_fsm_state13, grp_k2c_dense_3_fu_813_output_array_address0, grp_k2c_dense_2_fu_837_input_array_address0, ap_CS_fsm_state37, ap_CS_fsm_state39, z8_cast8_fu_982_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_1_output_array_address0 <= z8_cast8_fu_982_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_1_output_array_address0 <= grp_k2c_dense_2_fu_837_input_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_output_array_address0 <= grp_k2c_dense_3_fu_813_output_array_address0;
        else 
            dense_1_output_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_output_array_ce0_assign_proc : process(ap_CS_fsm_state13, grp_k2c_dense_3_fu_813_output_array_ce0, grp_k2c_dense_2_fu_837_input_array_ce0, ap_CS_fsm_state37, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_1_output_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_1_output_array_ce0 <= grp_k2c_dense_2_fu_837_input_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_output_array_ce0 <= grp_k2c_dense_3_fu_813_output_array_ce0;
        else 
            dense_1_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_array_d0_assign_proc : process(ap_CS_fsm_state13, grp_k2c_dense_3_fu_813_output_array_d0, ap_CS_fsm_state37)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
            dense_1_output_array_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_output_array_d0 <= grp_k2c_dense_3_fu_813_output_array_d0;
        else 
            dense_1_output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_output_array_we0_assign_proc : process(ap_CS_fsm_state13, grp_k2c_dense_3_fu_813_output_array_we0, tmp_6_fu_987_p2, ap_CS_fsm_state37)
    begin
        if (((tmp_6_fu_987_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            dense_1_output_array_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_1_output_array_we0 <= grp_k2c_dense_3_fu_813_output_array_we0;
        else 
            dense_1_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_address0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_2_fu_837_input_shape_address0, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_1_output_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_1_output_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_1_output_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_1_output_shape_address0 <= grp_k2c_dense_2_fu_837_input_shape_address0;
        else 
            dense_1_output_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_1_output_shape_address1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_1_output_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_1_output_shape_address1 <= ap_const_lv3_2;
        else 
            dense_1_output_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_1_output_shape_ce0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_2_fu_837_input_shape_ce0, ap_CS_fsm_state12, ap_CS_fsm_state39, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            dense_1_output_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_1_output_shape_ce0 <= grp_k2c_dense_2_fu_837_input_shape_ce0;
        else 
            dense_1_output_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_ce1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            dense_1_output_shape_ce1 <= ap_const_logic_1;
        else 
            dense_1_output_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            dense_1_output_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_1_output_shape_d0 <= ap_const_lv64_32;
        else 
            dense_1_output_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_output_shape_we0_assign_proc : process(ap_CS_fsm_state9, tmp_4_fu_958_p2, ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12) or ((tmp_4_fu_958_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state9)))) then 
            dense_1_output_shape_we0 <= ap_const_logic_1;
        else 
            dense_1_output_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_we1_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state12))) then 
            dense_1_output_shape_we1 <= ap_const_logic_1;
        else 
            dense_1_output_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_bias_array_5_address0_assign_proc : process(z3_cast3_reg_1363, grp_k2c_dense_2_fu_837_bias_array_address0, ap_CS_fsm_state28, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            dense_2_bias_array_5_address0 <= z3_cast3_reg_1363(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_bias_array_5_address0 <= grp_k2c_dense_2_fu_837_bias_array_address0;
        else 
            dense_2_bias_array_5_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_bias_array_5_ce0_assign_proc : process(grp_k2c_dense_2_fu_837_bias_array_ce0, ap_CS_fsm_state28, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            dense_2_bias_array_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_bias_array_5_ce0 <= grp_k2c_dense_2_fu_837_bias_array_ce0;
        else 
            dense_2_bias_array_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_bias_array_5_we0_assign_proc : process(ap_CS_fsm_state28)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state28)) then 
            dense_2_bias_array_5_we0 <= ap_const_logic_1;
        else 
            dense_2_bias_array_5_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_bias_array_address0 <= z3_cast3_fu_1115_p1(5 - 1 downto 0);

    dense_2_bias_array_ce0_assign_proc : process(ap_CS_fsm_state27)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            dense_2_bias_array_ce0 <= ap_const_logic_1;
        else 
            dense_2_bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_array_4_address0_assign_proc : process(z4_cast4_reg_1345, grp_k2c_dense_2_fu_837_kernel_array_address0, ap_CS_fsm_state26, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            dense_2_kernel_array_4_address0 <= z4_cast4_reg_1345(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_kernel_array_4_address0 <= grp_k2c_dense_2_fu_837_kernel_array_address0;
        else 
            dense_2_kernel_array_4_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_kernel_array_4_ce0_assign_proc : process(grp_k2c_dense_2_fu_837_kernel_array_ce0, ap_CS_fsm_state26, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            dense_2_kernel_array_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_kernel_array_4_ce0 <= grp_k2c_dense_2_fu_837_kernel_array_ce0;
        else 
            dense_2_kernel_array_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_array_4_we0_assign_proc : process(ap_CS_fsm_state26)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state26)) then 
            dense_2_kernel_array_4_we0 <= ap_const_logic_1;
        else 
            dense_2_kernel_array_4_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_2_kernel_array_address0 <= z4_cast4_fu_1092_p1(11 - 1 downto 0);

    dense_2_kernel_array_ce0_assign_proc : process(ap_CS_fsm_state25)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state25)) then 
            dense_2_kernel_array_ce0 <= ap_const_logic_1;
        else 
            dense_2_kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state22, grp_k2c_dense_2_fu_837_kernel_shape_address0, ap_CS_fsm_state24, ap_CS_fsm_state39, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dense_2_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            dense_2_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_kernel_shape_address0 <= grp_k2c_dense_2_fu_837_kernel_shape_address0;
        else 
            dense_2_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_2_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dense_2_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            dense_2_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_2_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_2_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state22, grp_k2c_dense_2_fu_837_kernel_shape_ce0, ap_CS_fsm_state24, ap_CS_fsm_state39, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state22) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dense_2_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_kernel_shape_ce0 <= grp_k2c_dense_2_fu_837_kernel_shape_ce0;
        else 
            dense_2_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dense_2_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_2_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state22, ap_CS_fsm_state24, ap_CS_fsm_state23)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state24)) then 
            dense_2_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state23)) then 
            dense_2_kernel_shape_d0 <= ap_const_lv64_19;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_kernel_shape_d0 <= ap_const_lv64_32;
        else 
            dense_2_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state22, tmp_1_fu_1068_p2, ap_CS_fsm_state24, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23) or ((tmp_1_fu_1068_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state22)))) then 
            dense_2_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_2_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state24, ap_CS_fsm_state23)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state24) or (ap_const_logic_1 = ap_CS_fsm_state23))) then 
            dense_2_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_2_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_array_address0_assign_proc : process(ap_CS_fsm_state22, grp_k2c_dense_1_fu_788_input_array_address0, grp_k2c_dense_2_fu_837_output_array_address0, ap_CS_fsm_state41, ap_CS_fsm_state39, z5_cast5_fu_1063_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_output_array_address0 <= z5_cast5_fu_1063_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_output_array_address0 <= grp_k2c_dense_2_fu_837_output_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_2_output_array_address0 <= grp_k2c_dense_1_fu_788_input_array_address0;
        else 
            dense_2_output_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_output_array_ce0_assign_proc : process(ap_CS_fsm_state22, grp_k2c_dense_1_fu_788_input_array_ce0, grp_k2c_dense_2_fu_837_output_array_ce0, ap_CS_fsm_state41, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_output_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_output_array_ce0 <= grp_k2c_dense_2_fu_837_output_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_2_output_array_ce0 <= grp_k2c_dense_1_fu_788_input_array_ce0;
        else 
            dense_2_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_array_d0_assign_proc : process(ap_CS_fsm_state22, grp_k2c_dense_2_fu_837_output_array_d0, ap_CS_fsm_state39)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state22)) then 
            dense_2_output_array_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_output_array_d0 <= grp_k2c_dense_2_fu_837_output_array_d0;
        else 
            dense_2_output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_output_array_we0_assign_proc : process(ap_CS_fsm_state22, grp_k2c_dense_2_fu_837_output_array_we0, tmp_1_fu_1068_p2, ap_CS_fsm_state39)
    begin
        if (((tmp_1_fu_1068_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state22))) then 
            dense_2_output_array_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state39)) then 
            dense_2_output_array_we0 <= grp_k2c_dense_2_fu_837_output_array_we0;
        else 
            dense_2_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_address0_assign_proc : process(ap_CS_fsm_state18, grp_k2c_dense_1_fu_788_input_shape_address0, ap_CS_fsm_state21, ap_CS_fsm_state41, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_2_output_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_2_output_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_2_output_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_2_output_shape_address0 <= grp_k2c_dense_1_fu_788_input_shape_address0;
        else 
            dense_2_output_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_2_output_shape_address1_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state21)) then 
            dense_2_output_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state20)) then 
            dense_2_output_shape_address1 <= ap_const_lv3_2;
        else 
            dense_2_output_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_2_output_shape_ce0_assign_proc : process(ap_CS_fsm_state18, grp_k2c_dense_1_fu_788_input_shape_ce0, ap_CS_fsm_state21, ap_CS_fsm_state41, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state18) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dense_2_output_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_2_output_shape_ce0 <= grp_k2c_dense_1_fu_788_input_shape_ce0;
        else 
            dense_2_output_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_ce1_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dense_2_output_shape_ce1 <= ap_const_logic_1;
        else 
            dense_2_output_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_d0_assign_proc : process(ap_CS_fsm_state18, ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dense_2_output_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state18)) then 
            dense_2_output_shape_d0 <= ap_const_lv64_19;
        else 
            dense_2_output_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_output_shape_we0_assign_proc : process(ap_CS_fsm_state18, tmp_s_fu_1039_p2, ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20) or ((tmp_s_fu_1039_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state18)))) then 
            dense_2_output_shape_we0 <= ap_const_logic_1;
        else 
            dense_2_output_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_we1_assign_proc : process(ap_CS_fsm_state21, ap_CS_fsm_state20)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state21) or (ap_const_logic_1 = ap_CS_fsm_state20))) then 
            dense_2_output_shape_we1 <= ap_const_logic_1;
        else 
            dense_2_output_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_bias_array_3_address0_assign_proc : process(z1_cast1_reg_1399, grp_k2c_dense_1_fu_788_bias_array_address0, ap_CS_fsm_state34, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dense_3_bias_array_3_address0 <= z1_cast1_reg_1399(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_3_bias_array_3_address0 <= grp_k2c_dense_1_fu_788_bias_array_address0;
        else 
            dense_3_bias_array_3_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_3_bias_array_3_ce0_assign_proc : process(grp_k2c_dense_1_fu_788_bias_array_ce0, ap_CS_fsm_state34, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dense_3_bias_array_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_3_bias_array_3_ce0 <= grp_k2c_dense_1_fu_788_bias_array_ce0;
        else 
            dense_3_bias_array_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_bias_array_3_we0_assign_proc : process(ap_CS_fsm_state34)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state34)) then 
            dense_3_bias_array_3_we0 <= ap_const_logic_1;
        else 
            dense_3_bias_array_3_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_3_bias_array_address0 <= z1_cast1_fu_1161_p1(4 - 1 downto 0);

    dense_3_bias_array_ce0_assign_proc : process(ap_CS_fsm_state33)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state33)) then 
            dense_3_bias_array_ce0 <= ap_const_logic_1;
        else 
            dense_3_bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_array_2_address0_assign_proc : process(z2_cast2_reg_1381, grp_k2c_dense_1_fu_788_kernel_array_address0, ap_CS_fsm_state32, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dense_3_kernel_array_2_address0 <= z2_cast2_reg_1381(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_3_kernel_array_2_address0 <= grp_k2c_dense_1_fu_788_kernel_array_address0;
        else 
            dense_3_kernel_array_2_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_3_kernel_array_2_ce0_assign_proc : process(grp_k2c_dense_1_fu_788_kernel_array_ce0, ap_CS_fsm_state32, ap_CS_fsm_state41)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dense_3_kernel_array_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_3_kernel_array_2_ce0 <= grp_k2c_dense_1_fu_788_kernel_array_ce0;
        else 
            dense_3_kernel_array_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_array_2_we0_assign_proc : process(ap_CS_fsm_state32)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state32)) then 
            dense_3_kernel_array_2_we0 <= ap_const_logic_1;
        else 
            dense_3_kernel_array_2_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_3_kernel_array_address0 <= z2_cast2_fu_1144_p1(8 - 1 downto 0);

    dense_3_kernel_array_ce0_assign_proc : process(ap_CS_fsm_state31)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state31)) then 
            dense_3_kernel_array_ce0 <= ap_const_logic_1;
        else 
            dense_3_kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state27, grp_k2c_dense_1_fu_788_kernel_shape_address0, ap_CS_fsm_state30, ap_CS_fsm_state41, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            dense_3_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            dense_3_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            dense_3_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_3_kernel_shape_address0 <= grp_k2c_dense_1_fu_788_kernel_shape_address0;
        else 
            dense_3_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_3_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            dense_3_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            dense_3_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_3_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_3_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state27, grp_k2c_dense_1_fu_788_kernel_shape_ce0, ap_CS_fsm_state30, ap_CS_fsm_state41, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state27) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            dense_3_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state41)) then 
            dense_3_kernel_shape_ce0 <= grp_k2c_dense_1_fu_788_kernel_shape_ce0;
        else 
            dense_3_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            dense_3_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_3_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state27, ap_CS_fsm_state30, ap_CS_fsm_state29)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state30)) then 
            dense_3_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state29)) then 
            dense_3_kernel_shape_d0 <= ap_const_lv64_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state27)) then 
            dense_3_kernel_shape_d0 <= ap_const_lv64_19;
        else 
            dense_3_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_3_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state27, tmp_5_fu_1120_p2, ap_CS_fsm_state30, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29) or ((tmp_5_fu_1120_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state27)))) then 
            dense_3_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_3_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state30, ap_CS_fsm_state29)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state30) or (ap_const_logic_1 = ap_CS_fsm_state29))) then 
            dense_3_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_3_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_3_output_array_address0 <= grp_k2c_dense_1_fu_788_output_array_address0;
    dense_3_output_array_ce0 <= grp_k2c_dense_1_fu_788_output_array_ce0;
    dense_3_output_array_d0 <= grp_k2c_dense_1_fu_788_output_array_d0;
    dense_3_output_array_we0 <= grp_k2c_dense_1_fu_788_output_array_we0;
    dense_3_output_shape_address0 <= ap_const_lv3_0;
    dense_3_output_shape_address1 <= ap_const_lv3_0;
    dense_3_output_shape_ce0 <= ap_const_logic_0;
    dense_3_output_shape_ce1 <= ap_const_logic_0;
    dense_3_output_shape_d0 <= ap_const_lv64_0;
    dense_3_output_shape_d1 <= ap_const_lv64_0;
    dense_3_output_shape_we0 <= ap_const_logic_0;
    dense_3_output_shape_we1 <= ap_const_logic_0;

    dense_bias_array_1_address0_assign_proc : process(z9_cast9_reg_1275, grp_k2c_dense_fu_861_bias_array_address0, ap_CS_fsm_state10, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_bias_array_1_address0 <= z9_cast9_reg_1275(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_bias_array_1_address0 <= grp_k2c_dense_fu_861_bias_array_address0;
        else 
            dense_bias_array_1_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_bias_array_1_ce0_assign_proc : process(grp_k2c_dense_fu_861_bias_array_ce0, ap_CS_fsm_state10, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_bias_array_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_bias_array_1_ce0 <= grp_k2c_dense_fu_861_bias_array_ce0;
        else 
            dense_bias_array_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_bias_array_1_we0_assign_proc : process(ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_bias_array_1_we0 <= ap_const_logic_1;
        else 
            dense_bias_array_1_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_bias_array_address0 <= z9_cast9_fu_953_p1(7 - 1 downto 0);

    dense_bias_array_ce0_assign_proc : process(ap_CS_fsm_state9)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_bias_array_ce0 <= ap_const_logic_1;
        else 
            dense_bias_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_input_input_array_address0 <= grp_k2c_dense_fu_861_input_array_address0;
    dense_input_input_array_ce0 <= grp_k2c_dense_fu_861_input_array_ce0;
    dense_input_input_shape_address0 <= grp_k2c_dense_fu_861_input_shape_address0;
    dense_input_input_shape_ce0 <= grp_k2c_dense_fu_861_input_shape_ce0;

    dense_kernel_array_0_address0_assign_proc : process(z10_cast_reg_1257, grp_k2c_dense_fu_861_kernel_array_address0, ap_CS_fsm_state8, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_kernel_array_0_address0 <= z10_cast_reg_1257(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_kernel_array_0_address0 <= grp_k2c_dense_fu_861_kernel_array_address0;
        else 
            dense_kernel_array_0_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_kernel_array_0_ce0_assign_proc : process(grp_k2c_dense_fu_861_kernel_array_ce0, ap_CS_fsm_state8, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_kernel_array_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_kernel_array_0_ce0 <= grp_k2c_dense_fu_861_kernel_array_ce0;
        else 
            dense_kernel_array_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_array_0_we0_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_kernel_array_0_we0 <= ap_const_logic_1;
        else 
            dense_kernel_array_0_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_kernel_array_address0 <= z10_cast_fu_936_p1(17 - 1 downto 0);

    dense_kernel_array_ce0_assign_proc : process(ap_CS_fsm_state7)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_kernel_array_ce0 <= ap_const_logic_1;
        else 
            dense_kernel_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_dense_fu_861_kernel_shape_address0, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_kernel_shape_address0 <= grp_k2c_dense_fu_861_kernel_shape_address0;
        else 
            dense_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_dense_fu_861_kernel_shape_ce0, ap_CS_fsm_state6, ap_CS_fsm_state35, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_kernel_shape_ce0 <= grp_k2c_dense_fu_861_kernel_shape_ce0;
        else 
            dense_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dense_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_kernel_shape_d0 <= ap_const_lv64_64;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_kernel_shape_d0 <= ap_const_lv64_310;
        else 
            dense_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state4, tmp_fu_924_p2, ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6) or ((tmp_fu_924_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state4)))) then 
            dense_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state6, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state6))) then 
            dense_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_array_address0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_dense_3_fu_813_input_array_address0, grp_k2c_dense_fu_861_output_array_address0, ap_CS_fsm_state37, ap_CS_fsm_state35, z_cast_fu_919_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_output_array_address0 <= z_cast_fu_919_p1(17 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_output_array_address0 <= grp_k2c_dense_fu_861_output_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_output_array_address0 <= grp_k2c_dense_3_fu_813_input_array_address0;
        else 
            dense_output_array_address0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_output_array_ce0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_dense_3_fu_813_input_array_ce0, grp_k2c_dense_fu_861_output_array_ce0, ap_CS_fsm_state37, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_output_array_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_output_array_ce0 <= grp_k2c_dense_fu_861_output_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_output_array_ce0 <= grp_k2c_dense_3_fu_813_input_array_ce0;
        else 
            dense_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_array_d0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_dense_fu_861_output_array_d0, ap_CS_fsm_state35)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_output_array_d0 <= ap_const_lv32_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_output_array_d0 <= grp_k2c_dense_fu_861_output_array_d0;
        else 
            dense_output_array_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_output_array_we0_assign_proc : process(ap_CS_fsm_state4, grp_k2c_dense_fu_861_output_array_we0, tmp_fu_924_p2, ap_CS_fsm_state35)
    begin
        if (((tmp_fu_924_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_output_array_we0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state35)) then 
            dense_output_array_we0 <= grp_k2c_dense_fu_861_output_array_we0;
        else 
            dense_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_address0_assign_proc : process(ap_CS_fsm_state1, grp_k2c_dense_3_fu_813_input_shape_address0, ap_CS_fsm_state3, ap_CS_fsm_state37, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_output_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_output_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            dense_output_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_output_shape_address0 <= grp_k2c_dense_3_fu_813_input_shape_address0;
        else 
            dense_output_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_output_shape_address1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_output_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_output_shape_address1 <= ap_const_lv3_2;
        else 
            dense_output_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_output_shape_ce0_assign_proc : process(ap_start, ap_CS_fsm_state1, grp_k2c_dense_3_fu_813_input_shape_ce0, ap_CS_fsm_state3, ap_CS_fsm_state37, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            dense_output_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state37)) then 
            dense_output_shape_ce0 <= grp_k2c_dense_3_fu_813_input_shape_ce0;
        else 
            dense_output_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_ce1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dense_output_shape_ce1 <= ap_const_logic_1;
        else 
            dense_output_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_d0_assign_proc : process(ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dense_output_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            dense_output_shape_d0 <= ap_const_lv64_64;
        else 
            dense_output_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_output_shape_we0_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            dense_output_shape_we0 <= ap_const_logic_1;
        else 
            dense_output_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_we1_assign_proc : process(ap_CS_fsm_state3, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            dense_output_shape_we1 <= ap_const_logic_1;
        else 
            dense_output_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_k2c_dense_1_fu_788_ap_start <= grp_k2c_dense_1_fu_788_ap_start_reg;
    grp_k2c_dense_2_fu_837_ap_start <= grp_k2c_dense_2_fu_837_ap_start_reg;
    grp_k2c_dense_3_fu_813_ap_start <= grp_k2c_dense_3_fu_813_ap_start_reg;
    grp_k2c_dense_fu_861_ap_start <= grp_k2c_dense_fu_861_ap_start_reg;
    tmp_1_fu_1068_p2 <= "1" when (z5_reg_733 = ap_const_lv5_19) else "0";
    tmp_2_fu_941_p2 <= "1" when (z10_reg_678 = ap_const_lv17_13240) else "0";
    tmp_3_fu_1097_p2 <= "1" when (z4_reg_744 = ap_const_lv11_4E2) else "0";
    tmp_4_fu_958_p2 <= "1" when (z9_reg_689 = ap_const_lv7_64) else "0";
    tmp_5_fu_1120_p2 <= "1" when (z3_reg_755 = ap_const_lv5_19) else "0";
    tmp_6_fu_987_p2 <= "1" when (z8_reg_700 = ap_const_lv6_32) else "0";
    tmp_7_fu_1149_p2 <= "1" when (z2_reg_766 = ap_const_lv8_FA) else "0";
    tmp_8_fu_1016_p2 <= "1" when (z7_reg_711 = ap_const_lv13_1388) else "0";
    tmp_9_fu_1166_p2 <= "1" when (z1_reg_777 = ap_const_lv4_A) else "0";
    tmp_fu_924_p2 <= "1" when (z_reg_667 = ap_const_lv7_64) else "0";
    tmp_s_fu_1039_p2 <= "1" when (z6_reg_722 = ap_const_lv6_32) else "0";
    z10_1_fu_947_p2 <= std_logic_vector(unsigned(z10_reg_678) + unsigned(ap_const_lv17_1));
    z10_cast_fu_936_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z10_reg_678),64));
    z11_fu_930_p2 <= std_logic_vector(unsigned(z_reg_667) + unsigned(ap_const_lv7_1));
    z1_1_fu_1172_p2 <= std_logic_vector(unsigned(z1_reg_777) + unsigned(ap_const_lv4_1));
    z1_cast1_fu_1161_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_reg_777),64));
    z2_1_fu_1155_p2 <= std_logic_vector(unsigned(z2_reg_766) + unsigned(ap_const_lv8_1));
    z2_cast2_fu_1144_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_reg_766),64));
    z3_1_fu_1126_p2 <= std_logic_vector(unsigned(z3_reg_755) + unsigned(ap_const_lv5_1));
    z3_cast3_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z3_reg_755),64));
    z4_1_fu_1103_p2 <= std_logic_vector(unsigned(z4_reg_744) + unsigned(ap_const_lv11_1));
    z4_cast4_fu_1092_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z4_reg_744),64));
    z5_1_fu_1074_p2 <= std_logic_vector(unsigned(z5_reg_733) + unsigned(ap_const_lv5_1));
    z5_cast5_fu_1063_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z5_reg_733),64));
    z6_1_fu_1045_p2 <= std_logic_vector(unsigned(z6_reg_722) + unsigned(ap_const_lv6_1));
    z6_cast6_fu_1034_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z6_reg_722),64));
    z7_1_fu_1022_p2 <= std_logic_vector(unsigned(z7_reg_711) + unsigned(ap_const_lv13_1));
    z7_cast7_fu_1011_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z7_reg_711),64));
    z8_1_fu_993_p2 <= std_logic_vector(unsigned(z8_reg_700) + unsigned(ap_const_lv6_1));
    z8_cast8_fu_982_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z8_reg_700),64));
    z9_1_fu_964_p2 <= std_logic_vector(unsigned(z9_reg_689) + unsigned(ap_const_lv7_1));
    z9_cast9_fu_953_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z9_reg_689),64));
    z_cast_fu_919_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z_reg_667),64));
end behav;
