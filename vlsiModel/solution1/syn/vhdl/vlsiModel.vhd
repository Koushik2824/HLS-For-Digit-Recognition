-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
-- Version: 2018.2
-- Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity vlsiModel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    dense_input_input_array_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dense_input_input_array_ce0 : OUT STD_LOGIC;
    dense_input_input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
    dense_input_input_ndim : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_input_input_numel : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_input_input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_input_input_shape_ce0 : OUT STD_LOGIC;
    dense_input_input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_input_input_shape_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_input_input_shape_ce1 : OUT STD_LOGIC;
    dense_input_input_shape_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_array_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
    dense_3_output_array_ce0 : OUT STD_LOGIC;
    dense_3_output_array_we0 : OUT STD_LOGIC;
    dense_3_output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    dense_3_output_ndim : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_numel : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_3_output_shape_ce0 : OUT STD_LOGIC;
    dense_3_output_shape_we0 : OUT STD_LOGIC;
    dense_3_output_shape_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    dense_3_output_shape_ce1 : OUT STD_LOGIC;
    dense_3_output_shape_we1 : OUT STD_LOGIC;
    dense_3_output_shape_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
    dense_3_output_shape_q1 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of vlsiModel is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "vlsiModel,hls_ip_2018_2,{HLS_INPUT_TYPE=c,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xc7a200tfbg676-2,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=9.122000,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=870,HLS_SYN_DSP=329,HLS_SYN_FF=49842,HLS_SYN_LUT=41974,HLS_VERSION=2018_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv64_1 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000001";
    constant ap_const_lv64_2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000010";
    constant ap_const_lv64_3 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000011";
    constant ap_const_lv64_4 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000100";
    constant ap_const_lv64_64 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000001100100";
    constant ap_const_lv64_32 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000110010";
    constant ap_const_lv64_1388 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000001001110001000";
    constant ap_const_lv64_19 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000011001";
    constant ap_const_lv64_4E2 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000010011100010";
    constant ap_const_lv64_FA : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000011111010";
    constant ap_const_lv64_A : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000001010";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv64_310 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000001100010000";
    constant ap_const_lv10_310 : STD_LOGIC_VECTOR (9 downto 0) := "1100010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv4_A : STD_LOGIC_VECTOR (3 downto 0) := "1010";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_boolean_1 : BOOLEAN := true;

    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal dense_input_input_ar_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal dense_input_input_ar_ce0 : STD_LOGIC;
    signal dense_input_input_ar_we0 : STD_LOGIC;
    signal dense_input_input_ar_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_output_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_output_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_output_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_output_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_kernel_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_kernel_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_1_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_output_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_output_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_kernel_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_kernel_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_2_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_3_kernel_ndim : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_3_kernel_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_3_bias_numel : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal dense_output_array_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal dense_output_array_ce0 : STD_LOGIC;
    signal dense_output_array_we0 : STD_LOGIC;
    signal dense_output_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_input_input_sh_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_input_input_sh_ce0 : STD_LOGIC;
    signal dense_input_input_sh_we0 : STD_LOGIC;
    signal dense_input_input_sh_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_input_input_sh_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_input_input_sh_ce1 : STD_LOGIC;
    signal dense_input_input_sh_we1 : STD_LOGIC;
    signal dense_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_kernel_shape_ce0 : STD_LOGIC;
    signal dense_kernel_shape_we0 : STD_LOGIC;
    signal dense_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_kernel_shape_ce1 : STD_LOGIC;
    signal dense_kernel_shape_we1 : STD_LOGIC;
    signal dense_1_output_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal dense_1_output_array_ce0 : STD_LOGIC;
    signal dense_1_output_array_we0 : STD_LOGIC;
    signal dense_1_output_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_output_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_output_shape_ce0 : STD_LOGIC;
    signal dense_output_shape_we0 : STD_LOGIC;
    signal dense_output_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_output_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_output_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_output_shape_ce1 : STD_LOGIC;
    signal dense_output_shape_we1 : STD_LOGIC;
    signal dense_1_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_kernel_shape_ce0 : STD_LOGIC;
    signal dense_1_kernel_shape_we0 : STD_LOGIC;
    signal dense_1_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_kernel_shape_ce1 : STD_LOGIC;
    signal dense_1_kernel_shape_we1 : STD_LOGIC;
    signal dense_2_output_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal dense_2_output_array_ce0 : STD_LOGIC;
    signal dense_2_output_array_we0 : STD_LOGIC;
    signal dense_2_output_array_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal dense_1_output_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_output_shape_ce0 : STD_LOGIC;
    signal dense_1_output_shape_we0 : STD_LOGIC;
    signal dense_1_output_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_output_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_1_output_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_1_output_shape_ce1 : STD_LOGIC;
    signal dense_1_output_shape_we1 : STD_LOGIC;
    signal dense_2_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_kernel_shape_ce0 : STD_LOGIC;
    signal dense_2_kernel_shape_we0 : STD_LOGIC;
    signal dense_2_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_kernel_shape_ce1 : STD_LOGIC;
    signal dense_2_kernel_shape_we1 : STD_LOGIC;
    signal dense_2_output_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_output_shape_ce0 : STD_LOGIC;
    signal dense_2_output_shape_we0 : STD_LOGIC;
    signal dense_2_output_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_output_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_2_output_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_2_output_shape_ce1 : STD_LOGIC;
    signal dense_2_output_shape_we1 : STD_LOGIC;
    signal dense_3_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_3_kernel_shape_ce0 : STD_LOGIC;
    signal dense_3_kernel_shape_we0 : STD_LOGIC;
    signal dense_3_kernel_shape_d0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_3_kernel_shape_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal dense_3_kernel_shape_address1 : STD_LOGIC_VECTOR (2 downto 0);
    signal dense_3_kernel_shape_ce1 : STD_LOGIC;
    signal dense_3_kernel_shape_we1 : STD_LOGIC;
    signal dense_3_output_array_r_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal dense_3_output_array_r_ce0 : STD_LOGIC;
    signal dense_3_output_array_r_we0 : STD_LOGIC;
    signal dense_3_output_array_r_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_622 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal reg_628 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal z1_cast2_fu_634_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z1_cast2_reg_823 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal z1_1_fu_645_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal z1_1_reg_831 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_fu_639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal z2_cast1_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal z2_cast1_reg_941 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal z2_1_fu_817_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal z2_1_reg_949 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_2_fu_811_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_k2c_dense_1_fu_515_ap_start : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_ap_done : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_1_fu_515_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_1_fu_515_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_output_array_address0 : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_k2c_dense_1_fu_515_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_1_fu_515_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_1_fu_515_dense_2_output_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_dense_1_fu_515_dense_2_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_ap_start : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_ap_done : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_3_fu_540_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_3_fu_540_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_dense_1_output_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_k2c_dense_3_fu_540_dense_1_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_dense_1_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_3_fu_540_dense_1_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_3_fu_540_dense_output_array_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_k2c_dense_3_fu_540_dense_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_ap_start : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_ap_done : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_2_fu_564_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_2_fu_564_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_dense_2_output_array_address0 : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_k2c_dense_2_fu_564_dense_2_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_dense_2_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_2_fu_564_dense_2_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_k2c_dense_2_fu_564_dense_1_output_array_address0 : STD_LOGIC_VECTOR (5 downto 0);
    signal grp_k2c_dense_2_fu_564_dense_1_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_588_ap_start : STD_LOGIC;
    signal grp_k2c_dense_fu_588_ap_done : STD_LOGIC;
    signal grp_k2c_dense_fu_588_ap_idle : STD_LOGIC;
    signal grp_k2c_dense_fu_588_ap_ready : STD_LOGIC;
    signal grp_k2c_dense_fu_588_input_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_fu_588_input_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_588_kernel_shape_address0 : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_k2c_dense_fu_588_kernel_shape_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_588_input_array_address0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_k2c_dense_fu_588_input_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_588_dense_output_array_address0 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_k2c_dense_fu_588_dense_output_array_ce0 : STD_LOGIC;
    signal grp_k2c_dense_fu_588_dense_output_array_we0 : STD_LOGIC;
    signal grp_k2c_dense_fu_588_dense_output_array_d0 : STD_LOGIC_VECTOR (31 downto 0);
    signal z1_reg_493 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal z2_reg_504 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal grp_k2c_dense_1_fu_515_ap_start_reg : STD_LOGIC := '0';
    signal grp_k2c_dense_3_fu_540_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal grp_k2c_dense_2_fu_564_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal grp_k2c_dense_fu_588_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);

    component k2c_dense_1 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        output_array_address0 : OUT STD_LOGIC_VECTOR (3 downto 0);
        output_array_ce0 : OUT STD_LOGIC;
        output_array_we0 : OUT STD_LOGIC;
        output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_2_output_array_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_output_array_ce0 : OUT STD_LOGIC;
        dense_2_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component k2c_dense_3 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        dense_1_output_array_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dense_1_output_array_ce0 : OUT STD_LOGIC;
        dense_1_output_array_we0 : OUT STD_LOGIC;
        dense_1_output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dense_1_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_output_array_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        dense_output_array_ce0 : OUT STD_LOGIC;
        dense_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component k2c_dense_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        output_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        bias_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        dense_2_output_array_address0 : OUT STD_LOGIC_VECTOR (4 downto 0);
        dense_2_output_array_ce0 : OUT STD_LOGIC;
        dense_2_output_array_we0 : OUT STD_LOGIC;
        dense_2_output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dense_2_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_1_output_array_address0 : OUT STD_LOGIC_VECTOR (5 downto 0);
        dense_1_output_array_ce0 : OUT STD_LOGIC;
        dense_1_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component k2c_dense IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        input_ndim_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_numel_read : IN STD_LOGIC_VECTOR (63 downto 0);
        input_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        input_shape_ce0 : OUT STD_LOGIC;
        input_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        kernel_shape_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
        kernel_shape_ce0 : OUT STD_LOGIC;
        kernel_shape_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        input_array_address0 : OUT STD_LOGIC_VECTOR (9 downto 0);
        input_array_ce0 : OUT STD_LOGIC;
        input_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0);
        dense_output_array_address0 : OUT STD_LOGIC_VECTOR (6 downto 0);
        dense_output_array_ce0 : OUT STD_LOGIC;
        dense_output_array_we0 : OUT STD_LOGIC;
        dense_output_array_d0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        dense_output_array_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_iLf8 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (9 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_oMgi IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (6 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_iNgs IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (63 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (2 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component vlsiModel_dense_1PgM IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (5 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_2Shg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (4 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component vlsiModel_dense_3Xh4 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (3 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (31 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;



begin
    dense_input_input_ar_U : component vlsiModel_dense_iLf8
    generic map (
        DataWidth => 32,
        AddressRange => 784,
        AddressWidth => 10)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_input_input_ar_address0,
        ce0 => dense_input_input_ar_ce0,
        we0 => dense_input_input_ar_we0,
        d0 => dense_input_input_array_q0,
        q0 => dense_input_input_ar_q0);

    dense_output_array_U : component vlsiModel_dense_oMgi
    generic map (
        DataWidth => 32,
        AddressRange => 100,
        AddressWidth => 7)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_output_array_address0,
        ce0 => dense_output_array_ce0,
        we0 => dense_output_array_we0,
        d0 => grp_k2c_dense_fu_588_dense_output_array_d0,
        q0 => dense_output_array_q0);

    dense_input_input_sh_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_input_input_sh_address0,
        ce0 => dense_input_input_sh_ce0,
        we0 => dense_input_input_sh_we0,
        d0 => dense_input_input_shape_q0,
        q0 => dense_input_input_sh_q0,
        address1 => dense_input_input_sh_address1,
        ce1 => dense_input_input_sh_ce1,
        we1 => dense_input_input_sh_we1,
        d1 => dense_input_input_shape_q1);

    dense_kernel_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_kernel_shape_address0,
        ce0 => dense_kernel_shape_ce0,
        we0 => dense_kernel_shape_we0,
        d0 => dense_kernel_shape_d0,
        q0 => dense_kernel_shape_q0,
        address1 => dense_kernel_shape_address1,
        ce1 => dense_kernel_shape_ce1,
        we1 => dense_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_1_output_array_U : component vlsiModel_dense_1PgM
    generic map (
        DataWidth => 32,
        AddressRange => 50,
        AddressWidth => 6)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_output_array_address0,
        ce0 => dense_1_output_array_ce0,
        we0 => dense_1_output_array_we0,
        d0 => grp_k2c_dense_3_fu_540_dense_1_output_array_d0,
        q0 => dense_1_output_array_q0);

    dense_output_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_output_shape_address0,
        ce0 => dense_output_shape_ce0,
        we0 => dense_output_shape_we0,
        d0 => dense_output_shape_d0,
        q0 => dense_output_shape_q0,
        address1 => dense_output_shape_address1,
        ce1 => dense_output_shape_ce1,
        we1 => dense_output_shape_we1,
        d1 => ap_const_lv64_1);

    dense_1_kernel_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_kernel_shape_address0,
        ce0 => dense_1_kernel_shape_ce0,
        we0 => dense_1_kernel_shape_we0,
        d0 => dense_1_kernel_shape_d0,
        q0 => dense_1_kernel_shape_q0,
        address1 => dense_1_kernel_shape_address1,
        ce1 => dense_1_kernel_shape_ce1,
        we1 => dense_1_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_2_output_array_U : component vlsiModel_dense_2Shg
    generic map (
        DataWidth => 32,
        AddressRange => 25,
        AddressWidth => 5)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_output_array_address0,
        ce0 => dense_2_output_array_ce0,
        we0 => dense_2_output_array_we0,
        d0 => grp_k2c_dense_2_fu_564_dense_2_output_array_d0,
        q0 => dense_2_output_array_q0);

    dense_1_output_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_1_output_shape_address0,
        ce0 => dense_1_output_shape_ce0,
        we0 => dense_1_output_shape_we0,
        d0 => dense_1_output_shape_d0,
        q0 => dense_1_output_shape_q0,
        address1 => dense_1_output_shape_address1,
        ce1 => dense_1_output_shape_ce1,
        we1 => dense_1_output_shape_we1,
        d1 => ap_const_lv64_1);

    dense_2_kernel_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_kernel_shape_address0,
        ce0 => dense_2_kernel_shape_ce0,
        we0 => dense_2_kernel_shape_we0,
        d0 => dense_2_kernel_shape_d0,
        q0 => dense_2_kernel_shape_q0,
        address1 => dense_2_kernel_shape_address1,
        ce1 => dense_2_kernel_shape_ce1,
        we1 => dense_2_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_2_output_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_2_output_shape_address0,
        ce0 => dense_2_output_shape_ce0,
        we0 => dense_2_output_shape_we0,
        d0 => dense_2_output_shape_d0,
        q0 => dense_2_output_shape_q0,
        address1 => dense_2_output_shape_address1,
        ce1 => dense_2_output_shape_ce1,
        we1 => dense_2_output_shape_we1,
        d1 => ap_const_lv64_1);

    dense_3_kernel_shape_U : component vlsiModel_dense_iNgs
    generic map (
        DataWidth => 64,
        AddressRange => 5,
        AddressWidth => 3)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_kernel_shape_address0,
        ce0 => dense_3_kernel_shape_ce0,
        we0 => dense_3_kernel_shape_we0,
        d0 => dense_3_kernel_shape_d0,
        q0 => dense_3_kernel_shape_q0,
        address1 => dense_3_kernel_shape_address1,
        ce1 => dense_3_kernel_shape_ce1,
        we1 => dense_3_kernel_shape_we1,
        d1 => ap_const_lv64_1);

    dense_3_output_array_r_U : component vlsiModel_dense_3Xh4
    generic map (
        DataWidth => 32,
        AddressRange => 10,
        AddressWidth => 4)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => dense_3_output_array_r_address0,
        ce0 => dense_3_output_array_r_ce0,
        we0 => dense_3_output_array_r_we0,
        d0 => grp_k2c_dense_1_fu_515_output_array_d0,
        q0 => dense_3_output_array_r_q0);

    grp_k2c_dense_1_fu_515 : component k2c_dense_1
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_1_fu_515_ap_start,
        ap_done => grp_k2c_dense_1_fu_515_ap_done,
        ap_idle => grp_k2c_dense_1_fu_515_ap_idle,
        ap_ready => grp_k2c_dense_1_fu_515_ap_ready,
        input_ndim_read => dense_2_output_ndim,
        input_numel_read => reg_628,
        input_shape_address0 => grp_k2c_dense_1_fu_515_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_1_fu_515_input_shape_ce0,
        input_shape_q0 => dense_2_output_shape_q0,
        kernel_ndim_read => dense_3_kernel_ndim,
        kernel_numel_read => dense_3_kernel_numel,
        kernel_shape_address0 => grp_k2c_dense_1_fu_515_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_1_fu_515_kernel_shape_ce0,
        kernel_shape_q0 => dense_3_kernel_shape_q0,
        bias_numel_read => dense_3_bias_numel,
        output_array_address0 => grp_k2c_dense_1_fu_515_output_array_address0,
        output_array_ce0 => grp_k2c_dense_1_fu_515_output_array_ce0,
        output_array_we0 => grp_k2c_dense_1_fu_515_output_array_we0,
        output_array_d0 => grp_k2c_dense_1_fu_515_output_array_d0,
        output_array_q0 => dense_3_output_array_r_q0,
        dense_2_output_array_address0 => grp_k2c_dense_1_fu_515_dense_2_output_array_address0,
        dense_2_output_array_ce0 => grp_k2c_dense_1_fu_515_dense_2_output_array_ce0,
        dense_2_output_array_q0 => dense_2_output_array_q0);

    grp_k2c_dense_3_fu_540 : component k2c_dense_3
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_3_fu_540_ap_start,
        ap_done => grp_k2c_dense_3_fu_540_ap_done,
        ap_idle => grp_k2c_dense_3_fu_540_ap_idle,
        ap_ready => grp_k2c_dense_3_fu_540_ap_ready,
        output_numel_read => reg_622,
        input_ndim_read => dense_output_ndim,
        input_numel_read => dense_output_numel,
        input_shape_address0 => grp_k2c_dense_3_fu_540_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_3_fu_540_input_shape_ce0,
        input_shape_q0 => dense_output_shape_q0,
        kernel_ndim_read => dense_1_kernel_ndim,
        kernel_numel_read => dense_1_kernel_numel,
        kernel_shape_address0 => grp_k2c_dense_3_fu_540_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_3_fu_540_kernel_shape_ce0,
        kernel_shape_q0 => dense_1_kernel_shape_q0,
        bias_numel_read => dense_1_bias_numel,
        dense_1_output_array_address0 => grp_k2c_dense_3_fu_540_dense_1_output_array_address0,
        dense_1_output_array_ce0 => grp_k2c_dense_3_fu_540_dense_1_output_array_ce0,
        dense_1_output_array_we0 => grp_k2c_dense_3_fu_540_dense_1_output_array_we0,
        dense_1_output_array_d0 => grp_k2c_dense_3_fu_540_dense_1_output_array_d0,
        dense_1_output_array_q0 => dense_1_output_array_q0,
        dense_output_array_address0 => grp_k2c_dense_3_fu_540_dense_output_array_address0,
        dense_output_array_ce0 => grp_k2c_dense_3_fu_540_dense_output_array_ce0,
        dense_output_array_q0 => dense_output_array_q0);

    grp_k2c_dense_2_fu_564 : component k2c_dense_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_2_fu_564_ap_start,
        ap_done => grp_k2c_dense_2_fu_564_ap_done,
        ap_idle => grp_k2c_dense_2_fu_564_ap_idle,
        ap_ready => grp_k2c_dense_2_fu_564_ap_ready,
        output_numel_read => reg_628,
        input_ndim_read => dense_1_output_ndim,
        input_numel_read => reg_622,
        input_shape_address0 => grp_k2c_dense_2_fu_564_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_2_fu_564_input_shape_ce0,
        input_shape_q0 => dense_1_output_shape_q0,
        kernel_ndim_read => dense_2_kernel_ndim,
        kernel_numel_read => dense_2_kernel_numel,
        kernel_shape_address0 => grp_k2c_dense_2_fu_564_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_2_fu_564_kernel_shape_ce0,
        kernel_shape_q0 => dense_2_kernel_shape_q0,
        bias_numel_read => dense_2_bias_numel,
        dense_2_output_array_address0 => grp_k2c_dense_2_fu_564_dense_2_output_array_address0,
        dense_2_output_array_ce0 => grp_k2c_dense_2_fu_564_dense_2_output_array_ce0,
        dense_2_output_array_we0 => grp_k2c_dense_2_fu_564_dense_2_output_array_we0,
        dense_2_output_array_d0 => grp_k2c_dense_2_fu_564_dense_2_output_array_d0,
        dense_2_output_array_q0 => dense_2_output_array_q0,
        dense_1_output_array_address0 => grp_k2c_dense_2_fu_564_dense_1_output_array_address0,
        dense_1_output_array_ce0 => grp_k2c_dense_2_fu_564_dense_1_output_array_ce0,
        dense_1_output_array_q0 => dense_1_output_array_q0);

    grp_k2c_dense_fu_588 : component k2c_dense
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_k2c_dense_fu_588_ap_start,
        ap_done => grp_k2c_dense_fu_588_ap_done,
        ap_idle => grp_k2c_dense_fu_588_ap_idle,
        ap_ready => grp_k2c_dense_fu_588_ap_ready,
        input_ndim_read => dense_input_input_ndim,
        input_numel_read => dense_input_input_numel,
        input_shape_address0 => grp_k2c_dense_fu_588_input_shape_address0,
        input_shape_ce0 => grp_k2c_dense_fu_588_input_shape_ce0,
        input_shape_q0 => dense_input_input_sh_q0,
        kernel_shape_address0 => grp_k2c_dense_fu_588_kernel_shape_address0,
        kernel_shape_ce0 => grp_k2c_dense_fu_588_kernel_shape_ce0,
        kernel_shape_q0 => dense_kernel_shape_q0,
        input_array_address0 => grp_k2c_dense_fu_588_input_array_address0,
        input_array_ce0 => grp_k2c_dense_fu_588_input_array_ce0,
        input_array_q0 => dense_input_input_ar_q0,
        dense_output_array_address0 => grp_k2c_dense_fu_588_dense_output_array_address0,
        dense_output_array_ce0 => grp_k2c_dense_fu_588_dense_output_array_ce0,
        dense_output_array_we0 => grp_k2c_dense_fu_588_dense_output_array_we0,
        dense_output_array_d0 => grp_k2c_dense_fu_588_dense_output_array_d0,
        dense_output_array_q0 => dense_output_array_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    grp_k2c_dense_1_fu_515_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_1_fu_515_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state13)) then 
                    grp_k2c_dense_1_fu_515_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_1_fu_515_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_1_fu_515_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dense_2_fu_564_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_2_fu_564_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                    grp_k2c_dense_2_fu_564_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_2_fu_564_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_2_fu_564_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dense_3_fu_540_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_3_fu_540_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
                    grp_k2c_dense_3_fu_540_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_3_fu_540_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_3_fu_540_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_k2c_dense_fu_588_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_k2c_dense_fu_588_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                    grp_k2c_dense_fu_588_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_k2c_dense_fu_588_ap_ready = ap_const_logic_1)) then 
                    grp_k2c_dense_fu_588_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    z1_reg_493_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                z1_reg_493 <= z1_1_reg_831;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                z1_reg_493 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    z2_reg_504_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                z2_reg_504 <= z2_1_reg_949;
            elsif (((grp_k2c_dense_1_fu_515_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                z2_reg_504 <= ap_const_lv4_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_639_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                dense_1_bias_numel(1) <= '1';
    dense_1_bias_numel(4) <= '1';
    dense_1_bias_numel(5) <= '1';
                dense_1_kernel_ndim(1) <= '1';
                dense_1_kernel_numel(3) <= '1';
    dense_1_kernel_numel(7) <= '1';
    dense_1_kernel_numel(8) <= '1';
    dense_1_kernel_numel(9) <= '1';
    dense_1_kernel_numel(12) <= '1';
                dense_1_output_ndim(0) <= '1';
                dense_1_output_numel(1) <= '1';
    dense_1_output_numel(4) <= '1';
    dense_1_output_numel(5) <= '1';
                dense_2_bias_numel(0) <= '1';
    dense_2_bias_numel(3) <= '1';
    dense_2_bias_numel(4) <= '1';
                dense_2_kernel_ndim(1) <= '1';
                dense_2_kernel_numel(1) <= '1';
    dense_2_kernel_numel(5) <= '1';
    dense_2_kernel_numel(6) <= '1';
    dense_2_kernel_numel(7) <= '1';
    dense_2_kernel_numel(10) <= '1';
                dense_2_output_ndim(0) <= '1';
                dense_2_output_numel(0) <= '1';
    dense_2_output_numel(3) <= '1';
    dense_2_output_numel(4) <= '1';
                dense_3_bias_numel(1) <= '1';
    dense_3_bias_numel(3) <= '1';
                dense_3_kernel_ndim(1) <= '1';
                dense_3_kernel_numel(1) <= '1';
    dense_3_kernel_numel(3) <= '1';
    dense_3_kernel_numel(4) <= '1';
    dense_3_kernel_numel(5) <= '1';
    dense_3_kernel_numel(6) <= '1';
    dense_3_kernel_numel(7) <= '1';
                dense_output_ndim(0) <= '1';
                dense_output_numel(2) <= '1';
    dense_output_numel(5) <= '1';
    dense_output_numel(6) <= '1';
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state11) or (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    reg_622(1) <= dense_1_output_numel(1);    reg_622(5 downto 4) <= dense_1_output_numel(5 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state13) or (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    reg_628(0) <= dense_2_output_numel(0);    reg_628(4 downto 3) <= dense_2_output_numel(4 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                z1_1_reg_831 <= z1_1_fu_645_p2;
                    z1_cast2_reg_823(9 downto 0) <= z1_cast2_fu_634_p1(9 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state15)) then
                z2_1_reg_949 <= z2_1_fu_817_p2;
                    z2_cast1_reg_941(3 downto 0) <= z2_cast1_fu_806_p1(3 downto 0);
            end if;
        end if;
    end process;
    dense_output_ndim(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";
    dense_output_numel(1 downto 0) <= "00";
    dense_output_numel(4 downto 3) <= "00";
    dense_output_numel(63 downto 7) <= "000000000000000000000000000000000000000000000000000000000";
    dense_1_output_ndim(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";
    dense_1_output_numel(0) <= '0';
    dense_1_output_numel(3 downto 2) <= "00";
    dense_1_output_numel(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    dense_1_kernel_ndim(0) <= '0';
    dense_1_kernel_ndim(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    dense_1_kernel_numel(2 downto 0) <= "000";
    dense_1_kernel_numel(6 downto 4) <= "000";
    dense_1_kernel_numel(11 downto 10) <= "00";
    dense_1_kernel_numel(63 downto 13) <= "000000000000000000000000000000000000000000000000000";
    dense_1_bias_numel(0) <= '0';
    dense_1_bias_numel(3 downto 2) <= "00";
    dense_1_bias_numel(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    dense_2_output_ndim(63 downto 1) <= "000000000000000000000000000000000000000000000000000000000000000";
    dense_2_output_numel(2 downto 1) <= "00";
    dense_2_output_numel(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    dense_2_kernel_ndim(0) <= '0';
    dense_2_kernel_ndim(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    dense_2_kernel_numel(0) <= '0';
    dense_2_kernel_numel(4 downto 2) <= "000";
    dense_2_kernel_numel(9 downto 8) <= "00";
    dense_2_kernel_numel(63 downto 11) <= "00000000000000000000000000000000000000000000000000000";
    dense_2_bias_numel(2 downto 1) <= "00";
    dense_2_bias_numel(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    dense_3_kernel_ndim(0) <= '0';
    dense_3_kernel_ndim(63 downto 2) <= "00000000000000000000000000000000000000000000000000000000000000";
    dense_3_kernel_numel(0) <= '0';
    dense_3_kernel_numel(2 downto 2) <= "0";
    dense_3_kernel_numel(63 downto 8) <= "00000000000000000000000000000000000000000000000000000000";
    dense_3_bias_numel(0) <= '0';
    dense_3_bias_numel(2 downto 2) <= "0";
    dense_3_bias_numel(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";
    reg_622(0) <= '0';
    reg_622(3 downto 2) <= "00";
    reg_622(63 downto 6) <= "0000000000000000000000000000000000000000000000000000000000";
    reg_628(2 downto 1) <= "00";
    reg_628(63 downto 5) <= "00000000000000000000000000000000000000000000000000000000000";
    z1_cast2_reg_823(63 downto 10) <= "000000000000000000000000000000000000000000000000000000";
    z2_cast1_reg_941(63 downto 4) <= "000000000000000000000000000000000000000000000000000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_fu_639_p2, ap_CS_fsm_state15, tmp_2_fu_811_p2, grp_k2c_dense_1_fu_515_ap_done, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_ap_done, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state8)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((tmp_fu_639_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                if (((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_state8;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                if (((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state12;
            when ap_ST_fsm_state12 => 
                if (((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                if (((grp_k2c_dense_1_fu_515_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if (((tmp_2_fu_811_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state16;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(9);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state14 <= ap_CS_fsm(13);
    ap_CS_fsm_state15 <= ap_CS_fsm(14);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state6 <= ap_CS_fsm(5);
    ap_CS_fsm_state7 <= ap_CS_fsm(6);
    ap_CS_fsm_state8 <= ap_CS_fsm(7);
    ap_CS_fsm_state9 <= ap_CS_fsm(8);

    ap_done_assign_proc : process(ap_CS_fsm_state15, tmp_2_fu_811_p2)
    begin
        if (((tmp_2_fu_811_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state15, tmp_2_fu_811_p2)
    begin
        if (((tmp_2_fu_811_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state15))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_3_fu_540_kernel_shape_address0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_1_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_1_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_1_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_kernel_shape_address0 <= grp_k2c_dense_3_fu_540_kernel_shape_address0;
        else 
            dense_1_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_1_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_1_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_1_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_1_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_1_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_3_fu_540_kernel_shape_ce0, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_1_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_kernel_shape_ce0 <= grp_k2c_dense_3_fu_540_kernel_shape_ce0;
        else 
            dense_1_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_1_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_1_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_1_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_1_kernel_shape_d0 <= ap_const_lv64_32;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_1_kernel_shape_d0 <= ap_const_lv64_64;
        else 
            dense_1_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_1_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_1_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_1_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_1_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_array_address0_assign_proc : process(grp_k2c_dense_3_fu_540_dense_1_output_array_address0, grp_k2c_dense_2_fu_564_dense_1_output_array_address0, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_1_output_array_address0 <= grp_k2c_dense_2_fu_564_dense_1_output_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_output_array_address0 <= grp_k2c_dense_3_fu_540_dense_1_output_array_address0;
        else 
            dense_1_output_array_address0 <= "XXXXXX";
        end if; 
    end process;


    dense_1_output_array_ce0_assign_proc : process(grp_k2c_dense_3_fu_540_dense_1_output_array_ce0, grp_k2c_dense_2_fu_564_dense_1_output_array_ce0, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_1_output_array_ce0 <= grp_k2c_dense_2_fu_564_dense_1_output_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_output_array_ce0 <= grp_k2c_dense_3_fu_540_dense_1_output_array_ce0;
        else 
            dense_1_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_array_we0_assign_proc : process(grp_k2c_dense_3_fu_540_dense_1_output_array_we0, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_output_array_we0 <= grp_k2c_dense_3_fu_540_dense_1_output_array_we0;
        else 
            dense_1_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_address0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_2_fu_564_input_shape_address0, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_output_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_1_output_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_1_output_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_1_output_shape_address0 <= grp_k2c_dense_2_fu_564_input_shape_address0;
        else 
            dense_1_output_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_1_output_shape_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_1_output_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_1_output_shape_address1 <= ap_const_lv3_2;
        else 
            dense_1_output_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_1_output_shape_ce0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_input_shape_ce0, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_1_output_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_1_output_shape_ce0 <= grp_k2c_dense_2_fu_564_input_shape_ce0;
        else 
            dense_1_output_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_ce1_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_1_output_shape_ce1 <= ap_const_logic_1;
        else 
            dense_1_output_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state10) or (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            dense_1_output_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_1_output_shape_d0 <= ap_const_lv64_32;
        else 
            dense_1_output_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_1_output_shape_we0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_1_output_shape_we0 <= ap_const_logic_1;
        else 
            dense_1_output_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_1_output_shape_we1_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_1_output_shape_we1 <= ap_const_logic_1;
        else 
            dense_1_output_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_2_fu_564_kernel_shape_address0, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_2_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_2_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_kernel_shape_address0 <= grp_k2c_dense_2_fu_564_kernel_shape_address0;
        else 
            dense_2_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_2_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_2_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_2_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_2_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_kernel_shape_ce0, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state12, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_2_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_kernel_shape_ce0 <= grp_k2c_dense_2_fu_564_kernel_shape_ce0;
        else 
            dense_2_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_2_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_2_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state9, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state9)) then 
            dense_2_kernel_shape_d0 <= ap_const_lv64_19;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_2_kernel_shape_d0 <= ap_const_lv64_32;
        else 
            dense_2_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_2_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_2_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state9, grp_k2c_dense_3_fu_540_ap_done, ap_CS_fsm_state10)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_2_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_2_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_array_address0_assign_proc : process(grp_k2c_dense_1_fu_515_dense_2_output_array_address0, grp_k2c_dense_2_fu_564_dense_2_output_array_address0, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_output_array_address0 <= grp_k2c_dense_2_fu_564_dense_2_output_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_2_output_array_address0 <= grp_k2c_dense_1_fu_515_dense_2_output_array_address0;
        else 
            dense_2_output_array_address0 <= "XXXXX";
        end if; 
    end process;


    dense_2_output_array_ce0_assign_proc : process(grp_k2c_dense_1_fu_515_dense_2_output_array_ce0, grp_k2c_dense_2_fu_564_dense_2_output_array_ce0, ap_CS_fsm_state14, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_output_array_ce0 <= grp_k2c_dense_2_fu_564_dense_2_output_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_2_output_array_ce0 <= grp_k2c_dense_1_fu_515_dense_2_output_array_ce0;
        else 
            dense_2_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_array_we0_assign_proc : process(grp_k2c_dense_2_fu_564_dense_2_output_array_we0, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_output_array_we0 <= grp_k2c_dense_2_fu_564_dense_2_output_array_we0;
        else 
            dense_2_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_address0_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_1_fu_515_input_shape_address0, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_output_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_2_output_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_output_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_2_output_shape_address0 <= grp_k2c_dense_1_fu_515_input_shape_address0;
        else 
            dense_2_output_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_2_output_shape_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_2_output_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_2_output_shape_address1 <= ap_const_lv3_2;
        else 
            dense_2_output_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_2_output_shape_ce0_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_1_fu_515_input_shape_ce0, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_2_output_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_2_output_shape_ce0 <= grp_k2c_dense_1_fu_515_input_shape_ce0;
        else 
            dense_2_output_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_ce1_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            dense_2_output_shape_ce1 <= ap_const_logic_1;
        else 
            dense_2_output_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_d0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            dense_2_output_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_2_output_shape_d0 <= ap_const_lv64_19;
        else 
            dense_2_output_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_2_output_shape_we0_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_2_output_shape_we0 <= ap_const_logic_1;
        else 
            dense_2_output_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_2_output_shape_we1_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            dense_2_output_shape_we1 <= ap_const_logic_1;
        else 
            dense_2_output_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_1_fu_515_kernel_shape_address0, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_3_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_3_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_3_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_3_kernel_shape_address0 <= grp_k2c_dense_1_fu_515_kernel_shape_address0;
        else 
            dense_3_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_3_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_3_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_3_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_3_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_3_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_1_fu_515_kernel_shape_ce0, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state14, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_3_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_3_kernel_shape_ce0 <= grp_k2c_dense_1_fu_515_kernel_shape_ce0;
        else 
            dense_3_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            dense_3_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_3_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state11, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            dense_3_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            dense_3_kernel_shape_d0 <= ap_const_lv64_A;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_3_kernel_shape_d0 <= ap_const_lv64_19;
        else 
            dense_3_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_3_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_3_fu_540_ap_done, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((grp_k2c_dense_3_fu_540_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state10)))) then 
            dense_3_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_3_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state11, grp_k2c_dense_2_fu_564_ap_done, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((grp_k2c_dense_2_fu_564_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)))) then 
            dense_3_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_3_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;

    dense_3_output_array_address0 <= z2_cast1_reg_941(10 - 1 downto 0);

    dense_3_output_array_ce0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_3_output_array_ce0 <= ap_const_logic_1;
        else 
            dense_3_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_3_output_array_d0 <= dense_3_output_array_r_q0;

    dense_3_output_array_r_address0_assign_proc : process(z2_cast1_fu_806_p1, ap_CS_fsm_state15, grp_k2c_dense_1_fu_515_output_array_address0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_3_output_array_r_address0 <= z2_cast1_fu_806_p1(4 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_3_output_array_r_address0 <= grp_k2c_dense_1_fu_515_output_array_address0;
        else 
            dense_3_output_array_r_address0 <= "XXXX";
        end if; 
    end process;


    dense_3_output_array_r_ce0_assign_proc : process(ap_CS_fsm_state15, grp_k2c_dense_1_fu_515_output_array_ce0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state15)) then 
            dense_3_output_array_r_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_3_output_array_r_ce0 <= grp_k2c_dense_1_fu_515_output_array_ce0;
        else 
            dense_3_output_array_r_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_output_array_r_we0_assign_proc : process(grp_k2c_dense_1_fu_515_output_array_we0, ap_CS_fsm_state14)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            dense_3_output_array_r_we0 <= grp_k2c_dense_1_fu_515_output_array_we0;
        else 
            dense_3_output_array_r_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_3_output_array_we0_assign_proc : process(ap_CS_fsm_state16)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
            dense_3_output_array_we0 <= ap_const_logic_1;
        else 
            dense_3_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_3_output_shape_address0 <= ap_const_lv3_0;
    dense_3_output_shape_address1 <= ap_const_lv3_0;
    dense_3_output_shape_ce0 <= ap_const_logic_0;
    dense_3_output_shape_ce1 <= ap_const_logic_0;
    dense_3_output_shape_d0 <= ap_const_lv64_0;
    dense_3_output_shape_d1 <= ap_const_lv64_0;
    dense_3_output_shape_we0 <= ap_const_logic_0;
    dense_3_output_shape_we1 <= ap_const_logic_0;

    dense_input_input_ar_address0_assign_proc : process(z1_cast2_reg_823, grp_k2c_dense_fu_588_input_array_address0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_input_input_ar_address0 <= z1_cast2_reg_823(10 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_input_input_ar_address0 <= grp_k2c_dense_fu_588_input_array_address0;
        else 
            dense_input_input_ar_address0 <= "XXXXXXXXXX";
        end if; 
    end process;


    dense_input_input_ar_ce0_assign_proc : process(grp_k2c_dense_fu_588_input_array_ce0, ap_CS_fsm_state3, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_input_input_ar_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_input_input_ar_ce0 <= grp_k2c_dense_fu_588_input_array_ce0;
        else 
            dense_input_input_ar_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_ar_we0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            dense_input_input_ar_we0 <= ap_const_logic_1;
        else 
            dense_input_input_ar_we0 <= ap_const_logic_0;
        end if; 
    end process;

    dense_input_input_array_address0 <= z1_cast2_fu_634_p1(10 - 1 downto 0);

    dense_input_input_array_ce0_assign_proc : process(ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_input_input_array_ce0 <= ap_const_logic_1;
        else 
            dense_input_input_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_sh_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_k2c_dense_fu_588_input_shape_address0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_input_input_sh_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_input_input_sh_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_input_input_sh_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_input_input_sh_address0 <= grp_k2c_dense_fu_588_input_shape_address0;
        else 
            dense_input_input_sh_address0 <= "XXX";
        end if; 
    end process;


    dense_input_input_sh_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_input_input_sh_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_input_input_sh_address1 <= ap_const_lv3_2;
        else 
            dense_input_input_sh_address1 <= "XXX";
        end if; 
    end process;


    dense_input_input_sh_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_k2c_dense_fu_588_input_shape_ce0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_input_input_sh_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_input_input_sh_ce0 <= grp_k2c_dense_fu_588_input_shape_ce0;
        else 
            dense_input_input_sh_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_sh_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            dense_input_input_sh_ce1 <= ap_const_logic_1;
        else 
            dense_input_input_sh_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_sh_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_input_input_sh_we0 <= ap_const_logic_1;
        else 
            dense_input_input_sh_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_sh_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            dense_input_input_sh_we1 <= ap_const_logic_1;
        else 
            dense_input_input_sh_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_shape_address0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_input_input_shape_address0 <= ap_const_lv64_4(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_input_input_shape_address0 <= ap_const_lv64_1(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            dense_input_input_shape_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        else 
            dense_input_input_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_input_input_shape_address1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_input_input_shape_address1 <= ap_const_lv64_3(3 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_input_input_shape_address1 <= ap_const_lv64_2(3 - 1 downto 0);
        else 
            dense_input_input_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_input_input_shape_ce0_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4) or (ap_const_logic_1 = ap_CS_fsm_state2))) then 
            dense_input_input_shape_ce0 <= ap_const_logic_1;
        else 
            dense_input_input_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_input_input_shape_ce1_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_input_input_shape_ce1 <= ap_const_logic_1;
        else 
            dense_input_input_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_address0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_k2c_dense_fu_588_kernel_shape_address0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_kernel_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_kernel_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_kernel_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_kernel_shape_address0 <= grp_k2c_dense_fu_588_kernel_shape_address0;
        else 
            dense_kernel_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_kernel_shape_address1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_kernel_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_kernel_shape_address1 <= ap_const_lv3_2;
        else 
            dense_kernel_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_kernel_shape_ce0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, grp_k2c_dense_fu_588_kernel_shape_ce0, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_kernel_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_kernel_shape_ce0 <= grp_k2c_dense_fu_588_kernel_shape_ce0;
        else 
            dense_kernel_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_ce1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            dense_kernel_shape_ce1 <= ap_const_logic_1;
        else 
            dense_kernel_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_d0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_kernel_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            dense_kernel_shape_d0 <= ap_const_lv64_64;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            dense_kernel_shape_d0 <= ap_const_lv64_310;
        else 
            dense_kernel_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_kernel_shape_we0_assign_proc : process(ap_CS_fsm_state4, ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5) or (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            dense_kernel_shape_we0 <= ap_const_logic_1;
        else 
            dense_kernel_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_kernel_shape_we1_assign_proc : process(ap_CS_fsm_state5, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state5))) then 
            dense_kernel_shape_we1 <= ap_const_logic_1;
        else 
            dense_kernel_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_array_address0_assign_proc : process(grp_k2c_dense_3_fu_540_dense_output_array_address0, grp_k2c_dense_fu_588_dense_output_array_address0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_output_array_address0 <= grp_k2c_dense_fu_588_dense_output_array_address0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_output_array_address0 <= grp_k2c_dense_3_fu_540_dense_output_array_address0;
        else 
            dense_output_array_address0 <= "XXXXXXX";
        end if; 
    end process;


    dense_output_array_ce0_assign_proc : process(grp_k2c_dense_3_fu_540_dense_output_array_ce0, grp_k2c_dense_fu_588_dense_output_array_ce0, ap_CS_fsm_state10, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_output_array_ce0 <= grp_k2c_dense_fu_588_dense_output_array_ce0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_output_array_ce0 <= grp_k2c_dense_3_fu_540_dense_output_array_ce0;
        else 
            dense_output_array_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_array_we0_assign_proc : process(grp_k2c_dense_fu_588_dense_output_array_we0, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_output_array_we0 <= grp_k2c_dense_fu_588_dense_output_array_we0;
        else 
            dense_output_array_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_address0_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_3_fu_540_input_shape_address0, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_output_shape_address0 <= ap_const_lv3_4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_output_shape_address0 <= ap_const_lv3_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_output_shape_address0 <= ap_const_lv3_0;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_output_shape_address0 <= grp_k2c_dense_3_fu_540_input_shape_address0;
        else 
            dense_output_shape_address0 <= "XXX";
        end if; 
    end process;


    dense_output_shape_address1_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            dense_output_shape_address1 <= ap_const_lv3_3;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            dense_output_shape_address1 <= ap_const_lv3_2;
        else 
            dense_output_shape_address1 <= "XXX";
        end if; 
    end process;


    dense_output_shape_ce0_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_3_fu_540_input_shape_ce0, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state10, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_output_shape_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state10)) then 
            dense_output_shape_ce0 <= grp_k2c_dense_3_fu_540_input_shape_ce0;
        else 
            dense_output_shape_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_ce1_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_output_shape_ce1 <= ap_const_logic_1;
        else 
            dense_output_shape_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_d0_assign_proc : process(ap_CS_fsm_state7, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            dense_output_shape_d0 <= ap_const_lv64_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            dense_output_shape_d0 <= ap_const_lv64_64;
        else 
            dense_output_shape_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    dense_output_shape_we0_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state8, ap_CS_fsm_state6)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or (ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_output_shape_we0 <= ap_const_logic_1;
        else 
            dense_output_shape_we0 <= ap_const_logic_0;
        end if; 
    end process;


    dense_output_shape_we1_assign_proc : process(ap_CS_fsm_state7, grp_k2c_dense_fu_588_ap_done, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((grp_k2c_dense_fu_588_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state8)))) then 
            dense_output_shape_we1 <= ap_const_logic_1;
        else 
            dense_output_shape_we1 <= ap_const_logic_0;
        end if; 
    end process;

    grp_k2c_dense_1_fu_515_ap_start <= grp_k2c_dense_1_fu_515_ap_start_reg;
    grp_k2c_dense_2_fu_564_ap_start <= grp_k2c_dense_2_fu_564_ap_start_reg;
    grp_k2c_dense_3_fu_540_ap_start <= grp_k2c_dense_3_fu_540_ap_start_reg;
    grp_k2c_dense_fu_588_ap_start <= grp_k2c_dense_fu_588_ap_start_reg;
    tmp_2_fu_811_p2 <= "1" when (z2_reg_504 = ap_const_lv4_A) else "0";
    tmp_fu_639_p2 <= "1" when (z1_reg_493 = ap_const_lv10_310) else "0";
    z1_1_fu_645_p2 <= std_logic_vector(unsigned(z1_reg_493) + unsigned(ap_const_lv10_1));
    z1_cast2_fu_634_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z1_reg_493),64));
    z2_1_fu_817_p2 <= std_logic_vector(unsigned(z2_reg_504) + unsigned(ap_const_lv4_1));
    z2_cast1_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(z2_reg_504),64));
end behav;
