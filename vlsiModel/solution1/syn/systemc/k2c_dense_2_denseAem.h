// ==============================================================
// File generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ==============================================================

#ifndef __k2c_dense_2_denseAem_H__
#define __k2c_dense_2_denseAem_H__


#include <systemc>
using namespace sc_core;
using namespace sc_dt;




#include <iostream>
#include <fstream>

struct k2c_dense_2_denseAem_ram : public sc_core::sc_module {

  static const unsigned DataWidth = 32;
  static const unsigned AddressRange = 25;
  static const unsigned AddressWidth = 5;

//latency = 1
//input_reg = 1
//output_reg = 0
sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in <sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


sc_lv<DataWidth> ram[AddressRange];


   SC_CTOR(k2c_dense_2_denseAem_ram) {
        ram[0] = "0b10111011110110111111110111000001";
        ram[1] = "0b00111011110001110101000111000111";
        ram[2] = "0b10111100111101110010111101101100";
        ram[3] = "0b10111100110111111100100001111011";
        ram[4] = "0b10111100001100001110101100110001";
        ram[5] = "0b00111101111001011010001110000111";
        ram[6] = "0b00111101111101101010101001001000";
        ram[7] = "0b00111101001000000101101100110000";
        ram[8] = "0b10111100111111000110100011011010";
        ram[9] = "0b00111110000100000011110100100101";
        ram[10] = "0b10111011001110000111100110101100";
        ram[11] = "0b00111101110010010010110111000001";
        ram[12] = "0b10111101000001111001010100101000";
        ram[13] = "0b00111101111101010011001101001000";
        ram[14] = "0b00111101011101001110100100001000";
        ram[15] = "0b00111101101011001110000010111010";
        ram[16] = "0b00111110000001100011000111100001";
        ram[17] = "0b10111100100110000010100111011001";
        ram[18] = "0b10111101011101010000001001100100";
        ram[19] = "0b00111101010101011011110110100110";
        ram[20] = "0b00111011000101110111000000110111";
        ram[21] = "0b00111101110111100100110000001111";
        ram[22] = "0b00111110001000010001010011110000";
        ram[23] = "0b00111101110100000000111110110101";
        ram[24] = "0b10111100011011111010111110000000";


SC_METHOD(prc_write_0);
  sensitive<<clk.pos();
   }


void prc_write_0()
{
    if (ce0.read() == sc_dt::Log_1) 
    {
            if(address0.read().is_01() && address0.read().to_uint()<AddressRange)
              q0 = ram[address0.read().to_uint()];
            else
              q0 = sc_lv<DataWidth>();
    }
}


}; //endmodule


SC_MODULE(k2c_dense_2_denseAem) {


static const unsigned DataWidth = 32;
static const unsigned AddressRange = 25;
static const unsigned AddressWidth = 5;

sc_core::sc_in <sc_lv<AddressWidth> > address0;
sc_core::sc_in<sc_logic> ce0;
sc_core::sc_out <sc_lv<DataWidth> > q0;
sc_core::sc_in<sc_logic> reset;
sc_core::sc_in<bool> clk;


k2c_dense_2_denseAem_ram* meminst;


SC_CTOR(k2c_dense_2_denseAem) {
meminst = new k2c_dense_2_denseAem_ram("k2c_dense_2_denseAem_ram");
meminst->address0(address0);
meminst->ce0(ce0);
meminst->q0(q0);


meminst->reset(reset);
meminst->clk(clk);
}
~k2c_dense_2_denseAem() {
    delete meminst;
}


};//endmodule
#endif
