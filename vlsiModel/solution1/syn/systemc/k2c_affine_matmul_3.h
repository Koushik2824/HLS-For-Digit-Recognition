// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_affine_matmul_3_HH_
#define _k2c_affine_matmul_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "vlsiModel_fadd_32cud.h"
#include "vlsiModel_fmul_32dEe.h"
#include "vlsiModel_mul_64sbkb.h"
#include "vlsiModel_mul_mulmb6.h"
#include "vlsiModel_mac_mulfYi.h"

namespace ap_rtl {

struct k2c_affine_matmul_3 : public sc_module {
    // Port declarations 23
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<7> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_out< sc_lv<10> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<17> > B_address0;
    sc_out< sc_logic > B_ce0;
    sc_in< sc_lv<32> > B_q0;
    sc_out< sc_lv<7> > d_address0;
    sc_out< sc_logic > d_ce0;
    sc_in< sc_lv<32> > d_q0;
    sc_in< sc_lv<64> > outrows;
    sc_in< sc_lv<64> > outcols;
    sc_in< sc_lv<64> > innerdim;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_affine_matmul_3(sc_module_name name);
    SC_HAS_PROCESS(k2c_affine_matmul_3);

    ~k2c_affine_matmul_3();

    sc_trace_file* mVcdFile;

    vlsiModel_fadd_32cud<1,5,32,32,32>* vlsiModel_fadd_32cud_U45;
    vlsiModel_fmul_32dEe<1,3,32,32,32>* vlsiModel_fmul_32dEe_U46;
    vlsiModel_mul_64sbkb<1,2,64,64,64>* vlsiModel_mul_64sbkb_U47;
    vlsiModel_mul_mulmb6<1,1,11,11,11>* vlsiModel_mul_mulmb6_U48;
    vlsiModel_mac_mulfYi<1,1,18,18,18,18>* vlsiModel_mac_mulfYi_U49;
    sc_signal< sc_lv<23> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_158;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state17;
    sc_signal< sc_lv<32> > grp_fu_150_p2;
    sc_signal< sc_lv<32> > reg_163;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_logic > ap_CS_fsm_state22;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > grp_fu_168_p2;
    sc_signal< sc_lv<64> > tmp_reg_317;
    sc_signal< sc_lv<7> > p_1_fu_184_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<8> > tmp_94_fu_190_p1;
    sc_signal< sc_lv<8> > tmp_94_reg_330;
    sc_signal< sc_lv<1> > exitcond3_fu_179_p2;
    sc_signal< sc_lv<11> > tmp_95_fu_193_p1;
    sc_signal< sc_lv<11> > tmp_95_reg_335;
    sc_signal< sc_lv<18> > tmp_96_fu_196_p1;
    sc_signal< sc_lv<18> > tmp_96_reg_340;
    sc_signal< sc_lv<64> > i_64_fu_212_p2;
    sc_signal< sc_lv<64> > i_64_reg_348;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<8> > outrowidx_fu_218_p2;
    sc_signal< sc_lv<8> > outrowidx_reg_353;
    sc_signal< sc_lv<1> > exitcond2_fu_207_p2;
    sc_signal< sc_lv<11> > inneridx_fu_285_p2;
    sc_signal< sc_lv<11> > inneridx_reg_358;
    sc_signal< sc_lv<18> > tmp_99_fu_223_p1;
    sc_signal< sc_lv<18> > tmp_99_reg_363;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<64> > j_12_fu_236_p2;
    sc_signal< sc_lv<64> > j_12_reg_371;
    sc_signal< sc_lv<7> > C_addr_5_reg_376;
    sc_signal< sc_lv<1> > exitcond1_fu_231_p2;
    sc_signal< sc_lv<64> > k_3_fu_265_p2;
    sc_signal< sc_lv<64> > k_3_reg_384;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_260_p2;
    sc_signal< sc_lv<32> > A_load_reg_404;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > B_load_reg_409;
    sc_signal< sc_lv<32> > grp_fu_154_p2;
    sc_signal< sc_lv<32> > tmp_1_reg_414;
    sc_signal< sc_lv<32> > d_load_reg_419;
    sc_signal< sc_lv<7> > p_reg_104;
    sc_signal< sc_lv<64> > i_reg_115;
    sc_signal< sc_lv<64> > j_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state23;
    sc_signal< sc_lv<64> > k_reg_139;
    sc_signal< sc_logic > ap_CS_fsm_state16;
    sc_signal< sc_lv<64> > p_cast_fu_174_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_247_p1;
    sc_signal< sc_lv<64> > sum5_cast_fu_276_p1;
    sc_signal< sc_lv<64> > sum8_cast_fu_281_p1;
    sc_signal< sc_logic > ap_CS_fsm_state9;
    sc_signal< sc_lv<32> > grp_fu_150_p1;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_94_fu_190_p0;
    sc_signal< sc_lv<64> > tmp_96_fu_196_p0;
    sc_signal< sc_lv<64> > exitcond2_fu_207_p1;
    sc_signal< sc_lv<8> > tmp_98_fu_203_p1;
    sc_signal< sc_lv<64> > exitcond1_fu_231_p1;
    sc_signal< sc_lv<8> > tmp_100_fu_227_p1;
    sc_signal< sc_lv<8> > sum2_fu_242_p2;
    sc_signal< sc_lv<11> > tmp_102_fu_256_p1;
    sc_signal< sc_lv<11> > sum5_fu_271_p2;
    sc_signal< sc_lv<18> > grp_fu_290_p3;
    sc_signal< sc_lv<11> > inneridx_fu_285_p0;
    sc_signal< sc_lv<18> > grp_fu_290_p0;
    sc_signal< sc_lv<23> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<23> ap_ST_fsm_state1;
    static const sc_lv<23> ap_ST_fsm_state2;
    static const sc_lv<23> ap_ST_fsm_state3;
    static const sc_lv<23> ap_ST_fsm_state4;
    static const sc_lv<23> ap_ST_fsm_state5;
    static const sc_lv<23> ap_ST_fsm_state6;
    static const sc_lv<23> ap_ST_fsm_state7;
    static const sc_lv<23> ap_ST_fsm_state8;
    static const sc_lv<23> ap_ST_fsm_state9;
    static const sc_lv<23> ap_ST_fsm_state10;
    static const sc_lv<23> ap_ST_fsm_state11;
    static const sc_lv<23> ap_ST_fsm_state12;
    static const sc_lv<23> ap_ST_fsm_state13;
    static const sc_lv<23> ap_ST_fsm_state14;
    static const sc_lv<23> ap_ST_fsm_state15;
    static const sc_lv<23> ap_ST_fsm_state16;
    static const sc_lv<23> ap_ST_fsm_state17;
    static const sc_lv<23> ap_ST_fsm_state18;
    static const sc_lv<23> ap_ST_fsm_state19;
    static const sc_lv<23> ap_ST_fsm_state20;
    static const sc_lv<23> ap_ST_fsm_state21;
    static const sc_lv<23> ap_ST_fsm_state22;
    static const sc_lv<23> ap_ST_fsm_state23;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_10;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_15;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<7> ap_const_lv7_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_16;
    static const sc_lv<32> ap_const_lv32_F;
    static const sc_lv<32> ap_const_lv32_8;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<7> ap_const_lv7_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_ce0();
    void thread_B_address0();
    void thread_B_ce0();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state16();
    void thread_ap_CS_fsm_state17();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state22();
    void thread_ap_CS_fsm_state23();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_CS_fsm_state9();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_d_address0();
    void thread_d_ce0();
    void thread_exitcond1_fu_231_p1();
    void thread_exitcond1_fu_231_p2();
    void thread_exitcond2_fu_207_p1();
    void thread_exitcond2_fu_207_p2();
    void thread_exitcond3_fu_179_p2();
    void thread_exitcond_fu_260_p2();
    void thread_grp_fu_150_p1();
    void thread_grp_fu_290_p0();
    void thread_i_64_fu_212_p2();
    void thread_inneridx_fu_285_p0();
    void thread_j_12_fu_236_p2();
    void thread_k_3_fu_265_p2();
    void thread_outrowidx_fu_218_p2();
    void thread_p_1_fu_184_p2();
    void thread_p_cast_fu_174_p1();
    void thread_sum2_cast_fu_247_p1();
    void thread_sum2_fu_242_p2();
    void thread_sum5_cast_fu_276_p1();
    void thread_sum5_fu_271_p2();
    void thread_sum8_cast_fu_281_p1();
    void thread_tmp_100_fu_227_p1();
    void thread_tmp_102_fu_256_p1();
    void thread_tmp_94_fu_190_p0();
    void thread_tmp_94_fu_190_p1();
    void thread_tmp_95_fu_193_p1();
    void thread_tmp_96_fu_196_p0();
    void thread_tmp_96_fu_196_p1();
    void thread_tmp_98_fu_203_p1();
    void thread_tmp_99_fu_223_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
