// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_softmax_func_2_HH_
#define _k2c_softmax_func_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "vlsiModel_faddfsuFfa.h"
#include "vlsiModel_fmul_32dEe.h"
#include "vlsiModel_fdiv_32Gfk.h"
#include "vlsiModel_fcmp_32lbW.h"
#include "vlsiModel_fexp_32Hfu.h"

namespace ap_rtl {

struct k2c_softmax_func_2 : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<4> > x_address0;
    sc_out< sc_logic > x_ce0;
    sc_out< sc_logic > x_we0;
    sc_out< sc_lv<32> > x_d0;
    sc_in< sc_lv<32> > x_q0;
    sc_in< sc_lv<64> > size;
    sc_signal< sc_logic > ap_var_for_const0;
    sc_signal< sc_lv<32> > ap_var_for_const3;
    sc_signal< sc_lv<32> > ap_var_for_const1;
    sc_signal< sc_lv<5> > ap_var_for_const2;


    // Module declarations
    k2c_softmax_func_2(sc_module_name name);
    SC_HAS_PROCESS(k2c_softmax_func_2);

    ~k2c_softmax_func_2();

    sc_trace_file* mVcdFile;

    vlsiModel_faddfsuFfa<1,5,32,32,32>* vlsiModel_faddfsuFfa_U214;
    vlsiModel_fmul_32dEe<1,3,32,32,32>* vlsiModel_fmul_32dEe_U215;
    vlsiModel_fdiv_32Gfk<1,12,32,32,32>* vlsiModel_fdiv_32Gfk_U216;
    vlsiModel_fcmp_32lbW<1,1,32,32,1>* vlsiModel_fcmp_32lbW_U217;
    vlsiModel_fexp_32Hfu<1,8,32,32,32>* vlsiModel_fexp_32Hfu_U218;
    sc_signal< sc_lv<42> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_lv<32> > reg_178;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_logic > ap_CS_fsm_state21;
    sc_signal< sc_logic > ap_CS_fsm_state38;
    sc_signal< sc_lv<32> > grp_fu_149_p2;
    sc_signal< sc_lv<32> > reg_186;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state25;
    sc_signal< sc_lv<64> > i_2_fu_197_p2;
    sc_signal< sc_lv<64> > i_2_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > exitcond3_fu_192_p2;
    sc_signal< sc_lv<32> > xmax_1_fu_287_p3;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<4> > j_1_fu_305_p2;
    sc_signal< sc_lv<4> > j_1_reg_377;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<4> > x_addr_2_reg_382;
    sc_signal< sc_lv<1> > exitcond2_fu_300_p2;
    sc_signal< sc_lv<32> > grp_fu_173_p2;
    sc_signal< sc_lv<32> > tmp_9_reg_387;
    sc_signal< sc_logic > ap_CS_fsm_state18;
    sc_signal< sc_lv<4> > k_1_fu_321_p2;
    sc_signal< sc_lv<4> > k_1_reg_395;
    sc_signal< sc_logic > ap_CS_fsm_state20;
    sc_signal< sc_lv<1> > exitcond1_fu_316_p2;
    sc_signal< sc_lv<32> > grp_fu_161_p2;
    sc_signal< sc_lv<32> > sum_1_reg_405;
    sc_signal< sc_logic > ap_CS_fsm_state36;
    sc_signal< sc_lv<4> > l_1_fu_337_p2;
    sc_signal< sc_lv<4> > l_1_reg_413;
    sc_signal< sc_logic > ap_CS_fsm_state37;
    sc_signal< sc_lv<4> > x_addr_4_reg_418;
    sc_signal< sc_lv<1> > exitcond_fu_332_p2;
    sc_signal< sc_lv<32> > grp_fu_157_p2;
    sc_signal< sc_lv<32> > tmp_s_reg_423;
    sc_signal< sc_logic > ap_CS_fsm_state41;
    sc_signal< sc_lv<64> > i_reg_82;
    sc_signal< sc_lv<32> > xmax1_reg_94;
    sc_signal< sc_lv<4> > j_reg_104;
    sc_signal< sc_logic > ap_CS_fsm_state19;
    sc_signal< sc_lv<32> > sum_reg_115;
    sc_signal< sc_lv<4> > k_reg_127;
    sc_signal< sc_lv<4> > l_reg_138;
    sc_signal< sc_logic > ap_CS_fsm_state42;
    sc_signal< sc_lv<64> > j_cast_fu_295_p1;
    sc_signal< sc_lv<64> > k_cast_fu_311_p1;
    sc_signal< sc_lv<64> > l_cast_fu_327_p1;
    sc_signal< sc_lv<32> > grp_fu_149_p0;
    sc_signal< sc_lv<32> > grp_fu_149_p1;
    sc_signal< sc_logic > ap_CS_fsm_state39;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<32> > xmax_2_to_int_fu_203_p1;
    sc_signal< sc_lv<32> > xmax1_to_int_fu_221_p1;
    sc_signal< sc_lv<8> > tmp_fu_207_p4;
    sc_signal< sc_lv<23> > tmp_3_fu_217_p1;
    sc_signal< sc_lv<1> > notrhs_fu_245_p2;
    sc_signal< sc_lv<1> > notlhs_fu_239_p2;
    sc_signal< sc_lv<8> > tmp_2_fu_225_p4;
    sc_signal< sc_lv<23> > tmp_11_fu_235_p1;
    sc_signal< sc_lv<1> > notrhs2_fu_263_p2;
    sc_signal< sc_lv<1> > notlhs1_fu_257_p2;
    sc_signal< sc_lv<1> > tmp_4_fu_251_p2;
    sc_signal< sc_lv<1> > tmp_5_fu_269_p2;
    sc_signal< sc_lv<1> > tmp_6_fu_275_p2;
    sc_signal< sc_lv<1> > tmp_7_fu_167_p2;
    sc_signal< sc_lv<1> > tmp_1_fu_281_p2;
    sc_signal< sc_lv<2> > grp_fu_149_opcode;
    sc_signal< sc_lv<42> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<42> ap_ST_fsm_state1;
    static const sc_lv<42> ap_ST_fsm_state2;
    static const sc_lv<42> ap_ST_fsm_state3;
    static const sc_lv<42> ap_ST_fsm_state4;
    static const sc_lv<42> ap_ST_fsm_state5;
    static const sc_lv<42> ap_ST_fsm_state6;
    static const sc_lv<42> ap_ST_fsm_state7;
    static const sc_lv<42> ap_ST_fsm_state8;
    static const sc_lv<42> ap_ST_fsm_state9;
    static const sc_lv<42> ap_ST_fsm_state10;
    static const sc_lv<42> ap_ST_fsm_state11;
    static const sc_lv<42> ap_ST_fsm_state12;
    static const sc_lv<42> ap_ST_fsm_state13;
    static const sc_lv<42> ap_ST_fsm_state14;
    static const sc_lv<42> ap_ST_fsm_state15;
    static const sc_lv<42> ap_ST_fsm_state16;
    static const sc_lv<42> ap_ST_fsm_state17;
    static const sc_lv<42> ap_ST_fsm_state18;
    static const sc_lv<42> ap_ST_fsm_state19;
    static const sc_lv<42> ap_ST_fsm_state20;
    static const sc_lv<42> ap_ST_fsm_state21;
    static const sc_lv<42> ap_ST_fsm_state22;
    static const sc_lv<42> ap_ST_fsm_state23;
    static const sc_lv<42> ap_ST_fsm_state24;
    static const sc_lv<42> ap_ST_fsm_state25;
    static const sc_lv<42> ap_ST_fsm_state26;
    static const sc_lv<42> ap_ST_fsm_state27;
    static const sc_lv<42> ap_ST_fsm_state28;
    static const sc_lv<42> ap_ST_fsm_state29;
    static const sc_lv<42> ap_ST_fsm_state30;
    static const sc_lv<42> ap_ST_fsm_state31;
    static const sc_lv<42> ap_ST_fsm_state32;
    static const sc_lv<42> ap_ST_fsm_state33;
    static const sc_lv<42> ap_ST_fsm_state34;
    static const sc_lv<42> ap_ST_fsm_state35;
    static const sc_lv<42> ap_ST_fsm_state36;
    static const sc_lv<42> ap_ST_fsm_state37;
    static const sc_lv<42> ap_ST_fsm_state38;
    static const sc_lv<42> ap_ST_fsm_state39;
    static const sc_lv<42> ap_ST_fsm_state40;
    static const sc_lv<42> ap_ST_fsm_state41;
    static const sc_lv<42> ap_ST_fsm_state42;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_14;
    static const sc_lv<32> ap_const_lv32_25;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_18;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_11;
    static const sc_lv<32> ap_const_lv32_13;
    static const sc_lv<32> ap_const_lv32_23;
    static const sc_lv<32> ap_const_lv32_24;
    static const sc_lv<32> ap_const_lv32_28;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_12;
    static const sc_lv<4> ap_const_lv4_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_29;
    static const sc_lv<32> ap_const_lv32_26;
    static const sc_lv<32> ap_const_lv32_3F800000;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<64> ap_const_lv64_1;
    static const sc_lv<32> ap_const_lv32_17;
    static const sc_lv<32> ap_const_lv32_1E;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<23> ap_const_lv23_0;
    static const sc_lv<4> ap_const_lv4_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<5> ap_const_lv5_2;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_var_for_const3();
    void thread_ap_var_for_const1();
    void thread_ap_var_for_const2();
    void thread_ap_clk_no_reset_();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state18();
    void thread_ap_CS_fsm_state19();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state20();
    void thread_ap_CS_fsm_state21();
    void thread_ap_CS_fsm_state25();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state36();
    void thread_ap_CS_fsm_state37();
    void thread_ap_CS_fsm_state38();
    void thread_ap_CS_fsm_state39();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state41();
    void thread_ap_CS_fsm_state42();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_316_p2();
    void thread_exitcond2_fu_300_p2();
    void thread_exitcond3_fu_192_p2();
    void thread_exitcond_fu_332_p2();
    void thread_grp_fu_149_opcode();
    void thread_grp_fu_149_p0();
    void thread_grp_fu_149_p1();
    void thread_i_2_fu_197_p2();
    void thread_j_1_fu_305_p2();
    void thread_j_cast_fu_295_p1();
    void thread_k_1_fu_321_p2();
    void thread_k_cast_fu_311_p1();
    void thread_l_1_fu_337_p2();
    void thread_l_cast_fu_327_p1();
    void thread_notlhs1_fu_257_p2();
    void thread_notlhs_fu_239_p2();
    void thread_notrhs2_fu_263_p2();
    void thread_notrhs_fu_245_p2();
    void thread_tmp_11_fu_235_p1();
    void thread_tmp_1_fu_281_p2();
    void thread_tmp_2_fu_225_p4();
    void thread_tmp_3_fu_217_p1();
    void thread_tmp_4_fu_251_p2();
    void thread_tmp_5_fu_269_p2();
    void thread_tmp_6_fu_275_p2();
    void thread_tmp_fu_207_p4();
    void thread_x_address0();
    void thread_x_ce0();
    void thread_x_d0();
    void thread_x_we0();
    void thread_xmax1_to_int_fu_221_p1();
    void thread_xmax_1_fu_287_p3();
    void thread_xmax_2_to_int_fu_203_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
