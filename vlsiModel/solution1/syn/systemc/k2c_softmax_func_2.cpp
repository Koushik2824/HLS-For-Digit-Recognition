// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "k2c_softmax_func_2.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic k2c_softmax_func_2::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic k2c_softmax_func_2::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state1 = "1";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state2 = "10";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state3 = "100";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state4 = "1000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state5 = "10000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state6 = "100000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state7 = "1000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state8 = "10000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state9 = "100000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state10 = "1000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state11 = "10000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state12 = "100000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state23 = "10000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state24 = "100000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state25 = "1000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state26 = "10000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state27 = "100000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state28 = "1000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state29 = "10000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state30 = "100000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state31 = "1000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state32 = "10000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state33 = "100000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state34 = "1000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state35 = "10000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state36 = "100000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state37 = "1000000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state38 = "10000000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state39 = "100000000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state40 = "1000000000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state41 = "10000000000000000000000000000000000000000";
const sc_lv<42> k2c_softmax_func_2::ap_ST_fsm_state42 = "100000000000000000000000000000000000000000";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_1 = "1";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_5 = "101";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_14 = "10100";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_25 = "100101";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_9 = "1001";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_18 = "11000";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_2 = "10";
const sc_lv<1> k2c_softmax_func_2::ap_const_lv1_0 = "0";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_3 = "11";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_4 = "100";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_11 = "10001";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_13 = "10011";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_23 = "100011";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_24 = "100100";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_28 = "101000";
const sc_lv<64> k2c_softmax_func_2::ap_const_lv64_0 = "0000000000000000000000000000000000000000000000000000000000000000";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_12 = "10010";
const sc_lv<4> k2c_softmax_func_2::ap_const_lv4_0 = "0000";
const sc_lv<1> k2c_softmax_func_2::ap_const_lv1_1 = "1";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_29 = "101001";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_26 = "100110";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_3F800000 = "111111100000000000000000000000";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_A = "1010";
const sc_lv<64> k2c_softmax_func_2::ap_const_lv64_1 = "1";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_17 = "10111";
const sc_lv<32> k2c_softmax_func_2::ap_const_lv32_1E = "11110";
const sc_lv<8> k2c_softmax_func_2::ap_const_lv8_FF = "11111111";
const sc_lv<23> k2c_softmax_func_2::ap_const_lv23_0 = "00000000000000000000000";
const sc_lv<4> k2c_softmax_func_2::ap_const_lv4_1 = "1";
const sc_lv<2> k2c_softmax_func_2::ap_const_lv2_0 = "00";
const sc_lv<2> k2c_softmax_func_2::ap_const_lv2_1 = "1";
const sc_lv<5> k2c_softmax_func_2::ap_const_lv5_2 = "10";
const bool k2c_softmax_func_2::ap_const_boolean_1 = true;

k2c_softmax_func_2::k2c_softmax_func_2(sc_module_name name) : sc_module(name), mVcdFile(0) {
    vlsiModel_faddfsuFfa_U214 = new vlsiModel_faddfsuFfa<1,5,32,32,32>("vlsiModel_faddfsuFfa_U214");
    vlsiModel_faddfsuFfa_U214->clk(ap_clk);
    vlsiModel_faddfsuFfa_U214->reset(ap_rst);
    vlsiModel_faddfsuFfa_U214->din0(grp_fu_149_p0);
    vlsiModel_faddfsuFfa_U214->din1(grp_fu_149_p1);
    vlsiModel_faddfsuFfa_U214->opcode(grp_fu_149_opcode);
    vlsiModel_faddfsuFfa_U214->ce(ap_var_for_const0);
    vlsiModel_faddfsuFfa_U214->dout(grp_fu_149_p2);
    vlsiModel_fmul_32dEe_U215 = new vlsiModel_fmul_32dEe<1,3,32,32,32>("vlsiModel_fmul_32dEe_U215");
    vlsiModel_fmul_32dEe_U215->clk(ap_clk);
    vlsiModel_fmul_32dEe_U215->reset(ap_rst);
    vlsiModel_fmul_32dEe_U215->din0(reg_178);
    vlsiModel_fmul_32dEe_U215->din1(sum_1_reg_405);
    vlsiModel_fmul_32dEe_U215->ce(ap_var_for_const0);
    vlsiModel_fmul_32dEe_U215->dout(grp_fu_157_p2);
    vlsiModel_fdiv_32Gfk_U216 = new vlsiModel_fdiv_32Gfk<1,12,32,32,32>("vlsiModel_fdiv_32Gfk_U216");
    vlsiModel_fdiv_32Gfk_U216->clk(ap_clk);
    vlsiModel_fdiv_32Gfk_U216->reset(ap_rst);
    vlsiModel_fdiv_32Gfk_U216->din0(ap_var_for_const1);
    vlsiModel_fdiv_32Gfk_U216->din1(sum_reg_115);
    vlsiModel_fdiv_32Gfk_U216->ce(ap_var_for_const0);
    vlsiModel_fdiv_32Gfk_U216->dout(grp_fu_161_p2);
    vlsiModel_fcmp_32lbW_U217 = new vlsiModel_fcmp_32lbW<1,1,32,32,1>("vlsiModel_fcmp_32lbW_U217");
    vlsiModel_fcmp_32lbW_U217->din0(x_q0);
    vlsiModel_fcmp_32lbW_U217->din1(xmax1_reg_94);
    vlsiModel_fcmp_32lbW_U217->opcode(ap_var_for_const2);
    vlsiModel_fcmp_32lbW_U217->dout(tmp_7_fu_167_p2);
    vlsiModel_fexp_32Hfu_U218 = new vlsiModel_fexp_32Hfu<1,8,32,32,32>("vlsiModel_fexp_32Hfu_U218");
    vlsiModel_fexp_32Hfu_U218->clk(ap_clk);
    vlsiModel_fexp_32Hfu_U218->reset(ap_rst);
    vlsiModel_fexp_32Hfu_U218->din0(ap_var_for_const3);
    vlsiModel_fexp_32Hfu_U218->din1(reg_186);
    vlsiModel_fexp_32Hfu_U218->ce(ap_var_for_const0);
    vlsiModel_fexp_32Hfu_U218->dout(grp_fu_173_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state18);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state19);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state20);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state21);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state36);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state37);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state38);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state39);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state41);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state42);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( exitcond_fu_332_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( exitcond_fu_332_p2 );

    SC_METHOD(thread_exitcond1_fu_316_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( k_cast_fu_311_p1 );

    SC_METHOD(thread_exitcond2_fu_300_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( j_cast_fu_295_p1 );

    SC_METHOD(thread_exitcond3_fu_192_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( i_reg_82 );

    SC_METHOD(thread_exitcond_fu_332_p2);
    sensitive << ( size );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( l_cast_fu_327_p1 );

    SC_METHOD(thread_grp_fu_149_opcode);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state21 );

    SC_METHOD(thread_grp_fu_149_p0);
    sensitive << ( x_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( sum_reg_115 );

    SC_METHOD(thread_grp_fu_149_p1);
    sensitive << ( x_q0 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state21 );
    sensitive << ( xmax1_reg_94 );

    SC_METHOD(thread_i_2_fu_197_p2);
    sensitive << ( i_reg_82 );

    SC_METHOD(thread_j_1_fu_305_p2);
    sensitive << ( j_reg_104 );

    SC_METHOD(thread_j_cast_fu_295_p1);
    sensitive << ( j_reg_104 );

    SC_METHOD(thread_k_1_fu_321_p2);
    sensitive << ( k_reg_127 );

    SC_METHOD(thread_k_cast_fu_311_p1);
    sensitive << ( k_reg_127 );

    SC_METHOD(thread_l_1_fu_337_p2);
    sensitive << ( l_reg_138 );

    SC_METHOD(thread_l_cast_fu_327_p1);
    sensitive << ( l_reg_138 );

    SC_METHOD(thread_notlhs1_fu_257_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_2_fu_225_p4 );

    SC_METHOD(thread_notlhs_fu_239_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_fu_207_p4 );

    SC_METHOD(thread_notrhs2_fu_263_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_11_fu_235_p1 );

    SC_METHOD(thread_notrhs_fu_245_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_3_fu_217_p1 );

    SC_METHOD(thread_tmp_11_fu_235_p1);
    sensitive << ( xmax1_to_int_fu_221_p1 );

    SC_METHOD(thread_tmp_1_fu_281_p2);
    sensitive << ( tmp_6_fu_275_p2 );
    sensitive << ( tmp_7_fu_167_p2 );

    SC_METHOD(thread_tmp_2_fu_225_p4);
    sensitive << ( xmax1_to_int_fu_221_p1 );

    SC_METHOD(thread_tmp_3_fu_217_p1);
    sensitive << ( xmax_2_to_int_fu_203_p1 );

    SC_METHOD(thread_tmp_4_fu_251_p2);
    sensitive << ( notrhs_fu_245_p2 );
    sensitive << ( notlhs_fu_239_p2 );

    SC_METHOD(thread_tmp_5_fu_269_p2);
    sensitive << ( notrhs2_fu_263_p2 );
    sensitive << ( notlhs1_fu_257_p2 );

    SC_METHOD(thread_tmp_6_fu_275_p2);
    sensitive << ( tmp_4_fu_251_p2 );
    sensitive << ( tmp_5_fu_269_p2 );

    SC_METHOD(thread_tmp_fu_207_p4);
    sensitive << ( xmax_2_to_int_fu_203_p1 );

    SC_METHOD(thread_x_address0);
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( x_addr_2_reg_382 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( x_addr_4_reg_418 );
    sensitive << ( i_reg_82 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state42 );
    sensitive << ( j_cast_fu_295_p1 );
    sensitive << ( k_cast_fu_311_p1 );
    sensitive << ( l_cast_fu_327_p1 );

    SC_METHOD(thread_x_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_x_d0);
    sensitive << ( tmp_9_reg_387 );
    sensitive << ( tmp_s_reg_423 );
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_x_we0);
    sensitive << ( ap_CS_fsm_state19 );
    sensitive << ( ap_CS_fsm_state42 );

    SC_METHOD(thread_xmax1_to_int_fu_221_p1);
    sensitive << ( xmax1_reg_94 );

    SC_METHOD(thread_xmax_1_fu_287_p3);
    sensitive << ( x_q0 );
    sensitive << ( xmax1_reg_94 );
    sensitive << ( tmp_1_fu_281_p2 );

    SC_METHOD(thread_xmax_2_to_int_fu_203_p1);
    sensitive << ( x_q0 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( exitcond3_fu_192_p2 );
    sensitive << ( ap_CS_fsm_state5 );
    sensitive << ( exitcond2_fu_300_p2 );
    sensitive << ( ap_CS_fsm_state20 );
    sensitive << ( exitcond1_fu_316_p2 );
    sensitive << ( ap_CS_fsm_state37 );
    sensitive << ( exitcond_fu_332_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    SC_THREAD(thread_ap_var_for_const3);

    SC_THREAD(thread_ap_var_for_const1);

    SC_THREAD(thread_ap_var_for_const2);

    ap_CS_fsm = "000000000000000000000000000000000000000001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "k2c_softmax_func_2_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, x_address0, "(port)x_address0");
    sc_trace(mVcdFile, x_ce0, "(port)x_ce0");
    sc_trace(mVcdFile, x_we0, "(port)x_we0");
    sc_trace(mVcdFile, x_d0, "(port)x_d0");
    sc_trace(mVcdFile, x_q0, "(port)x_q0");
    sc_trace(mVcdFile, size, "(port)size");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, reg_178, "reg_178");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, ap_CS_fsm_state21, "ap_CS_fsm_state21");
    sc_trace(mVcdFile, ap_CS_fsm_state38, "ap_CS_fsm_state38");
    sc_trace(mVcdFile, grp_fu_149_p2, "grp_fu_149_p2");
    sc_trace(mVcdFile, reg_186, "reg_186");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, i_2_fu_197_p2, "i_2_fu_197_p2");
    sc_trace(mVcdFile, i_2_reg_359, "i_2_reg_359");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, exitcond3_fu_192_p2, "exitcond3_fu_192_p2");
    sc_trace(mVcdFile, xmax_1_fu_287_p3, "xmax_1_fu_287_p3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, j_1_fu_305_p2, "j_1_fu_305_p2");
    sc_trace(mVcdFile, j_1_reg_377, "j_1_reg_377");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, x_addr_2_reg_382, "x_addr_2_reg_382");
    sc_trace(mVcdFile, exitcond2_fu_300_p2, "exitcond2_fu_300_p2");
    sc_trace(mVcdFile, grp_fu_173_p2, "grp_fu_173_p2");
    sc_trace(mVcdFile, tmp_9_reg_387, "tmp_9_reg_387");
    sc_trace(mVcdFile, ap_CS_fsm_state18, "ap_CS_fsm_state18");
    sc_trace(mVcdFile, k_1_fu_321_p2, "k_1_fu_321_p2");
    sc_trace(mVcdFile, k_1_reg_395, "k_1_reg_395");
    sc_trace(mVcdFile, ap_CS_fsm_state20, "ap_CS_fsm_state20");
    sc_trace(mVcdFile, exitcond1_fu_316_p2, "exitcond1_fu_316_p2");
    sc_trace(mVcdFile, grp_fu_161_p2, "grp_fu_161_p2");
    sc_trace(mVcdFile, sum_1_reg_405, "sum_1_reg_405");
    sc_trace(mVcdFile, ap_CS_fsm_state36, "ap_CS_fsm_state36");
    sc_trace(mVcdFile, l_1_fu_337_p2, "l_1_fu_337_p2");
    sc_trace(mVcdFile, l_1_reg_413, "l_1_reg_413");
    sc_trace(mVcdFile, ap_CS_fsm_state37, "ap_CS_fsm_state37");
    sc_trace(mVcdFile, x_addr_4_reg_418, "x_addr_4_reg_418");
    sc_trace(mVcdFile, exitcond_fu_332_p2, "exitcond_fu_332_p2");
    sc_trace(mVcdFile, grp_fu_157_p2, "grp_fu_157_p2");
    sc_trace(mVcdFile, tmp_s_reg_423, "tmp_s_reg_423");
    sc_trace(mVcdFile, ap_CS_fsm_state41, "ap_CS_fsm_state41");
    sc_trace(mVcdFile, i_reg_82, "i_reg_82");
    sc_trace(mVcdFile, xmax1_reg_94, "xmax1_reg_94");
    sc_trace(mVcdFile, j_reg_104, "j_reg_104");
    sc_trace(mVcdFile, ap_CS_fsm_state19, "ap_CS_fsm_state19");
    sc_trace(mVcdFile, sum_reg_115, "sum_reg_115");
    sc_trace(mVcdFile, k_reg_127, "k_reg_127");
    sc_trace(mVcdFile, l_reg_138, "l_reg_138");
    sc_trace(mVcdFile, ap_CS_fsm_state42, "ap_CS_fsm_state42");
    sc_trace(mVcdFile, j_cast_fu_295_p1, "j_cast_fu_295_p1");
    sc_trace(mVcdFile, k_cast_fu_311_p1, "k_cast_fu_311_p1");
    sc_trace(mVcdFile, l_cast_fu_327_p1, "l_cast_fu_327_p1");
    sc_trace(mVcdFile, grp_fu_149_p0, "grp_fu_149_p0");
    sc_trace(mVcdFile, grp_fu_149_p1, "grp_fu_149_p1");
    sc_trace(mVcdFile, ap_CS_fsm_state39, "ap_CS_fsm_state39");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, xmax_2_to_int_fu_203_p1, "xmax_2_to_int_fu_203_p1");
    sc_trace(mVcdFile, xmax1_to_int_fu_221_p1, "xmax1_to_int_fu_221_p1");
    sc_trace(mVcdFile, tmp_fu_207_p4, "tmp_fu_207_p4");
    sc_trace(mVcdFile, tmp_3_fu_217_p1, "tmp_3_fu_217_p1");
    sc_trace(mVcdFile, notrhs_fu_245_p2, "notrhs_fu_245_p2");
    sc_trace(mVcdFile, notlhs_fu_239_p2, "notlhs_fu_239_p2");
    sc_trace(mVcdFile, tmp_2_fu_225_p4, "tmp_2_fu_225_p4");
    sc_trace(mVcdFile, tmp_11_fu_235_p1, "tmp_11_fu_235_p1");
    sc_trace(mVcdFile, notrhs2_fu_263_p2, "notrhs2_fu_263_p2");
    sc_trace(mVcdFile, notlhs1_fu_257_p2, "notlhs1_fu_257_p2");
    sc_trace(mVcdFile, tmp_4_fu_251_p2, "tmp_4_fu_251_p2");
    sc_trace(mVcdFile, tmp_5_fu_269_p2, "tmp_5_fu_269_p2");
    sc_trace(mVcdFile, tmp_6_fu_275_p2, "tmp_6_fu_275_p2");
    sc_trace(mVcdFile, tmp_7_fu_167_p2, "tmp_7_fu_167_p2");
    sc_trace(mVcdFile, tmp_1_fu_281_p2, "tmp_1_fu_281_p2");
    sc_trace(mVcdFile, grp_fu_149_opcode, "grp_fu_149_opcode");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

k2c_softmax_func_2::~k2c_softmax_func_2() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete vlsiModel_faddfsuFfa_U214;
    delete vlsiModel_fmul_32dEe_U215;
    delete vlsiModel_fdiv_32Gfk_U216;
    delete vlsiModel_fcmp_32lbW_U217;
    delete vlsiModel_fexp_32Hfu_U218;
}

void k2c_softmax_func_2::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void k2c_softmax_func_2::thread_ap_var_for_const3() {
    ap_var_for_const3 = ap_const_lv32_0;
}

void k2c_softmax_func_2::thread_ap_var_for_const1() {
    ap_var_for_const1 = ap_const_lv32_3F800000;
}

void k2c_softmax_func_2::thread_ap_var_for_const2() {
    ap_var_for_const2 = ap_const_lv5_2;
}

void k2c_softmax_func_2::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_82 = i_2_reg_359.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_82 = ap_const_lv64_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
        j_reg_104 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        j_reg_104 = j_1_reg_377.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_300_p2.read(), ap_const_lv1_1))) {
        k_reg_127 = ap_const_lv4_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        k_reg_127 = k_1_reg_395.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        l_reg_138 = l_1_reg_413.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        l_reg_138 = ap_const_lv4_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && 
         esl_seteq<1,1,1>(exitcond2_fu_300_p2.read(), ap_const_lv1_1))) {
        sum_reg_115 = ap_const_lv32_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        sum_reg_115 = grp_fu_149_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        xmax1_reg_94 = xmax_1_fu_287_p3.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        xmax1_reg_94 = x_q0.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_2_reg_359 = i_2_fu_197_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        j_1_reg_377 = j_1_fu_305_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        k_1_reg_395 = k_1_fu_321_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        l_1_reg_413 = l_1_fu_337_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state38.read()))) {
        reg_178 = x_q0.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) || esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        reg_186 = grp_fu_149_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state36.read())) {
        sum_1_reg_405 = grp_fu_161_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state18.read())) {
        tmp_9_reg_387 = grp_fu_173_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state41.read())) {
        tmp_s_reg_423 = grp_fu_157_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_300_p2.read(), ap_const_lv1_0))) {
        x_addr_2_reg_382 =  (sc_lv<4>) (j_cast_fu_295_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(exitcond_fu_332_p2.read(), ap_const_lv1_0))) {
        x_addr_4_reg_418 =  (sc_lv<4>) (l_cast_fu_327_p1.read());
    }
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[10];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state18() {
    ap_CS_fsm_state18 = ap_CS_fsm.read()[17];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state19() {
    ap_CS_fsm_state19 = ap_CS_fsm.read()[18];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state20() {
    ap_CS_fsm_state20 = ap_CS_fsm.read()[19];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state21() {
    ap_CS_fsm_state21 = ap_CS_fsm.read()[20];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[24];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state36() {
    ap_CS_fsm_state36 = ap_CS_fsm.read()[35];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state37() {
    ap_CS_fsm_state37 = ap_CS_fsm.read()[36];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state38() {
    ap_CS_fsm_state38 = ap_CS_fsm.read()[37];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state39() {
    ap_CS_fsm_state39 = ap_CS_fsm.read()[38];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state41() {
    ap_CS_fsm_state41 = ap_CS_fsm.read()[40];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state42() {
    ap_CS_fsm_state42 = ap_CS_fsm.read()[41];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void k2c_softmax_func_2::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void k2c_softmax_func_2::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
          esl_seteq<1,1,1>(exitcond_fu_332_p2.read(), ap_const_lv1_1)))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void k2c_softmax_func_2::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void k2c_softmax_func_2::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && 
         esl_seteq<1,1,1>(exitcond_fu_332_p2.read(), ap_const_lv1_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void k2c_softmax_func_2::thread_exitcond1_fu_316_p2() {
    exitcond1_fu_316_p2 = (!k_cast_fu_311_p1.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(k_cast_fu_311_p1.read() == size.read());
}

void k2c_softmax_func_2::thread_exitcond2_fu_300_p2() {
    exitcond2_fu_300_p2 = (!j_cast_fu_295_p1.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(j_cast_fu_295_p1.read() == size.read());
}

void k2c_softmax_func_2::thread_exitcond3_fu_192_p2() {
    exitcond3_fu_192_p2 = (!i_reg_82.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(i_reg_82.read() == size.read());
}

void k2c_softmax_func_2::thread_exitcond_fu_332_p2() {
    exitcond_fu_332_p2 = (!l_cast_fu_327_p1.read().is_01() || !size.read().is_01())? sc_lv<1>(): sc_lv<1>(l_cast_fu_327_p1.read() == size.read());
}

void k2c_softmax_func_2::thread_grp_fu_149_opcode() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_149_opcode = ap_const_lv2_1;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_149_opcode = ap_const_lv2_0;
    } else {
        grp_fu_149_opcode = "XX";
    }
}

void k2c_softmax_func_2::thread_grp_fu_149_p0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_149_p0 = sum_reg_115.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_149_p0 = x_q0.read();
    } else {
        grp_fu_149_p0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void k2c_softmax_func_2::thread_grp_fu_149_p1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state21.read())) {
        grp_fu_149_p1 = x_q0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        grp_fu_149_p1 = xmax1_reg_94.read();
    } else {
        grp_fu_149_p1 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void k2c_softmax_func_2::thread_i_2_fu_197_p2() {
    i_2_fu_197_p2 = (!i_reg_82.read().is_01() || !ap_const_lv64_1.is_01())? sc_lv<64>(): (sc_biguint<64>(i_reg_82.read()) + sc_biguint<64>(ap_const_lv64_1));
}

void k2c_softmax_func_2::thread_j_1_fu_305_p2() {
    j_1_fu_305_p2 = (!j_reg_104.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(j_reg_104.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void k2c_softmax_func_2::thread_j_cast_fu_295_p1() {
    j_cast_fu_295_p1 = esl_zext<64,4>(j_reg_104.read());
}

void k2c_softmax_func_2::thread_k_1_fu_321_p2() {
    k_1_fu_321_p2 = (!k_reg_127.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(k_reg_127.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void k2c_softmax_func_2::thread_k_cast_fu_311_p1() {
    k_cast_fu_311_p1 = esl_zext<64,4>(k_reg_127.read());
}

void k2c_softmax_func_2::thread_l_1_fu_337_p2() {
    l_1_fu_337_p2 = (!l_reg_138.read().is_01() || !ap_const_lv4_1.is_01())? sc_lv<4>(): (sc_biguint<4>(l_reg_138.read()) + sc_biguint<4>(ap_const_lv4_1));
}

void k2c_softmax_func_2::thread_l_cast_fu_327_p1() {
    l_cast_fu_327_p1 = esl_zext<64,4>(l_reg_138.read());
}

void k2c_softmax_func_2::thread_notlhs1_fu_257_p2() {
    notlhs1_fu_257_p2 = (!tmp_2_fu_225_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_2_fu_225_p4.read() != ap_const_lv8_FF);
}

void k2c_softmax_func_2::thread_notlhs_fu_239_p2() {
    notlhs_fu_239_p2 = (!tmp_fu_207_p4.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_207_p4.read() != ap_const_lv8_FF);
}

void k2c_softmax_func_2::thread_notrhs2_fu_263_p2() {
    notrhs2_fu_263_p2 = (!tmp_11_fu_235_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_11_fu_235_p1.read() == ap_const_lv23_0);
}

void k2c_softmax_func_2::thread_notrhs_fu_245_p2() {
    notrhs_fu_245_p2 = (!tmp_3_fu_217_p1.read().is_01() || !ap_const_lv23_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_3_fu_217_p1.read() == ap_const_lv23_0);
}

void k2c_softmax_func_2::thread_tmp_11_fu_235_p1() {
    tmp_11_fu_235_p1 = xmax1_to_int_fu_221_p1.read().range(23-1, 0);
}

void k2c_softmax_func_2::thread_tmp_1_fu_281_p2() {
    tmp_1_fu_281_p2 = (tmp_6_fu_275_p2.read() & tmp_7_fu_167_p2.read());
}

void k2c_softmax_func_2::thread_tmp_2_fu_225_p4() {
    tmp_2_fu_225_p4 = xmax1_to_int_fu_221_p1.read().range(30, 23);
}

void k2c_softmax_func_2::thread_tmp_3_fu_217_p1() {
    tmp_3_fu_217_p1 = xmax_2_to_int_fu_203_p1.read().range(23-1, 0);
}

void k2c_softmax_func_2::thread_tmp_4_fu_251_p2() {
    tmp_4_fu_251_p2 = (notrhs_fu_245_p2.read() | notlhs_fu_239_p2.read());
}

void k2c_softmax_func_2::thread_tmp_5_fu_269_p2() {
    tmp_5_fu_269_p2 = (notrhs2_fu_263_p2.read() | notlhs1_fu_257_p2.read());
}

void k2c_softmax_func_2::thread_tmp_6_fu_275_p2() {
    tmp_6_fu_275_p2 = (tmp_4_fu_251_p2.read() & tmp_5_fu_269_p2.read());
}

void k2c_softmax_func_2::thread_tmp_fu_207_p4() {
    tmp_fu_207_p4 = xmax_2_to_int_fu_203_p1.read().range(30, 23);
}

void k2c_softmax_func_2::thread_x_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        x_address0 = x_addr_4_reg_418.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read())) {
        x_address0 =  (sc_lv<4>) (l_cast_fu_327_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read())) {
        x_address0 =  (sc_lv<4>) (k_cast_fu_311_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        x_address0 = x_addr_2_reg_382.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        x_address0 =  (sc_lv<4>) (j_cast_fu_295_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        x_address0 =  (sc_lv<4>) (i_reg_82.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) {
        x_address0 =  (sc_lv<4>) (ap_const_lv64_0);
    } else {
        x_address0 =  (sc_lv<4>) ("XXXX");
    }
}

void k2c_softmax_func_2::thread_x_ce0() {
    if (((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        x_ce0 = ap_const_logic_1;
    } else {
        x_ce0 = ap_const_logic_0;
    }
}

void k2c_softmax_func_2::thread_x_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read())) {
        x_d0 = tmp_s_reg_423.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read())) {
        x_d0 = tmp_9_reg_387.read();
    } else {
        x_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void k2c_softmax_func_2::thread_x_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state19.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state42.read()))) {
        x_we0 = ap_const_logic_1;
    } else {
        x_we0 = ap_const_logic_0;
    }
}

void k2c_softmax_func_2::thread_xmax1_to_int_fu_221_p1() {
    xmax1_to_int_fu_221_p1 = xmax1_reg_94.read();
}

void k2c_softmax_func_2::thread_xmax_1_fu_287_p3() {
    xmax_1_fu_287_p3 = (!tmp_1_fu_281_p2.read()[0].is_01())? sc_lv<32>(): ((tmp_1_fu_281_p2.read()[0].to_bool())? x_q0.read(): xmax1_reg_94.read());
}

void k2c_softmax_func_2::thread_xmax_2_to_int_fu_203_p1() {
    xmax_2_to_int_fu_203_p1 = x_q0.read();
}

void k2c_softmax_func_2::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(exitcond3_fu_192_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 16 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read()) && esl_seteq<1,1,1>(exitcond2_fu_300_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state20;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 524288 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state20.read()) && esl_seteq<1,1,1>(exitcond1_fu_316_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state26;
            } else {
                ap_NS_fsm = ap_ST_fsm_state21;
            }
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            ap_NS_fsm = ap_ST_fsm_state23;
            break;
        case 4194304 : 
            ap_NS_fsm = ap_ST_fsm_state24;
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state25;
            break;
        case 16777216 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 33554432 : 
            ap_NS_fsm = ap_ST_fsm_state27;
            break;
        case 67108864 : 
            ap_NS_fsm = ap_ST_fsm_state28;
            break;
        case 134217728 : 
            ap_NS_fsm = ap_ST_fsm_state29;
            break;
        case 268435456 : 
            ap_NS_fsm = ap_ST_fsm_state30;
            break;
        case 536870912 : 
            ap_NS_fsm = ap_ST_fsm_state31;
            break;
        case 1073741824 : 
            ap_NS_fsm = ap_ST_fsm_state32;
            break;
        case 2147483648 : 
            ap_NS_fsm = ap_ST_fsm_state33;
            break;
        case 4294967296 : 
            ap_NS_fsm = ap_ST_fsm_state34;
            break;
        case 8589934592 : 
            ap_NS_fsm = ap_ST_fsm_state35;
            break;
        case 17179869184 : 
            ap_NS_fsm = ap_ST_fsm_state36;
            break;
        case 34359738368 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        case 68719476736 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state37.read()) && esl_seteq<1,1,1>(exitcond_fu_332_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state38;
            }
            break;
        case 137438953472 : 
            ap_NS_fsm = ap_ST_fsm_state39;
            break;
        case 274877906944 : 
            ap_NS_fsm = ap_ST_fsm_state40;
            break;
        case 549755813888 : 
            ap_NS_fsm = ap_ST_fsm_state41;
            break;
        case 1099511627776 : 
            ap_NS_fsm = ap_ST_fsm_state42;
            break;
        case 2199023255552 : 
            ap_NS_fsm = ap_ST_fsm_state37;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<42>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
            break;
    }
}

}

