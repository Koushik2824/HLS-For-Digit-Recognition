// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and SystemC
// Version: 2018.2
// Copyright (C) 1986-2018 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _k2c_matmul_2_HH_
#define _k2c_matmul_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "vlsiModel_fadd_32cud.h"
#include "vlsiModel_fmul_32dEe.h"
#include "vlsiModel_mul_64sbkb.h"
#include "vlsiModel_mul_mulvdy.h"
#include "vlsiModel_mac_mulwdI.h"

namespace ap_rtl {

struct k2c_matmul_2 : public sc_module {
    // Port declarations 21
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<5> > C_address0;
    sc_out< sc_logic > C_ce0;
    sc_out< sc_logic > C_we0;
    sc_out< sc_lv<32> > C_d0;
    sc_in< sc_lv<32> > C_q0;
    sc_out< sc_lv<11> > A_address0;
    sc_out< sc_logic > A_ce0;
    sc_in< sc_lv<32> > A_q0;
    sc_out< sc_lv<11> > A_address1;
    sc_out< sc_logic > A_ce1;
    sc_in< sc_lv<32> > A_q1;
    sc_in< sc_lv<64> > B_offset;
    sc_in< sc_lv<64> > outrows;
    sc_in< sc_lv<64> > outcols;
    sc_in< sc_lv<64> > innerdim;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    k2c_matmul_2(sc_module_name name);
    SC_HAS_PROCESS(k2c_matmul_2);

    ~k2c_matmul_2();

    sc_trace_file* mVcdFile;

    vlsiModel_fadd_32cud<1,5,32,32,32>* vlsiModel_fadd_32cud_U126;
    vlsiModel_fmul_32dEe<1,3,32,32,32>* vlsiModel_fmul_32dEe_U127;
    vlsiModel_mul_64sbkb<1,2,64,64,64>* vlsiModel_mul_64sbkb_U128;
    vlsiModel_mul_mulvdy<1,1,12,12,12>* vlsiModel_mul_mulvdy_U129;
    vlsiModel_mac_mulwdI<1,1,12,12,12,12>* vlsiModel_mac_mulwdI_U130;
    sc_signal< sc_lv<15> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<64> > grp_fu_147_p2;
    sc_signal< sc_lv<64> > tmp_reg_305;
    sc_signal< sc_lv<5> > a10_fu_163_p2;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<6> > tmp_30_fu_169_p1;
    sc_signal< sc_lv<6> > tmp_30_reg_318;
    sc_signal< sc_lv<1> > exitcond3_fu_158_p2;
    sc_signal< sc_lv<12> > tmp_31_fu_172_p1;
    sc_signal< sc_lv<12> > tmp_31_reg_323;
    sc_signal< sc_lv<12> > tmp_32_fu_175_p1;
    sc_signal< sc_lv<12> > tmp_32_reg_328;
    sc_signal< sc_lv<12> > tmp_33_fu_178_p1;
    sc_signal< sc_lv<12> > tmp_33_reg_333;
    sc_signal< sc_lv<64> > i_4_fu_194_p2;
    sc_signal< sc_lv<64> > i_4_reg_341;
    sc_signal< sc_logic > ap_CS_fsm_state4;
    sc_signal< sc_lv<6> > outrowidx_fu_200_p2;
    sc_signal< sc_lv<6> > outrowidx_reg_346;
    sc_signal< sc_lv<1> > exitcond2_fu_189_p2;
    sc_signal< sc_lv<12> > inneridx_fu_269_p2;
    sc_signal< sc_lv<12> > inneridx_reg_351;
    sc_signal< sc_lv<64> > k_2_fu_214_p2;
    sc_signal< sc_lv<64> > k_2_reg_359;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<11> > B_addr_reg_364;
    sc_signal< sc_lv<1> > exitcond1_fu_209_p2;
    sc_signal< sc_lv<12> > grp_fu_274_p3;
    sc_signal< sc_lv<12> > tmp1_reg_369;
    sc_signal< sc_lv<64> > j_2_fu_243_p2;
    sc_signal< sc_lv<64> > j_2_reg_377;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > exitcond_fu_238_p2;
    sc_signal< sc_lv<5> > C_addr_2_reg_387;
    sc_signal< sc_lv<32> > B_load_2_reg_392;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<32> > B_load_reg_397;
    sc_signal< sc_lv<32> > grp_fu_143_p2;
    sc_signal< sc_lv<32> > tmp_3_reg_402;
    sc_signal< sc_logic > ap_CS_fsm_state10;
    sc_signal< sc_logic > ap_CS_fsm_state11;
    sc_signal< sc_lv<5> > a_reg_93;
    sc_signal< sc_lv<64> > i_reg_104;
    sc_signal< sc_lv<64> > k_reg_115;
    sc_signal< sc_lv<64> > j_reg_126;
    sc_signal< sc_logic > ap_CS_fsm_state15;
    sc_signal< sc_lv<64> > a_cast_fu_153_p1;
    sc_signal< sc_lv<64> > sum_cast_fu_225_p1;
    sc_signal< sc_lv<64> > sum3_cast_fu_254_p1;
    sc_signal< sc_lv<64> > sum2_cast_fu_264_p1;
    sc_signal< sc_lv<32> > grp_fu_137_p2;
    sc_signal< sc_logic > ap_CS_fsm_state8;
    sc_signal< sc_lv<64> > tmp_30_fu_169_p0;
    sc_signal< sc_lv<64> > tmp_32_fu_175_p0;
    sc_signal< sc_lv<64> > exitcond2_fu_189_p1;
    sc_signal< sc_lv<6> > tmp_35_fu_185_p1;
    sc_signal< sc_lv<12> > tmp_36_fu_205_p1;
    sc_signal< sc_lv<12> > sum_fu_220_p2;
    sc_signal< sc_lv<64> > exitcond_fu_238_p1;
    sc_signal< sc_lv<12> > tmp_38_fu_234_p1;
    sc_signal< sc_lv<12> > sum3_fu_249_p2;
    sc_signal< sc_lv<6> > tmp_37_fu_230_p1;
    sc_signal< sc_lv<6> > sum2_fu_259_p2;
    sc_signal< sc_lv<12> > inneridx_fu_269_p0;
    sc_signal< sc_lv<15> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<15> ap_ST_fsm_state1;
    static const sc_lv<15> ap_ST_fsm_state2;
    static const sc_lv<15> ap_ST_fsm_state3;
    static const sc_lv<15> ap_ST_fsm_state4;
    static const sc_lv<15> ap_ST_fsm_state5;
    static const sc_lv<15> ap_ST_fsm_state6;
    static const sc_lv<15> ap_ST_fsm_state7;
    static const sc_lv<15> ap_ST_fsm_state8;
    static const sc_lv<15> ap_ST_fsm_state9;
    static const sc_lv<15> ap_ST_fsm_state10;
    static const sc_lv<15> ap_ST_fsm_state11;
    static const sc_lv<15> ap_ST_fsm_state12;
    static const sc_lv<15> ap_ST_fsm_state13;
    static const sc_lv<15> ap_ST_fsm_state14;
    static const sc_lv<15> ap_ST_fsm_state15;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_9;
    static const sc_lv<32> ap_const_lv32_A;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<64> ap_const_lv64_0;
    static const sc_lv<32> ap_const_lv32_E;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<64> ap_const_lv64_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_A_address0();
    void thread_A_address1();
    void thread_A_ce0();
    void thread_A_ce1();
    void thread_C_address0();
    void thread_C_ce0();
    void thread_C_d0();
    void thread_C_we0();
    void thread_a10_fu_163_p2();
    void thread_a_cast_fu_153_p1();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state10();
    void thread_ap_CS_fsm_state11();
    void thread_ap_CS_fsm_state15();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_CS_fsm_state4();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_CS_fsm_state8();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_exitcond1_fu_209_p2();
    void thread_exitcond2_fu_189_p1();
    void thread_exitcond2_fu_189_p2();
    void thread_exitcond3_fu_158_p2();
    void thread_exitcond_fu_238_p1();
    void thread_exitcond_fu_238_p2();
    void thread_i_4_fu_194_p2();
    void thread_inneridx_fu_269_p0();
    void thread_j_2_fu_243_p2();
    void thread_k_2_fu_214_p2();
    void thread_outrowidx_fu_200_p2();
    void thread_sum2_cast_fu_264_p1();
    void thread_sum2_fu_259_p2();
    void thread_sum3_cast_fu_254_p1();
    void thread_sum3_fu_249_p2();
    void thread_sum_cast_fu_225_p1();
    void thread_sum_fu_220_p2();
    void thread_tmp_30_fu_169_p0();
    void thread_tmp_30_fu_169_p1();
    void thread_tmp_31_fu_172_p1();
    void thread_tmp_32_fu_175_p0();
    void thread_tmp_32_fu_175_p1();
    void thread_tmp_33_fu_178_p1();
    void thread_tmp_35_fu_185_p1();
    void thread_tmp_36_fu_205_p1();
    void thread_tmp_37_fu_230_p1();
    void thread_tmp_38_fu_234_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
