

================================================================
== Vivado HLS Report for 'k2c_softmax_func_2'
================================================================
* Date:           Thu Apr 18 00:48:36 2024

* Version:        2018.2 (Build 2258646 on Thu Jun 14 20:25:20 MDT 2018)
* Project:        vlsiModel
* Solution:       solution1
* Product family: artix7
* Target device:  xc7a200tfbg676-2


================================================================
== Performance Estimates
================================================================
+ Timing (ns): 
    * Summary: 
    +--------+-------+----------+------------+
    |  Clock | Target| Estimated| Uncertainty|
    +--------+-------+----------+------------+
    |ap_clk  |  10.00|     8.636|        1.25|
    +--------+-------+----------+------------+

+ Latency (clock cycles): 
    * Summary: 
    +-----+-----+-----+-----+---------+
    |  Latency  |  Interval | Pipeline|
    | min | max | min | max |   Type  |
    +-----+-----+-----+-----+---------+
    |    ?|    ?|    ?|    ?|   none  |
    +-----+-----+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |          |  Latency  | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name| min | max |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+-----+-----+----------+-----------+-----------+------+----------+
        |- Loop 1  |    ?|    ?|         2|          -|          -|     ?|    no    |
        |- Loop 2  |    ?|    ?|        15|          -|          -|     ?|    no    |
        |- Loop 3  |    ?|    ?|         6|          -|          -|     ?|    no    |
        |- Loop 4  |    ?|    ?|         6|          -|          -|     ?|    no    |
        +----------+-----+-----+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 42
* Pipeline : 0
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 
	2  / true
2 --> 
	3  / true
3 --> 
	4  / (!exitcond3)
	5  / (exitcond3)
4 --> 
	3  / true
5 --> 
	6  / (!exitcond2)
	20  / (exitcond2)
6 --> 
	7  / true
7 --> 
	8  / true
8 --> 
	9  / true
9 --> 
	10  / true
10 --> 
	11  / true
11 --> 
	12  / true
12 --> 
	13  / true
13 --> 
	14  / true
14 --> 
	15  / true
15 --> 
	16  / true
16 --> 
	17  / true
17 --> 
	18  / true
18 --> 
	19  / true
19 --> 
	5  / true
20 --> 
	21  / (!exitcond1)
	26  / (exitcond1)
21 --> 
	22  / true
22 --> 
	23  / true
23 --> 
	24  / true
24 --> 
	25  / true
25 --> 
	20  / true
26 --> 
	27  / true
27 --> 
	28  / true
28 --> 
	29  / true
29 --> 
	30  / true
30 --> 
	31  / true
31 --> 
	32  / true
32 --> 
	33  / true
33 --> 
	34  / true
34 --> 
	35  / true
35 --> 
	36  / true
36 --> 
	37  / true
37 --> 
	38  / (!exitcond)
38 --> 
	39  / true
39 --> 
	40  / true
40 --> 
	41  / true
41 --> 
	42  / true
42 --> 
	37  / true

* FSM state operations: 

State 1 <SV = 0> <Delay = 1.75>
ST_1 : Operation 43 [1/1] (0.00ns)   --->   "%x_addr = getelementptr [10 x float]* %x, i64 0, i64 0"   --->   Operation 43 'getelementptr' 'x_addr' <Predicate = true> <Delay = 0.00>
ST_1 : Operation 44 [2/2] (1.75ns)   --->   "%xmax = load float* %x_addr, align 4" [vlsiModel.c:19]   --->   Operation 44 'load' 'xmax' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 2 <SV = 1> <Delay = 1.75>
ST_2 : Operation 45 [1/1] (0.00ns)   --->   "%size_read = call i64 @_ssdm_op_Read.ap_auto.i64(i64 %size)"   --->   Operation 45 'read' 'size_read' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 46 [1/2] (1.75ns)   --->   "%xmax = load float* %x_addr, align 4" [vlsiModel.c:19]   --->   Operation 46 'load' 'xmax' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_2 : Operation 47 [1/1] (1.35ns)   --->   "br label %1" [vlsiModel.c:21]   --->   Operation 47 'br' <Predicate = true> <Delay = 1.35>

State 3 <SV = 2> <Delay = 2.99>
ST_3 : Operation 48 [1/1] (0.00ns)   --->   "%i = phi i64 [ 0, %0 ], [ %i_2, %._crit_edge ]"   --->   Operation 48 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 49 [1/1] (0.00ns)   --->   "%xmax1 = phi float [ %xmax, %0 ], [ %xmax_1, %._crit_edge ]"   --->   Operation 49 'phi' 'xmax1' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 50 [1/1] (2.34ns)   --->   "%exitcond3 = icmp eq i64 %i, %size_read" [vlsiModel.c:21]   --->   Operation 50 'icmp' 'exitcond3' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (2.99ns)   --->   "%i_2 = add i64 %i, 1" [vlsiModel.c:21]   --->   Operation 51 'add' 'i_2' <Predicate = true> <Delay = 2.99> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 52 [1/1] (0.00ns)   --->   "br i1 %exitcond3, label %.preheader4.preheader, label %._crit_edge" [vlsiModel.c:21]   --->   Operation 52 'br' <Predicate = true> <Delay = 0.00>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%x_addr_1 = getelementptr [10 x float]* %x, i64 0, i64 %i" [vlsiModel.c:23]   --->   Operation 53 'getelementptr' 'x_addr_1' <Predicate = (!exitcond3)> <Delay = 0.00>
ST_3 : Operation 54 [2/2] (1.75ns)   --->   "%xmax_2 = load float* %x_addr_1, align 4" [vlsiModel.c:23]   --->   Operation 54 'load' 'xmax_2' <Predicate = (!exitcond3)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_3 : Operation 55 [1/1] (1.35ns)   --->   "br label %.preheader4" [vlsiModel.c:29]   --->   Operation 55 'br' <Predicate = (exitcond3)> <Delay = 1.35>

State 4 <SV = 3> <Delay = 8.63>
ST_4 : Operation 56 [1/2] (1.75ns)   --->   "%xmax_2 = load float* %x_addr_1, align 4" [vlsiModel.c:23]   --->   Operation 56 'load' 'xmax_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_4 : Operation 57 [1/1] (0.00ns)   --->   "%xmax_2_to_int = bitcast float %xmax_2 to i32" [vlsiModel.c:23]   --->   Operation 57 'bitcast' 'xmax_2_to_int' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 58 [1/1] (0.00ns)   --->   "%tmp = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %xmax_2_to_int, i32 23, i32 30)" [vlsiModel.c:23]   --->   Operation 58 'partselect' 'tmp' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 59 [1/1] (0.00ns)   --->   "%tmp_3 = trunc i32 %xmax_2_to_int to i23" [vlsiModel.c:23]   --->   Operation 59 'trunc' 'tmp_3' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 60 [1/1] (0.00ns)   --->   "%xmax1_to_int = bitcast float %xmax1 to i32" [vlsiModel.c:19]   --->   Operation 60 'bitcast' 'xmax1_to_int' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 61 [1/1] (0.00ns)   --->   "%tmp_2 = call i8 @_ssdm_op_PartSelect.i8.i32.i32.i32(i32 %xmax1_to_int, i32 23, i32 30)" [vlsiModel.c:19]   --->   Operation 61 'partselect' 'tmp_2' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 62 [1/1] (0.00ns)   --->   "%tmp_11 = trunc i32 %xmax1_to_int to i23" [vlsiModel.c:19]   --->   Operation 62 'trunc' 'tmp_11' <Predicate = true> <Delay = 0.00>
ST_4 : Operation 63 [1/1] (1.24ns)   --->   "%notlhs = icmp ne i8 %tmp, -1" [vlsiModel.c:23]   --->   Operation 63 'icmp' 'notlhs' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 64 [1/1] (2.03ns)   --->   "%notrhs = icmp eq i23 %tmp_3, 0" [vlsiModel.c:23]   --->   Operation 64 'icmp' 'notrhs' <Predicate = true> <Delay = 2.03> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node tmp_1)   --->   "%tmp_4 = or i1 %notrhs, %notlhs" [vlsiModel.c:23]   --->   Operation 65 'or' 'tmp_4' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 66 [1/1] (1.24ns)   --->   "%notlhs1 = icmp ne i8 %tmp_2, -1" [vlsiModel.c:19]   --->   Operation 66 'icmp' 'notlhs1' <Predicate = true> <Delay = 1.24> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 67 [1/1] (2.03ns)   --->   "%notrhs2 = icmp eq i23 %tmp_11, 0" [vlsiModel.c:19]   --->   Operation 67 'icmp' 'notrhs2' <Predicate = true> <Delay = 2.03> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node tmp_1)   --->   "%tmp_5 = or i1 %notrhs2, %notlhs1" [vlsiModel.c:19]   --->   Operation 68 'or' 'tmp_5' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 69 [1/1] (0.00ns) (grouped into LUT with out node tmp_1)   --->   "%tmp_6 = and i1 %tmp_4, %tmp_5" [vlsiModel.c:23]   --->   Operation 69 'and' 'tmp_6' <Predicate = true> <Delay = 0.00> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 70 [1/1] (5.30ns)   --->   "%tmp_7 = fcmp ogt float %xmax_2, %xmax1" [vlsiModel.c:23]   --->   Operation 70 'fcmp' 'tmp_7' <Predicate = true> <Delay = 5.30> <Core = "FCmp">   --->   Core 105 'FCmp' <Latency = 0> <II = 1> <Delay = 5.30> <FuncUnit> <Opcode : 'fcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 71 [1/1] (0.80ns) (out node of the LUT)   --->   "%tmp_1 = and i1 %tmp_6, %tmp_7" [vlsiModel.c:23]   --->   Operation 71 'and' 'tmp_1' <Predicate = true> <Delay = 0.80> <Core = "LogicGate">   --->   Core 27 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.80> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 72 [1/1] (0.77ns) (out node of the LUT)   --->   "%xmax_1 = select i1 %tmp_1, float %xmax_2, float %xmax1" [vlsiModel.c:23]   --->   Operation 72 'select' 'xmax_1' <Predicate = true> <Delay = 0.77> <Core = "Sel">   --->   Core 26 'Sel' <Latency = 0> <II = 1> <Delay = 0.77> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 73 [1/1] (0.00ns)   --->   "br label %1" [vlsiModel.c:21]   --->   Operation 73 'br' <Predicate = true> <Delay = 0.00>

State 5 <SV = 3> <Delay = 2.34>
ST_5 : Operation 74 [1/1] (0.00ns)   --->   "%j = phi i4 [ %j_1, %2 ], [ 0, %.preheader4.preheader ]"   --->   Operation 74 'phi' 'j' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 75 [1/1] (0.00ns)   --->   "%j_cast = zext i4 %j to i64" [vlsiModel.c:29]   --->   Operation 75 'zext' 'j_cast' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 76 [1/1] (2.34ns)   --->   "%exitcond2 = icmp eq i64 %j_cast, %size_read" [vlsiModel.c:29]   --->   Operation 76 'icmp' 'exitcond2' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 77 [1/1] (1.49ns)   --->   "%j_1 = add i4 %j, 1" [vlsiModel.c:29]   --->   Operation 77 'add' 'j_1' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 78 [1/1] (0.00ns)   --->   "br i1 %exitcond2, label %.preheader.preheader, label %2" [vlsiModel.c:29]   --->   Operation 78 'br' <Predicate = true> <Delay = 0.00>
ST_5 : Operation 79 [1/1] (0.00ns)   --->   "%x_addr_2 = getelementptr [10 x float]* %x, i64 0, i64 %j_cast" [vlsiModel.c:31]   --->   Operation 79 'getelementptr' 'x_addr_2' <Predicate = (!exitcond2)> <Delay = 0.00>
ST_5 : Operation 80 [2/2] (1.75ns)   --->   "%x_load = load float* %x_addr_2, align 4" [vlsiModel.c:31]   --->   Operation 80 'load' 'x_load' <Predicate = (!exitcond2)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_5 : Operation 81 [1/1] (1.35ns)   --->   "br label %.preheader" [vlsiModel.c:34]   --->   Operation 81 'br' <Predicate = (exitcond2)> <Delay = 1.35>

State 6 <SV = 4> <Delay = 8.26>
ST_6 : Operation 82 [1/2] (1.75ns)   --->   "%x_load = load float* %x_addr_2, align 4" [vlsiModel.c:31]   --->   Operation 82 'load' 'x_load' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_6 : Operation 83 [5/5] (6.51ns)   --->   "%tmp_8 = fsub float %x_load, %xmax1" [vlsiModel.c:31]   --->   Operation 83 'fsub' 'tmp_8' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 7 <SV = 5> <Delay = 6.51>
ST_7 : Operation 84 [4/5] (6.51ns)   --->   "%tmp_8 = fsub float %x_load, %xmax1" [vlsiModel.c:31]   --->   Operation 84 'fsub' 'tmp_8' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 8 <SV = 6> <Delay = 6.51>
ST_8 : Operation 85 [3/5] (6.51ns)   --->   "%tmp_8 = fsub float %x_load, %xmax1" [vlsiModel.c:31]   --->   Operation 85 'fsub' 'tmp_8' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 9 <SV = 7> <Delay = 6.51>
ST_9 : Operation 86 [2/5] (6.51ns)   --->   "%tmp_8 = fsub float %x_load, %xmax1" [vlsiModel.c:31]   --->   Operation 86 'fsub' 'tmp_8' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 10 <SV = 8> <Delay = 6.51>
ST_10 : Operation 87 [1/5] (6.51ns)   --->   "%tmp_8 = fsub float %x_load, %xmax1" [vlsiModel.c:31]   --->   Operation 87 'fsub' 'tmp_8' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 11 <SV = 9> <Delay = 7.04>
ST_11 : Operation 88 [8/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 88 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 12 <SV = 10> <Delay = 7.04>
ST_12 : Operation 89 [7/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 89 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 13 <SV = 11> <Delay = 7.04>
ST_13 : Operation 90 [6/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 90 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 14 <SV = 12> <Delay = 7.04>
ST_14 : Operation 91 [5/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 91 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 15 <SV = 13> <Delay = 7.04>
ST_15 : Operation 92 [4/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 92 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 16 <SV = 14> <Delay = 7.04>
ST_16 : Operation 93 [3/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 93 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 17 <SV = 15> <Delay = 7.04>
ST_17 : Operation 94 [2/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 94 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 18 <SV = 16> <Delay = 7.04>
ST_18 : Operation 95 [1/8] (7.04ns)   --->   "%tmp_9 = call float @llvm.exp.f32(float %tmp_8)" [vlsiModel.c:31]   --->   Operation 95 'fexp' 'tmp_9' <Predicate = true> <Delay = 7.04> <Core = "FExp">   --->   Core 121 'FExp' <Latency = 7> <II = 1> <Delay = 7.04> <FuncUnit> <Opcode : 'fexp'> <InPorts = 1> <OutPorts = 1>

State 19 <SV = 17> <Delay = 1.75>
ST_19 : Operation 96 [1/1] (1.75ns)   --->   "store float %tmp_9, float* %x_addr_2, align 4" [vlsiModel.c:31]   --->   Operation 96 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_19 : Operation 97 [1/1] (0.00ns)   --->   "br label %.preheader4" [vlsiModel.c:29]   --->   Operation 97 'br' <Predicate = true> <Delay = 0.00>

State 20 <SV = 4> <Delay = 7.20>
ST_20 : Operation 98 [1/1] (0.00ns)   --->   "%sum = phi float [ %sum_2, %3 ], [ 0.000000e+00, %.preheader.preheader ]"   --->   Operation 98 'phi' 'sum' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 99 [1/1] (0.00ns)   --->   "%k = phi i4 [ %k_1, %3 ], [ 0, %.preheader.preheader ]"   --->   Operation 99 'phi' 'k' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 100 [1/1] (0.00ns)   --->   "%k_cast = zext i4 %k to i64" [vlsiModel.c:34]   --->   Operation 100 'zext' 'k_cast' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 101 [1/1] (2.34ns)   --->   "%exitcond1 = icmp eq i64 %k_cast, %size_read" [vlsiModel.c:34]   --->   Operation 101 'icmp' 'exitcond1' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 102 [1/1] (1.49ns)   --->   "%k_1 = add i4 %k, 1" [vlsiModel.c:34]   --->   Operation 102 'add' 'k_1' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_20 : Operation 103 [1/1] (0.00ns)   --->   "br i1 %exitcond1, label %4, label %3" [vlsiModel.c:34]   --->   Operation 103 'br' <Predicate = true> <Delay = 0.00>
ST_20 : Operation 104 [1/1] (0.00ns)   --->   "%x_addr_3 = getelementptr [10 x float]* %x, i64 0, i64 %k_cast" [vlsiModel.c:36]   --->   Operation 104 'getelementptr' 'x_addr_3' <Predicate = (!exitcond1)> <Delay = 0.00>
ST_20 : Operation 105 [2/2] (1.75ns)   --->   "%x_load_1 = load float* %x_addr_3, align 4" [vlsiModel.c:36]   --->   Operation 105 'load' 'x_load_1' <Predicate = (!exitcond1)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_20 : Operation 106 [12/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 106 'fdiv' 'sum_1' <Predicate = (exitcond1)> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 21 <SV = 5> <Delay = 8.26>
ST_21 : Operation 107 [1/2] (1.75ns)   --->   "%x_load_1 = load float* %x_addr_3, align 4" [vlsiModel.c:36]   --->   Operation 107 'load' 'x_load_1' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_21 : Operation 108 [5/5] (6.51ns)   --->   "%sum_2 = fadd float %sum, %x_load_1" [vlsiModel.c:36]   --->   Operation 108 'fadd' 'sum_2' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 22 <SV = 6> <Delay = 6.51>
ST_22 : Operation 109 [4/5] (6.51ns)   --->   "%sum_2 = fadd float %sum, %x_load_1" [vlsiModel.c:36]   --->   Operation 109 'fadd' 'sum_2' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 23 <SV = 7> <Delay = 6.51>
ST_23 : Operation 110 [3/5] (6.51ns)   --->   "%sum_2 = fadd float %sum, %x_load_1" [vlsiModel.c:36]   --->   Operation 110 'fadd' 'sum_2' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 24 <SV = 8> <Delay = 6.51>
ST_24 : Operation 111 [2/5] (6.51ns)   --->   "%sum_2 = fadd float %sum, %x_load_1" [vlsiModel.c:36]   --->   Operation 111 'fadd' 'sum_2' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>

State 25 <SV = 9> <Delay = 6.51>
ST_25 : Operation 112 [1/5] (6.51ns)   --->   "%sum_2 = fadd float %sum, %x_load_1" [vlsiModel.c:36]   --->   Operation 112 'fadd' 'sum_2' <Predicate = true> <Delay = 6.51> <Core = "FAddSub">   --->   Core 99 'FAddSub' <Latency = 4> <II = 1> <Delay = 6.51> <FuncUnit> <Opcode : 'fadd' 'fsub'> <InPorts = 2> <OutPorts = 1>
ST_25 : Operation 113 [1/1] (0.00ns)   --->   "br label %.preheader" [vlsiModel.c:34]   --->   Operation 113 'br' <Predicate = true> <Delay = 0.00>

State 26 <SV = 5> <Delay = 7.20>
ST_26 : Operation 114 [11/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 114 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 27 <SV = 6> <Delay = 7.20>
ST_27 : Operation 115 [10/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 115 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 28 <SV = 7> <Delay = 7.20>
ST_28 : Operation 116 [9/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 116 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 29 <SV = 8> <Delay = 7.20>
ST_29 : Operation 117 [8/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 117 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 30 <SV = 9> <Delay = 7.20>
ST_30 : Operation 118 [7/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 118 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 31 <SV = 10> <Delay = 7.20>
ST_31 : Operation 119 [6/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 119 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 32 <SV = 11> <Delay = 7.20>
ST_32 : Operation 120 [5/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 120 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 33 <SV = 12> <Delay = 7.20>
ST_33 : Operation 121 [4/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 121 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 34 <SV = 13> <Delay = 7.20>
ST_34 : Operation 122 [3/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 122 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 35 <SV = 14> <Delay = 7.20>
ST_35 : Operation 123 [2/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 123 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>

State 36 <SV = 15> <Delay = 7.20>
ST_36 : Operation 124 [1/12] (7.20ns)   --->   "%sum_1 = fdiv float 1.000000e+00, %sum" [vlsiModel.c:39]   --->   Operation 124 'fdiv' 'sum_1' <Predicate = true> <Delay = 7.20> <Core = "FDiv">   --->   Core 101 'FDiv' <Latency = 11> <II = 1> <Delay = 7.20> <FuncUnit> <Opcode : 'fdiv' 'frem'> <InPorts = 2> <OutPorts = 1>
ST_36 : Operation 125 [1/1] (1.35ns)   --->   "br label %5" [vlsiModel.c:40]   --->   Operation 125 'br' <Predicate = true> <Delay = 1.35>

State 37 <SV = 16> <Delay = 2.34>
ST_37 : Operation 126 [1/1] (0.00ns)   --->   "%l = phi i4 [ 0, %4 ], [ %l_1, %6 ]"   --->   Operation 126 'phi' 'l' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 127 [1/1] (0.00ns)   --->   "%l_cast = zext i4 %l to i64" [vlsiModel.c:40]   --->   Operation 127 'zext' 'l_cast' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 128 [1/1] (2.34ns)   --->   "%exitcond = icmp eq i64 %l_cast, %size_read" [vlsiModel.c:40]   --->   Operation 128 'icmp' 'exitcond' <Predicate = true> <Delay = 2.34> <Core = "Cmp">   --->   Core 25 'Cmp' <Latency = 0> <II = 1> <Delay = 2.34> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 129 [1/1] (1.49ns)   --->   "%l_1 = add i4 %l, 1" [vlsiModel.c:40]   --->   Operation 129 'add' 'l_1' <Predicate = true> <Delay = 1.49> <Core = "AddSub">   --->   Core 14 'AddSub' <Latency = 0> <II = 1> <Delay = 1.49> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_37 : Operation 130 [1/1] (0.00ns)   --->   "br i1 %exitcond, label %7, label %6" [vlsiModel.c:40]   --->   Operation 130 'br' <Predicate = true> <Delay = 0.00>
ST_37 : Operation 131 [1/1] (0.00ns)   --->   "%x_addr_4 = getelementptr [10 x float]* %x, i64 0, i64 %l_cast" [vlsiModel.c:42]   --->   Operation 131 'getelementptr' 'x_addr_4' <Predicate = (!exitcond)> <Delay = 0.00>
ST_37 : Operation 132 [2/2] (1.75ns)   --->   "%x_load_2 = load float* %x_addr_4, align 4" [vlsiModel.c:42]   --->   Operation 132 'load' 'x_load_2' <Predicate = (!exitcond)> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_37 : Operation 133 [1/1] (0.00ns)   --->   "ret void" [vlsiModel.c:44]   --->   Operation 133 'ret' <Predicate = (exitcond)> <Delay = 0.00>

State 38 <SV = 17> <Delay = 1.75>
ST_38 : Operation 134 [1/2] (1.75ns)   --->   "%x_load_2 = load float* %x_addr_4, align 4" [vlsiModel.c:42]   --->   Operation 134 'load' 'x_load_2' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>

State 39 <SV = 18> <Delay = 8.54>
ST_39 : Operation 135 [3/3] (8.54ns)   --->   "%tmp_s = fmul float %x_load_2, %sum_1" [vlsiModel.c:42]   --->   Operation 135 'fmul' 'tmp_s' <Predicate = true> <Delay = 8.54> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 2> <II = 1> <Delay = 8.54> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 40 <SV = 19> <Delay = 8.54>
ST_40 : Operation 136 [2/3] (8.54ns)   --->   "%tmp_s = fmul float %x_load_2, %sum_1" [vlsiModel.c:42]   --->   Operation 136 'fmul' 'tmp_s' <Predicate = true> <Delay = 8.54> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 2> <II = 1> <Delay = 8.54> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 41 <SV = 20> <Delay = 8.54>
ST_41 : Operation 137 [1/3] (8.54ns)   --->   "%tmp_s = fmul float %x_load_2, %sum_1" [vlsiModel.c:42]   --->   Operation 137 'fmul' 'tmp_s' <Predicate = true> <Delay = 8.54> <Core = "FMul">   --->   Core 100 'FMul' <Latency = 2> <II = 1> <Delay = 8.54> <FuncUnit> <Opcode : 'fmul'> <InPorts = 2> <OutPorts = 1>

State 42 <SV = 21> <Delay = 1.75>
ST_42 : Operation 138 [1/1] (1.75ns)   --->   "store float %tmp_s, float* %x_addr_4, align 4" [vlsiModel.c:42]   --->   Operation 138 'store' <Predicate = true> <Delay = 1.75> <Core = "RAM">   --->   Core 37 'RAM' <Latency = 1> <II = 1> <Delay = 1.75> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 10> <RAM>
ST_42 : Operation 139 [1/1] (0.00ns)   --->   "br label %5" [vlsiModel.c:40]   --->   Operation 139 'br' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 1.25ns.

 <State 1>: 1.75ns
The critical path consists of the following:
	'getelementptr' operation ('x_addr') [4]  (0 ns)
	'load' operation ('xmax', vlsiModel.c:19) on array 'x' [5]  (1.75 ns)

 <State 2>: 1.75ns
The critical path consists of the following:
	'load' operation ('xmax', vlsiModel.c:19) on array 'x' [5]  (1.75 ns)

 <State 3>: 3ns
The critical path consists of the following:
	'phi' operation ('i') with incoming values : ('i', vlsiModel.c:21) [8]  (0 ns)
	'add' operation ('i', vlsiModel.c:21) [11]  (3 ns)

 <State 4>: 8.64ns
The critical path consists of the following:
	'load' operation ('xmax', vlsiModel.c:23) on array 'x' [15]  (1.75 ns)
	'fcmp' operation ('tmp_7', vlsiModel.c:23) [29]  (5.31 ns)
	'and' operation ('tmp_1', vlsiModel.c:23) [30]  (0.8 ns)
	'select' operation ('xmax', vlsiModel.c:23) [31]  (0.773 ns)

 <State 5>: 2.34ns
The critical path consists of the following:
	'phi' operation ('j') with incoming values : ('j', vlsiModel.c:29) [36]  (0 ns)
	'icmp' operation ('exitcond2', vlsiModel.c:29) [38]  (2.34 ns)

 <State 6>: 8.27ns
The critical path consists of the following:
	'load' operation ('x_load', vlsiModel.c:31) on array 'x' [43]  (1.75 ns)
	'fsub' operation ('tmp_8', vlsiModel.c:31) [44]  (6.51 ns)

 <State 7>: 6.51ns
The critical path consists of the following:
	'fsub' operation ('tmp_8', vlsiModel.c:31) [44]  (6.51 ns)

 <State 8>: 6.51ns
The critical path consists of the following:
	'fsub' operation ('tmp_8', vlsiModel.c:31) [44]  (6.51 ns)

 <State 9>: 6.51ns
The critical path consists of the following:
	'fsub' operation ('tmp_8', vlsiModel.c:31) [44]  (6.51 ns)

 <State 10>: 6.51ns
The critical path consists of the following:
	'fsub' operation ('tmp_8', vlsiModel.c:31) [44]  (6.51 ns)

 <State 11>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 12>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 13>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 14>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 15>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 16>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 17>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 18>: 7.05ns
The critical path consists of the following:
	'fexp' operation ('tmp_9', vlsiModel.c:31) [45]  (7.05 ns)

 <State 19>: 1.75ns
The critical path consists of the following:
	'store' operation (vlsiModel.c:31) of variable 'tmp_9', vlsiModel.c:31 on array 'x' [46]  (1.75 ns)

 <State 20>: 7.21ns
The critical path consists of the following:
	'phi' operation ('sum') with incoming values : ('sum', vlsiModel.c:36) [51]  (0 ns)
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 21>: 8.27ns
The critical path consists of the following:
	'load' operation ('x_load_1', vlsiModel.c:36) on array 'x' [59]  (1.75 ns)
	'fadd' operation ('sum', vlsiModel.c:36) [60]  (6.51 ns)

 <State 22>: 6.51ns
The critical path consists of the following:
	'fadd' operation ('sum', vlsiModel.c:36) [60]  (6.51 ns)

 <State 23>: 6.51ns
The critical path consists of the following:
	'fadd' operation ('sum', vlsiModel.c:36) [60]  (6.51 ns)

 <State 24>: 6.51ns
The critical path consists of the following:
	'fadd' operation ('sum', vlsiModel.c:36) [60]  (6.51 ns)

 <State 25>: 6.51ns
The critical path consists of the following:
	'fadd' operation ('sum', vlsiModel.c:36) [60]  (6.51 ns)

 <State 26>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 27>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 28>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 29>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 30>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 31>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 32>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 33>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 34>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 35>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 36>: 7.21ns
The critical path consists of the following:
	'fdiv' operation ('sum', vlsiModel.c:39) [63]  (7.21 ns)

 <State 37>: 2.34ns
The critical path consists of the following:
	'phi' operation ('l') with incoming values : ('l', vlsiModel.c:40) [66]  (0 ns)
	'icmp' operation ('exitcond', vlsiModel.c:40) [68]  (2.34 ns)

 <State 38>: 1.75ns
The critical path consists of the following:
	'load' operation ('x_load_2', vlsiModel.c:42) on array 'x' [73]  (1.75 ns)

 <State 39>: 8.54ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', vlsiModel.c:42) [74]  (8.54 ns)

 <State 40>: 8.54ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', vlsiModel.c:42) [74]  (8.54 ns)

 <State 41>: 8.54ns
The critical path consists of the following:
	'fmul' operation ('tmp_s', vlsiModel.c:42) [74]  (8.54 ns)

 <State 42>: 1.75ns
The critical path consists of the following:
	'store' operation (vlsiModel.c:42) of variable 'tmp_s', vlsiModel.c:42 on array 'x' [75]  (1.75 ns)


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8
	State 9
	State 10
	State 11
	State 12
	State 13
	State 14
	State 15
	State 16
	State 17
	State 18
	State 19
	State 20
	State 21
	State 22
	State 23
	State 24
	State 25
	State 26
	State 27
	State 28
	State 29
	State 30
	State 31
	State 32
	State 33
	State 34
	State 35
	State 36
	State 37
	State 38
	State 39
	State 40
	State 41
	State 42


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
